/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : Q-2019.12
// Date      : Wed Jun 14 11:55:39 2023
/////////////////////////////////////////////////////////////


module RfTemp_2 ( clk, rst, In1, In2, In3, In4, In5, In6, In7, In8, In9, In10, 
        Out1, Out2, Out3, Out4, Out5, Out6, Out7, Out8, Out9, Out10 );
  input [19:0] In1;
  input [19:0] In2;
  input [19:0] In3;
  input [19:0] In4;
  input [19:0] In5;
  input [19:0] In6;
  input [19:0] In7;
  input [19:0] In8;
  input [19:0] In9;
  input [19:0] In10;
  output [19:0] Out1;
  output [19:0] Out2;
  output [19:0] Out3;
  output [19:0] Out4;
  output [19:0] Out5;
  output [19:0] Out6;
  output [19:0] Out7;
  output [19:0] Out8;
  output [19:0] Out9;
  output [19:0] Out10;
  input clk, rst;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26;

  DFFTRX1 \Out1_reg[18]  ( .D(In1[18]), .RN(n14), .CK(clk), .Q(Out1[18]) );
  DFFTRX1 \Out2_reg[18]  ( .D(In2[18]), .RN(n12), .CK(clk), .Q(Out2[18]) );
  DFFTRX1 \Out3_reg[18]  ( .D(In3[18]), .RN(n10), .CK(clk), .Q(Out3[18]) );
  DFFTRX1 \Out4_reg[18]  ( .D(In4[18]), .RN(n9), .CK(clk), .Q(Out4[18]) );
  DFFTRX1 \Out5_reg[18]  ( .D(In5[18]), .RN(n7), .CK(clk), .Q(Out5[18]) );
  DFFTRX1 \Out6_reg[18]  ( .D(In6[18]), .RN(n5), .CK(clk), .Q(Out6[18]) );
  DFFTRX1 \Out7_reg[18]  ( .D(In7[18]), .RN(n4), .CK(clk), .Q(Out7[18]) );
  DFFTRX1 \Out8_reg[18]  ( .D(In8[18]), .RN(n2), .CK(clk), .Q(Out8[18]) );
  DFFTRX1 \Out1_reg[17]  ( .D(In1[17]), .RN(n14), .CK(clk), .Q(Out1[17]) );
  DFFTRX1 \Out1_reg[16]  ( .D(In1[16]), .RN(n14), .CK(clk), .Q(Out1[16]) );
  DFFTRX1 \Out1_reg[15]  ( .D(In1[15]), .RN(n13), .CK(clk), .Q(Out1[15]) );
  DFFTRX1 \Out1_reg[14]  ( .D(In1[14]), .RN(n13), .CK(clk), .Q(Out1[14]) );
  DFFTRX1 \Out1_reg[13]  ( .D(In1[13]), .RN(n13), .CK(clk), .Q(Out1[13]) );
  DFFTRX1 \Out2_reg[17]  ( .D(In2[17]), .RN(n12), .CK(clk), .Q(Out2[17]) );
  DFFTRX1 \Out2_reg[16]  ( .D(In2[16]), .RN(n12), .CK(clk), .Q(Out2[16]) );
  DFFTRX1 \Out2_reg[15]  ( .D(In2[15]), .RN(n12), .CK(clk), .Q(Out2[15]) );
  DFFTRX1 \Out2_reg[14]  ( .D(In2[14]), .RN(n12), .CK(clk), .Q(Out2[14]) );
  DFFTRX1 \Out2_reg[13]  ( .D(In2[13]), .RN(n12), .CK(clk), .Q(Out2[13]) );
  DFFTRX1 \Out3_reg[17]  ( .D(In3[17]), .RN(n10), .CK(clk), .Q(Out3[17]) );
  DFFTRX1 \Out3_reg[16]  ( .D(In3[16]), .RN(n10), .CK(clk), .Q(Out3[16]) );
  DFFTRX1 \Out3_reg[15]  ( .D(In3[15]), .RN(n10), .CK(clk), .Q(Out3[15]) );
  DFFTRX1 \Out3_reg[14]  ( .D(In3[14]), .RN(n10), .CK(clk), .Q(Out3[14]) );
  DFFTRX1 \Out3_reg[13]  ( .D(In3[13]), .RN(n10), .CK(clk), .Q(Out3[13]) );
  DFFTRX1 \Out4_reg[17]  ( .D(In4[17]), .RN(n9), .CK(clk), .Q(Out4[17]) );
  DFFTRX1 \Out4_reg[16]  ( .D(In4[16]), .RN(n9), .CK(clk), .Q(Out4[16]) );
  DFFTRX1 \Out4_reg[15]  ( .D(In4[15]), .RN(n8), .CK(clk), .Q(Out4[15]) );
  DFFTRX1 \Out4_reg[14]  ( .D(In4[14]), .RN(n8), .CK(clk), .Q(Out4[14]) );
  DFFTRX1 \Out4_reg[13]  ( .D(In4[13]), .RN(n8), .CK(clk), .Q(Out4[13]) );
  DFFTRX1 \Out5_reg[17]  ( .D(In5[17]), .RN(n7), .CK(clk), .Q(Out5[17]) );
  DFFTRX1 \Out5_reg[16]  ( .D(In5[16]), .RN(n7), .CK(clk), .Q(Out5[16]) );
  DFFTRX1 \Out5_reg[15]  ( .D(In5[15]), .RN(n7), .CK(clk), .Q(Out5[15]) );
  DFFTRX1 \Out5_reg[14]  ( .D(In5[14]), .RN(n7), .CK(clk), .Q(Out5[14]) );
  DFFTRX1 \Out5_reg[13]  ( .D(In5[13]), .RN(n7), .CK(clk), .Q(Out5[13]) );
  DFFTRX1 \Out6_reg[17]  ( .D(In6[17]), .RN(n5), .CK(clk), .Q(Out6[17]) );
  DFFTRX1 \Out6_reg[16]  ( .D(In6[16]), .RN(n5), .CK(clk), .Q(Out6[16]) );
  DFFTRX1 \Out6_reg[15]  ( .D(In6[15]), .RN(n5), .CK(clk), .Q(Out6[15]) );
  DFFTRX1 \Out6_reg[14]  ( .D(In6[14]), .RN(n5), .CK(clk), .Q(Out6[14]) );
  DFFTRX1 \Out6_reg[13]  ( .D(In6[13]), .RN(n5), .CK(clk), .Q(Out6[13]) );
  DFFTRX1 \Out7_reg[17]  ( .D(In7[17]), .RN(n4), .CK(clk), .Q(Out7[17]) );
  DFFTRX1 \Out7_reg[16]  ( .D(In7[16]), .RN(n4), .CK(clk), .Q(Out7[16]) );
  DFFTRX1 \Out7_reg[15]  ( .D(In7[15]), .RN(n3), .CK(clk), .Q(Out7[15]) );
  DFFTRX1 \Out7_reg[14]  ( .D(In7[14]), .RN(n3), .CK(clk), .Q(Out7[14]) );
  DFFTRX1 \Out7_reg[13]  ( .D(In7[13]), .RN(n3), .CK(clk), .Q(Out7[13]) );
  DFFTRX1 \Out8_reg[17]  ( .D(In8[17]), .RN(n2), .CK(clk), .Q(Out8[17]) );
  DFFTRX1 \Out8_reg[16]  ( .D(In8[16]), .RN(n2), .CK(clk), .Q(Out8[16]) );
  DFFTRX1 \Out8_reg[15]  ( .D(In8[15]), .RN(n2), .CK(clk), .Q(Out8[15]) );
  DFFTRX1 \Out8_reg[14]  ( .D(In8[14]), .RN(n2), .CK(clk), .Q(Out8[14]) );
  DFFTRX1 \Out8_reg[13]  ( .D(In8[13]), .RN(n2), .CK(clk), .Q(Out8[13]) );
  DFFTRX1 \Out1_reg[12]  ( .D(In1[12]), .RN(n13), .CK(clk), .Q(Out1[12]) );
  DFFTRX1 \Out1_reg[11]  ( .D(In1[11]), .RN(n13), .CK(clk), .Q(Out1[11]) );
  DFFTRX1 \Out1_reg[10]  ( .D(In1[10]), .RN(n13), .CK(clk), .Q(Out1[10]) );
  DFFTRX1 \Out1_reg[9]  ( .D(In1[9]), .RN(n13), .CK(clk), .Q(Out1[9]) );
  DFFTRX1 \Out2_reg[12]  ( .D(In2[12]), .RN(n12), .CK(clk), .Q(Out2[12]) );
  DFFTRX1 \Out2_reg[11]  ( .D(In2[11]), .RN(n11), .CK(clk), .Q(Out2[11]) );
  DFFTRX1 \Out2_reg[10]  ( .D(In2[10]), .RN(n11), .CK(clk), .Q(Out2[10]) );
  DFFTRX1 \Out2_reg[9]  ( .D(In2[9]), .RN(n11), .CK(clk), .Q(Out2[9]) );
  DFFTRX1 \Out3_reg[12]  ( .D(In3[12]), .RN(n10), .CK(clk), .Q(Out3[12]) );
  DFFTRX1 \Out3_reg[11]  ( .D(In3[11]), .RN(n10), .CK(clk), .Q(Out3[11]) );
  DFFTRX1 \Out3_reg[10]  ( .D(In3[10]), .RN(n10), .CK(clk), .Q(Out3[10]) );
  DFFTRX1 \Out3_reg[9]  ( .D(In3[9]), .RN(n10), .CK(clk), .Q(Out3[9]) );
  DFFTRX1 \Out4_reg[12]  ( .D(In4[12]), .RN(n8), .CK(clk), .Q(Out4[12]) );
  DFFTRX1 \Out4_reg[11]  ( .D(In4[11]), .RN(n8), .CK(clk), .Q(Out4[11]) );
  DFFTRX1 \Out4_reg[10]  ( .D(In4[10]), .RN(n8), .CK(clk), .Q(Out4[10]) );
  DFFTRX1 \Out4_reg[9]  ( .D(In4[9]), .RN(n8), .CK(clk), .Q(Out4[9]) );
  DFFTRX1 \Out5_reg[12]  ( .D(In5[12]), .RN(n7), .CK(clk), .Q(Out5[12]) );
  DFFTRX1 \Out5_reg[11]  ( .D(In5[11]), .RN(n6), .CK(clk), .Q(Out5[11]) );
  DFFTRX1 \Out5_reg[10]  ( .D(In5[10]), .RN(n6), .CK(clk), .Q(Out5[10]) );
  DFFTRX1 \Out5_reg[9]  ( .D(In5[9]), .RN(n6), .CK(clk), .Q(Out5[9]) );
  DFFTRX1 \Out6_reg[12]  ( .D(In6[12]), .RN(n5), .CK(clk), .Q(Out6[12]) );
  DFFTRX1 \Out6_reg[11]  ( .D(In6[11]), .RN(n5), .CK(clk), .Q(Out6[11]) );
  DFFTRX1 \Out6_reg[10]  ( .D(In6[10]), .RN(n5), .CK(clk), .Q(Out6[10]) );
  DFFTRX1 \Out6_reg[9]  ( .D(In6[9]), .RN(n5), .CK(clk), .Q(Out6[9]) );
  DFFTRX1 \Out7_reg[12]  ( .D(In7[12]), .RN(n3), .CK(clk), .Q(Out7[12]) );
  DFFTRX1 \Out7_reg[11]  ( .D(In7[11]), .RN(n3), .CK(clk), .Q(Out7[11]) );
  DFFTRX1 \Out7_reg[10]  ( .D(In7[10]), .RN(n3), .CK(clk), .Q(Out7[10]) );
  DFFTRX1 \Out7_reg[9]  ( .D(In7[9]), .RN(n3), .CK(clk), .Q(Out7[9]) );
  DFFTRX1 \Out8_reg[12]  ( .D(In8[12]), .RN(n2), .CK(clk), .Q(Out8[12]) );
  DFFTRX1 \Out8_reg[11]  ( .D(In8[11]), .RN(n1), .CK(clk), .Q(Out8[11]) );
  DFFTRX1 \Out8_reg[10]  ( .D(In8[10]), .RN(n1), .CK(clk), .Q(Out8[10]) );
  DFFTRX1 \Out8_reg[9]  ( .D(In8[9]), .RN(n1), .CK(clk), .Q(Out8[9]) );
  DFFTRX1 \Out1_reg[8]  ( .D(In1[8]), .RN(n13), .CK(clk), .Q(Out1[8]) );
  DFFTRX1 \Out1_reg[7]  ( .D(In1[7]), .RN(n13), .CK(clk), .Q(Out1[7]) );
  DFFTRX1 \Out2_reg[8]  ( .D(In2[8]), .RN(n11), .CK(clk), .Q(Out2[8]) );
  DFFTRX1 \Out2_reg[7]  ( .D(In2[7]), .RN(n11), .CK(clk), .Q(Out2[7]) );
  DFFTRX1 \Out2_reg[5]  ( .D(In2[5]), .RN(n11), .CK(clk), .Q(Out2[5]) );
  DFFTRX1 \Out2_reg[4]  ( .D(In2[4]), .RN(n11), .CK(clk), .Q(Out2[4]) );
  DFFTRX1 \Out3_reg[8]  ( .D(In3[8]), .RN(n10), .CK(clk), .Q(Out3[8]) );
  DFFTRX1 \Out3_reg[7]  ( .D(In3[7]), .RN(n9), .CK(clk), .Q(Out3[7]) );
  DFFTRX1 \Out3_reg[5]  ( .D(In3[5]), .RN(n9), .CK(clk), .Q(Out3[5]) );
  DFFTRX1 \Out3_reg[4]  ( .D(In3[4]), .RN(n9), .CK(clk), .Q(Out3[4]) );
  DFFTRX1 \Out4_reg[8]  ( .D(In4[8]), .RN(n8), .CK(clk), .Q(Out4[8]) );
  DFFTRX1 \Out4_reg[7]  ( .D(In4[7]), .RN(n8), .CK(clk), .Q(Out4[7]) );
  DFFTRX1 \Out4_reg[5]  ( .D(In4[5]), .RN(n8), .CK(clk), .Q(Out4[5]) );
  DFFTRX1 \Out4_reg[4]  ( .D(In4[4]), .RN(n8), .CK(clk), .Q(Out4[4]) );
  DFFTRX1 \Out5_reg[8]  ( .D(In5[8]), .RN(n6), .CK(clk), .Q(Out5[8]) );
  DFFTRX1 \Out5_reg[7]  ( .D(In5[7]), .RN(n6), .CK(clk), .Q(Out5[7]) );
  DFFTRX1 \Out5_reg[5]  ( .D(In5[5]), .RN(n6), .CK(clk), .Q(Out5[5]) );
  DFFTRX1 \Out5_reg[4]  ( .D(In5[4]), .RN(n6), .CK(clk), .Q(Out5[4]) );
  DFFTRX1 \Out6_reg[8]  ( .D(In6[8]), .RN(n5), .CK(clk), .Q(Out6[8]) );
  DFFTRX1 \Out6_reg[7]  ( .D(In6[7]), .RN(n4), .CK(clk), .Q(Out6[7]) );
  DFFTRX1 \Out6_reg[5]  ( .D(In6[5]), .RN(n4), .CK(clk), .Q(Out6[5]) );
  DFFTRX1 \Out6_reg[4]  ( .D(In6[4]), .RN(n4), .CK(clk), .Q(Out6[4]) );
  DFFTRX1 \Out7_reg[8]  ( .D(In7[8]), .RN(n3), .CK(clk), .Q(Out7[8]) );
  DFFTRX1 \Out7_reg[7]  ( .D(In7[7]), .RN(n3), .CK(clk), .Q(Out7[7]) );
  DFFTRX1 \Out7_reg[5]  ( .D(In7[5]), .RN(n3), .CK(clk), .Q(Out7[5]) );
  DFFTRX1 \Out7_reg[4]  ( .D(In7[4]), .RN(n3), .CK(clk), .Q(Out7[4]) );
  DFFTRX1 \Out8_reg[8]  ( .D(In8[8]), .RN(n1), .CK(clk), .Q(Out8[8]) );
  DFFTRX1 \Out8_reg[7]  ( .D(In8[7]), .RN(n1), .CK(clk), .Q(Out8[7]) );
  DFFTRX1 \Out8_reg[5]  ( .D(In8[5]), .RN(n1), .CK(clk), .Q(Out8[5]) );
  DFFTRX1 \Out8_reg[4]  ( .D(In8[4]), .RN(n1), .CK(clk), .Q(Out8[4]) );
  DFFTRX1 \Out9_reg[18]  ( .D(In9[18]), .RN(n17), .CK(clk), .Q(Out9[18]) );
  DFFTRX1 \Out9_reg[17]  ( .D(In9[17]), .RN(n17), .CK(clk), .Q(Out9[17]) );
  DFFTRX1 \Out9_reg[16]  ( .D(In9[16]), .RN(n17), .CK(clk), .Q(Out9[16]) );
  DFFTRX1 \Out9_reg[15]  ( .D(In9[15]), .RN(n17), .CK(clk), .Q(Out9[15]) );
  DFFTRX1 \Out9_reg[14]  ( .D(In9[14]), .RN(n17), .CK(clk), .Q(Out9[14]) );
  DFFTRX1 \Out9_reg[13]  ( .D(In9[13]), .RN(n17), .CK(clk), .Q(Out9[13]) );
  DFFTRX1 \Out9_reg[12]  ( .D(In9[12]), .RN(n17), .CK(clk), .Q(Out9[12]) );
  DFFTRX1 \Out9_reg[11]  ( .D(In9[11]), .RN(n16), .CK(clk), .Q(Out9[11]) );
  DFFTRX1 \Out9_reg[10]  ( .D(In9[10]), .RN(n16), .CK(clk), .Q(Out9[10]) );
  DFFTRX1 \Out9_reg[9]  ( .D(In9[9]), .RN(n16), .CK(clk), .Q(Out9[9]) );
  DFFTRX1 \Out9_reg[8]  ( .D(In9[8]), .RN(n16), .CK(clk), .Q(Out9[8]) );
  DFFTRX1 \Out9_reg[7]  ( .D(In9[7]), .RN(n16), .CK(clk), .Q(Out9[7]) );
  DFFTRX1 \Out9_reg[6]  ( .D(In9[6]), .RN(n16), .CK(clk), .Q(Out9[6]) );
  DFFTRX1 \Out9_reg[5]  ( .D(In9[5]), .RN(n16), .CK(clk), .Q(Out9[5]) );
  DFFTRX1 \Out9_reg[4]  ( .D(In9[4]), .RN(n16), .CK(clk), .Q(Out9[4]) );
  DFFTRX1 \Out9_reg[3]  ( .D(In9[3]), .RN(n16), .CK(clk), .Q(Out9[3]) );
  DFFTRX1 \Out9_reg[2]  ( .D(In9[2]), .RN(n16), .CK(clk), .Q(Out9[2]) );
  DFFTRX1 \Out9_reg[1]  ( .D(In9[1]), .RN(n16), .CK(clk), .Q(Out9[1]) );
  DFFTRX1 \Out9_reg[0]  ( .D(In9[0]), .RN(n16), .CK(clk), .Q(Out9[0]) );
  DFFTRX1 \Out10_reg[19]  ( .D(In10[19]), .RN(n15), .CK(clk), .Q(Out10[19]) );
  DFFTRX1 \Out10_reg[18]  ( .D(In10[18]), .RN(n15), .CK(clk), .Q(Out10[18]) );
  DFFTRX1 \Out10_reg[17]  ( .D(In10[17]), .RN(n15), .CK(clk), .Q(Out10[17]) );
  DFFTRX1 \Out10_reg[16]  ( .D(In10[16]), .RN(n15), .CK(clk), .Q(Out10[16]) );
  DFFTRX1 \Out10_reg[15]  ( .D(In10[15]), .RN(n15), .CK(clk), .Q(Out10[15]) );
  DFFTRX1 \Out10_reg[14]  ( .D(In10[14]), .RN(n15), .CK(clk), .Q(Out10[14]) );
  DFFTRX1 \Out10_reg[13]  ( .D(In10[13]), .RN(n15), .CK(clk), .Q(Out10[13]) );
  DFFTRX1 \Out10_reg[12]  ( .D(In10[12]), .RN(n15), .CK(clk), .Q(Out10[12]) );
  DFFTRX1 \Out10_reg[11]  ( .D(In10[11]), .RN(n15), .CK(clk), .Q(Out10[11]) );
  DFFTRX1 \Out10_reg[10]  ( .D(In10[10]), .RN(n15), .CK(clk), .Q(Out10[10]) );
  DFFTRX1 \Out10_reg[9]  ( .D(In10[9]), .RN(n15), .CK(clk), .Q(Out10[9]) );
  DFFTRX1 \Out10_reg[8]  ( .D(In10[8]), .RN(n15), .CK(clk), .Q(Out10[8]) );
  DFFTRX1 \Out10_reg[7]  ( .D(In10[7]), .RN(n14), .CK(clk), .Q(Out10[7]) );
  DFFTRX1 \Out10_reg[6]  ( .D(In10[6]), .RN(n14), .CK(clk), .Q(Out10[6]) );
  DFFTRX1 \Out10_reg[5]  ( .D(In10[5]), .RN(n14), .CK(clk), .Q(Out10[5]) );
  DFFTRX1 \Out10_reg[4]  ( .D(In10[4]), .RN(n14), .CK(clk), .Q(Out10[4]) );
  DFFTRX1 \Out10_reg[3]  ( .D(In10[3]), .RN(n14), .CK(clk), .Q(Out10[3]) );
  DFFTRX1 \Out10_reg[2]  ( .D(In10[2]), .RN(n14), .CK(clk), .Q(Out10[2]) );
  DFFTRX1 \Out10_reg[1]  ( .D(In10[1]), .RN(n14), .CK(clk), .Q(Out10[1]) );
  DFFTRX1 \Out10_reg[0]  ( .D(In10[0]), .RN(n14), .CK(clk), .Q(Out10[0]) );
  DFFTRX1 \Out1_reg[19]  ( .D(In1[19]), .RN(n14), .CK(clk), .Q(Out1[19]) );
  DFFTRX1 \Out3_reg[19]  ( .D(In3[19]), .RN(n10), .CK(clk), .Q(Out3[19]) );
  DFFTRX1 \Out4_reg[19]  ( .D(In4[19]), .RN(n9), .CK(clk), .Q(Out4[19]) );
  DFFTRX1 \Out5_reg[19]  ( .D(In5[19]), .RN(n7), .CK(clk), .Q(Out5[19]) );
  DFFTRX1 \Out6_reg[19]  ( .D(In6[19]), .RN(n5), .CK(clk), .Q(Out6[19]) );
  DFFTRX1 \Out7_reg[19]  ( .D(In7[19]), .RN(n4), .CK(clk), .Q(Out7[19]) );
  DFFTRX1 \Out8_reg[19]  ( .D(In8[19]), .RN(n2), .CK(clk), .Q(Out8[19]) );
  DFFTRXL \Out1_reg[6]  ( .D(In1[6]), .RN(n13), .CK(clk), .Q(Out1[6]) );
  DFFTRXL \Out2_reg[6]  ( .D(In2[6]), .RN(n11), .CK(clk), .Q(Out2[6]) );
  DFFTRXL \Out3_reg[6]  ( .D(In3[6]), .RN(n9), .CK(clk), .Q(Out3[6]) );
  DFFTRXL \Out4_reg[6]  ( .D(In4[6]), .RN(n8), .CK(clk), .Q(Out4[6]) );
  DFFTRXL \Out5_reg[6]  ( .D(In5[6]), .RN(n6), .CK(clk), .Q(Out5[6]) );
  DFFTRXL \Out6_reg[6]  ( .D(In6[6]), .RN(n4), .CK(clk), .Q(Out6[6]) );
  DFFTRXL \Out7_reg[6]  ( .D(In7[6]), .RN(n3), .CK(clk), .Q(Out7[6]) );
  DFFTRXL \Out8_reg[6]  ( .D(In8[6]), .RN(n1), .CK(clk), .Q(Out8[6]) );
  DFFTRXL \Out3_reg[3]  ( .D(In3[3]), .RN(n9), .CK(clk), .Q(Out3[3]) );
  DFFTRXL \Out4_reg[3]  ( .D(In4[3]), .RN(n7), .CK(clk), .Q(Out4[3]) );
  DFFTRXL \Out5_reg[3]  ( .D(In5[3]), .RN(n6), .CK(clk), .Q(Out5[3]) );
  DFFTRXL \Out6_reg[3]  ( .D(In6[3]), .RN(n4), .CK(clk), .Q(Out6[3]) );
  DFFTRXL \Out7_reg[3]  ( .D(In7[3]), .RN(n2), .CK(clk), .Q(Out7[3]) );
  DFFTRXL \Out8_reg[3]  ( .D(In8[3]), .RN(n1), .CK(clk), .Q(Out8[3]) );
  DFFTRXL \Out6_reg[2]  ( .D(In6[2]), .RN(n4), .CK(clk), .Q(Out6[2]) );
  DFFTRXL \Out7_reg[2]  ( .D(In7[2]), .RN(n2), .CK(clk), .Q(Out7[2]) );
  DFFTRXL \Out8_reg[2]  ( .D(In8[2]), .RN(n1), .CK(clk), .Q(Out8[2]) );
  DFFTRX1 \Out1_reg[5]  ( .D(In1[5]), .RN(n13), .CK(clk), .Q(Out1[5]) );
  DFFTRX1 \Out1_reg[1]  ( .D(In1[1]), .RN(n12), .CK(clk), .Q(Out1[1]) );
  DFFTRX1 \Out2_reg[1]  ( .D(In2[1]), .RN(n11), .CK(clk), .Q(Out2[1]) );
  DFFTRX1 \Out3_reg[1]  ( .D(In3[1]), .RN(n9), .CK(clk), .Q(Out3[1]) );
  DFFTRX1 \Out4_reg[1]  ( .D(In4[1]), .RN(n7), .CK(clk), .Q(Out4[1]) );
  DFFTRX1 \Out5_reg[1]  ( .D(In5[1]), .RN(n6), .CK(clk), .Q(Out5[1]) );
  DFFTRX1 \Out6_reg[1]  ( .D(In6[1]), .RN(n4), .CK(clk), .Q(Out6[1]) );
  DFFTRX1 \Out7_reg[1]  ( .D(In7[1]), .RN(n2), .CK(clk), .Q(Out7[1]) );
  DFFTRX1 \Out8_reg[1]  ( .D(In8[1]), .RN(n1), .CK(clk), .Q(Out8[1]) );
  DFFTRX1 \Out2_reg[3]  ( .D(In2[3]), .RN(n11), .CK(clk), .Q(Out2[3]) );
  DFFTRX1 \Out2_reg[2]  ( .D(In2[2]), .RN(n11), .CK(clk), .Q(Out2[2]) );
  DFFTRX2 \Out1_reg[0]  ( .D(In1[0]), .RN(n12), .CK(clk), .Q(Out1[0]) );
  DFFTRX1 \Out1_reg[3]  ( .D(In1[3]), .RN(n12), .CK(clk), .Q(Out1[3]) );
  DFFTRXL \Out1_reg[2]  ( .D(In1[2]), .RN(n12), .CK(clk), .Q(Out1[2]) );
  DFFTRX1 \Out2_reg[0]  ( .D(In2[0]), .RN(n11), .CK(clk), .Q(Out2[0]) );
  DFFTRX1 \Out3_reg[2]  ( .D(In3[2]), .RN(n9), .CK(clk), .Q(Out3[2]) );
  DFFTRX1 \Out4_reg[2]  ( .D(In4[2]), .RN(n7), .CK(clk), .Q(Out4[2]) );
  DFFTRX1 \Out5_reg[2]  ( .D(In5[2]), .RN(n6), .CK(clk), .Q(Out5[2]) );
  DFFTRX1 \Out8_reg[0]  ( .D(In8[0]), .RN(n1), .CK(clk), .Q(Out8[0]) );
  DFFTRX1 \Out1_reg[4]  ( .D(In1[4]), .RN(n13), .CK(clk), .Q(Out1[4]) );
  DFFTRX1 \Out6_reg[0]  ( .D(In6[0]), .RN(n4), .CK(clk), .Q(Out6[0]) );
  DFFTRX1 \Out3_reg[0]  ( .D(In3[0]), .RN(n9), .CK(clk), .Q(Out3[0]) );
  DFFTRX1 \Out4_reg[0]  ( .D(In4[0]), .RN(n7), .CK(clk), .Q(Out4[0]) );
  DFFTRX1 \Out5_reg[0]  ( .D(In5[0]), .RN(n6), .CK(clk), .Q(Out5[0]) );
  DFFTRX1 \Out9_reg[19]  ( .D(In9[19]), .RN(n17), .CK(clk), .Q(Out9[19]) );
  DFFTRX1 \Out2_reg[19]  ( .D(In2[19]), .RN(n12), .CK(clk), .Q(Out2[19]) );
  DFFTRX4 \Out7_reg[0]  ( .D(In7[0]), .RN(n2), .CK(clk), .Q(Out7[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n26) );
  CLKBUFX3 U4 ( .A(n21), .Y(n2) );
  CLKBUFX3 U5 ( .A(n21), .Y(n3) );
  CLKBUFX3 U6 ( .A(n22), .Y(n4) );
  CLKBUFX3 U7 ( .A(n21), .Y(n5) );
  CLKBUFX3 U8 ( .A(n20), .Y(n6) );
  CLKBUFX3 U9 ( .A(n20), .Y(n7) );
  CLKBUFX3 U10 ( .A(n19), .Y(n8) );
  CLKBUFX3 U11 ( .A(n19), .Y(n9) );
  CLKBUFX3 U12 ( .A(n20), .Y(n10) );
  CLKBUFX3 U13 ( .A(n19), .Y(n11) );
  CLKBUFX3 U14 ( .A(n18), .Y(n12) );
  CLKBUFX3 U15 ( .A(n25), .Y(n13) );
  CLKBUFX3 U16 ( .A(n18), .Y(n14) );
  CLKBUFX3 U17 ( .A(n22), .Y(n15) );
  CLKBUFX3 U18 ( .A(n18), .Y(n16) );
  CLKBUFX3 U19 ( .A(n18), .Y(n17) );
  CLKBUFX3 U20 ( .A(n22), .Y(n1) );
  CLKBUFX3 U21 ( .A(n23), .Y(n22) );
  CLKBUFX3 U22 ( .A(n23), .Y(n21) );
  CLKBUFX3 U23 ( .A(n24), .Y(n20) );
  CLKBUFX3 U24 ( .A(n24), .Y(n19) );
  CLKBUFX3 U25 ( .A(n25), .Y(n18) );
  CLKBUFX3 U26 ( .A(n26), .Y(n23) );
  CLKBUFX3 U27 ( .A(n26), .Y(n24) );
  CLKBUFX3 U28 ( .A(n26), .Y(n25) );
endmodule


module PE_71_DW01_add_0_DW01_add_71 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  NAND3X6 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[16]) );
  NAND2X6 U2 ( .A(A[15]), .B(carry[15]), .Y(n9) );
  NAND2X1 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND3X2 U4 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2X1 U5 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND2X2 U6 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U8 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U9 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U10 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U11 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U12 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U13 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  XOR3XL U14 ( .A(carry[15]), .B(A[15]), .C(B[15]), .Y(SUM[15]) );
  NAND2X4 U15 ( .A(B[15]), .B(carry[15]), .Y(n8) );
  NAND2X4 U16 ( .A(A[15]), .B(B[15]), .Y(n10) );
  NAND2XL U17 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U18 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U19 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U20 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_71_DW_mult_tc_0_DW_mult_tc_71 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_71 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_71_DW01_add_0_DW01_add_71 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_71_DW_mult_tc_0_DW_mult_tc_71 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n4), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n1), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_70_DW01_add_0_DW01_add_70 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  NAND3X6 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[16]) );
  NAND2X6 U2 ( .A(A[15]), .B(carry[15]), .Y(n9) );
  NAND2X1 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND3X2 U4 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2X1 U5 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND2X2 U6 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U8 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U9 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U10 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U11 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U12 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U13 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  XOR3XL U14 ( .A(carry[15]), .B(A[15]), .C(B[15]), .Y(SUM[15]) );
  NAND2X4 U15 ( .A(B[15]), .B(carry[15]), .Y(n8) );
  NAND2X4 U16 ( .A(A[15]), .B(B[15]), .Y(n10) );
  NAND2XL U17 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U18 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U19 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U20 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_70_DW_mult_tc_0_DW_mult_tc_70 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_70 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_70_DW01_add_0_DW01_add_70 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_70_DW_mult_tc_0_DW_mult_tc_70 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_69_DW01_add_0_DW01_add_69 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  NAND3X6 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[16]) );
  NAND2X6 U2 ( .A(A[15]), .B(carry[15]), .Y(n9) );
  NAND2X1 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND3X2 U4 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2X1 U5 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND2X2 U6 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U8 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U9 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U10 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U11 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U12 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U13 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  XOR3XL U14 ( .A(carry[15]), .B(A[15]), .C(B[15]), .Y(SUM[15]) );
  NAND2X4 U15 ( .A(B[15]), .B(carry[15]), .Y(n8) );
  NAND2X4 U16 ( .A(A[15]), .B(B[15]), .Y(n10) );
  NAND2XL U17 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U18 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U19 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U20 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_69_DW_mult_tc_0_DW_mult_tc_69 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_69 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_69_DW01_add_0_DW01_add_69 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_69_DW_mult_tc_0_DW_mult_tc_69 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_68_DW01_add_0_DW01_add_68 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  NAND3X6 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[16]) );
  NAND2X6 U2 ( .A(A[15]), .B(carry[15]), .Y(n9) );
  NAND2X1 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND3X2 U4 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2X1 U5 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND2X2 U6 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U8 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U9 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U10 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U11 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U12 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U13 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  XOR3XL U14 ( .A(carry[15]), .B(A[15]), .C(B[15]), .Y(SUM[15]) );
  NAND2X4 U15 ( .A(B[15]), .B(carry[15]), .Y(n8) );
  NAND2X4 U16 ( .A(A[15]), .B(B[15]), .Y(n10) );
  NAND2XL U17 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U18 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U19 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U20 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_68_DW_mult_tc_0_DW_mult_tc_68 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_68 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_68_DW01_add_0_DW01_add_68 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_68_DW_mult_tc_0_DW_mult_tc_68 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_67_DW01_add_0_DW01_add_67 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  NAND3X6 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[16]) );
  NAND2X6 U2 ( .A(A[15]), .B(carry[15]), .Y(n9) );
  NAND2X1 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND3X2 U4 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2X1 U5 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND2X2 U6 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U8 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U9 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U10 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U11 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U12 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U13 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  XOR3XL U14 ( .A(carry[15]), .B(A[15]), .C(B[15]), .Y(SUM[15]) );
  NAND2X4 U15 ( .A(B[15]), .B(carry[15]), .Y(n8) );
  NAND2X4 U16 ( .A(A[15]), .B(B[15]), .Y(n10) );
  NAND2XL U17 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U18 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U19 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U20 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_67_DW_mult_tc_0_DW_mult_tc_67 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_67 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_67_DW01_add_0_DW01_add_67 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_67_DW_mult_tc_0_DW_mult_tc_67 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_66_DW01_add_0_DW01_add_66 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  NAND2X1 U1 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U3 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  XOR3X1 U4 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U5 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2X1 U6 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U7 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U8 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U9 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U10 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U11 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2XL U12 ( .A(B[17]), .B(carry[17]), .Y(n8) );
  NAND2XL U13 ( .A(A[17]), .B(carry[17]), .Y(n9) );
  NAND2XL U14 ( .A(A[17]), .B(B[17]), .Y(n10) );
  NAND3X1 U15 ( .A(n8), .B(n9), .C(n10), .Y(carry[18]) );
  XOR3XL U16 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U17 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_66_DW_mult_tc_0_DW_mult_tc_66 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_66 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_66_DW01_add_0_DW01_add_66 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_66_DW_mult_tc_0_DW_mult_tc_66 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_65_DW01_add_0_DW01_add_65 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [19:1] carry;

  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  XOR2X1 U1 ( .A(carry[19]), .B(n2), .Y(SUM[19]) );
  XOR2X1 U2 ( .A(B[19]), .B(A[19]), .Y(n2) );
  NAND2X1 U3 ( .A(A[1]), .B(B[1]), .Y(n5) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U5 ( .A(n1), .B(A[1]), .Y(n3) );
  XOR2XL U6 ( .A(B[1]), .B(n3), .Y(SUM[1]) );
  NAND2X2 U7 ( .A(n1), .B(B[1]), .Y(n4) );
  NAND2X4 U8 ( .A(A[1]), .B(n1), .Y(n6) );
  NAND3X2 U9 ( .A(n4), .B(n5), .C(n6), .Y(carry[2]) );
  XOR2XL U10 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_65_DW_mult_tc_0_DW_mult_tc_65 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_65 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_65_DW01_add_0_DW01_add_65 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_65_DW_mult_tc_0_DW_mult_tc_65 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_64_DW01_add_0_DW01_add_64 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_64_DW_mult_tc_0_DW_mult_tc_64 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_64 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_64_DW01_add_0_DW01_add_64 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_64_DW_mult_tc_0_DW_mult_tc_64 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_63_DW01_add_0_DW01_add_63 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [19:1] carry;

  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  XOR2X1 U1 ( .A(carry[19]), .B(n2), .Y(SUM[19]) );
  XOR2X1 U2 ( .A(B[19]), .B(A[19]), .Y(n2) );
  NAND2X1 U3 ( .A(A[1]), .B(B[1]), .Y(n5) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U5 ( .A(n1), .B(A[1]), .Y(n3) );
  XOR2XL U6 ( .A(B[1]), .B(n3), .Y(SUM[1]) );
  NAND2X2 U7 ( .A(n1), .B(B[1]), .Y(n4) );
  NAND2X4 U8 ( .A(A[1]), .B(n1), .Y(n6) );
  NAND3X2 U9 ( .A(n4), .B(n5), .C(n6), .Y(carry[2]) );
  XOR2XL U10 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_63_DW_mult_tc_0_DW_mult_tc_63 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_63 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_63_DW01_add_0_DW01_add_63 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_63_DW_mult_tc_0_DW_mult_tc_63 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_62_DW01_add_0_DW01_add_62 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_62_DW_mult_tc_0_DW_mult_tc_62 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_62 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_62_DW01_add_0_DW01_add_62 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_62_DW_mult_tc_0_DW_mult_tc_62 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_61_DW01_add_0_DW01_add_61 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_61_DW_mult_tc_0_DW_mult_tc_61 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_61 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_61_DW01_add_0_DW01_add_61 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_61_DW_mult_tc_0_DW_mult_tc_61 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_60_DW01_add_0_DW01_add_60 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_60_DW_mult_tc_0_DW_mult_tc_60 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_60 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_60_DW01_add_0_DW01_add_60 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_60_DW_mult_tc_0_DW_mult_tc_60 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_59_DW01_add_0_DW01_add_59 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_59_DW_mult_tc_0_DW_mult_tc_59 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_59 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_59_DW01_add_0_DW01_add_59 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_59_DW_mult_tc_0_DW_mult_tc_59 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_58_DW01_add_0_DW01_add_58 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_58_DW_mult_tc_0_DW_mult_tc_58 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_58 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_58_DW01_add_0_DW01_add_58 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_58_DW_mult_tc_0_DW_mult_tc_58 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_57_DW01_add_0_DW01_add_57 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_57_DW_mult_tc_0_DW_mult_tc_57 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_57 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_57_DW01_add_0_DW01_add_57 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_57_DW_mult_tc_0_DW_mult_tc_57 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_56_DW01_add_0_DW01_add_56 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X2 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_56_DW_mult_tc_0_DW_mult_tc_56 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_56 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_56_DW01_add_0_DW01_add_56 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_56_DW_mult_tc_0_DW_mult_tc_56 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_55_DW01_add_0_DW01_add_55 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_55_DW_mult_tc_0_DW_mult_tc_55 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_55 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_55_DW01_add_0_DW01_add_55 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_55_DW_mult_tc_0_DW_mult_tc_55 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_54_DW01_add_0_DW01_add_54 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X2 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_54_DW_mult_tc_0_DW_mult_tc_54 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_54 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_54_DW01_add_0_DW01_add_54 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_54_DW_mult_tc_0_DW_mult_tc_54 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_53_DW01_add_0_DW01_add_53 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_53_DW_mult_tc_0_DW_mult_tc_53 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_53 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_53_DW01_add_0_DW01_add_53 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_53_DW_mult_tc_0_DW_mult_tc_53 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_52_DW01_add_0_DW01_add_52 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_52_DW_mult_tc_0_DW_mult_tc_52 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_52 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_52_DW01_add_0_DW01_add_52 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_52_DW_mult_tc_0_DW_mult_tc_52 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_51_DW01_add_0_DW01_add_51 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_51_DW_mult_tc_0_DW_mult_tc_51 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_51 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_51_DW01_add_0_DW01_add_51 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_51_DW_mult_tc_0_DW_mult_tc_51 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_50_DW01_add_0_DW01_add_50 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_50_DW_mult_tc_0_DW_mult_tc_50 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_50 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_50_DW01_add_0_DW01_add_50 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_50_DW_mult_tc_0_DW_mult_tc_50 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_49_DW01_add_0_DW01_add_49 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_49_DW_mult_tc_0_DW_mult_tc_49 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_49 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_49_DW01_add_0_DW01_add_49 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_49_DW_mult_tc_0_DW_mult_tc_49 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_48_DW01_add_0_DW01_add_48 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR2X2 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_48_DW_mult_tc_0_DW_mult_tc_48 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_48 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_48_DW01_add_0_DW01_add_48 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_48_DW_mult_tc_0_DW_mult_tc_48 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module RfTemp_1 ( clk, rst, In1, In2, In3, In4, In5, In6, In7, In8, In9, In10, 
        Out1, Out2, Out3, Out4, Out5, Out6, Out7, Out8, Out9, Out10 );
  input [19:0] In1;
  input [19:0] In2;
  input [19:0] In3;
  input [19:0] In4;
  input [19:0] In5;
  input [19:0] In6;
  input [19:0] In7;
  input [19:0] In8;
  input [19:0] In9;
  input [19:0] In10;
  output [19:0] Out1;
  output [19:0] Out2;
  output [19:0] Out3;
  output [19:0] Out4;
  output [19:0] Out5;
  output [19:0] Out6;
  output [19:0] Out7;
  output [19:0] Out8;
  output [19:0] Out9;
  output [19:0] Out10;
  input clk, rst;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28;

  DFFTRX1 \Out1_reg[18]  ( .D(In1[18]), .RN(n13), .CK(clk), .Q(Out1[18]) );
  DFFTRX1 \Out2_reg[18]  ( .D(In2[18]), .RN(n11), .CK(clk), .Q(Out2[18]) );
  DFFTRX1 \Out3_reg[18]  ( .D(In3[18]), .RN(n9), .CK(clk), .Q(Out3[18]) );
  DFFTRX1 \Out4_reg[18]  ( .D(In4[18]), .RN(n8), .CK(clk), .Q(Out4[18]) );
  DFFTRX1 \Out5_reg[18]  ( .D(In5[18]), .RN(n6), .CK(clk), .Q(Out5[18]) );
  DFFTRX1 \Out6_reg[18]  ( .D(In6[18]), .RN(n4), .CK(clk), .Q(Out6[18]) );
  DFFTRX1 \Out6_reg[17]  ( .D(In6[17]), .RN(n4), .CK(clk), .Q(Out6[17]) );
  DFFTRX1 \Out7_reg[18]  ( .D(In7[18]), .RN(n3), .CK(clk), .Q(Out7[18]) );
  DFFTRX1 \Out7_reg[17]  ( .D(In7[17]), .RN(n3), .CK(clk), .Q(Out7[17]) );
  DFFTRX1 \Out8_reg[18]  ( .D(In8[18]), .RN(n1), .CK(clk), .Q(Out8[18]) );
  DFFTRX1 \Out8_reg[17]  ( .D(In8[17]), .RN(n1), .CK(clk), .Q(Out8[17]) );
  DFFTRX1 \Out1_reg[19]  ( .D(In1[19]), .RN(n13), .CK(clk), .Q(Out1[19]) );
  DFFTRX1 \Out1_reg[15]  ( .D(In1[15]), .RN(n12), .CK(clk), .Q(Out1[15]) );
  DFFTRX1 \Out1_reg[14]  ( .D(In1[14]), .RN(n12), .CK(clk), .Q(Out1[14]) );
  DFFTRX1 \Out1_reg[13]  ( .D(In1[13]), .RN(n12), .CK(clk), .Q(Out1[13]) );
  DFFTRX1 \Out1_reg[12]  ( .D(In1[12]), .RN(n12), .CK(clk), .Q(Out1[12]) );
  DFFTRX1 \Out2_reg[16]  ( .D(In2[16]), .RN(n11), .CK(clk), .Q(Out2[16]) );
  DFFTRX1 \Out2_reg[14]  ( .D(In2[14]), .RN(n11), .CK(clk), .Q(Out2[14]) );
  DFFTRX1 \Out2_reg[13]  ( .D(In2[13]), .RN(n11), .CK(clk), .Q(Out2[13]) );
  DFFTRX1 \Out2_reg[12]  ( .D(In2[12]), .RN(n11), .CK(clk), .Q(Out2[12]) );
  DFFTRX1 \Out3_reg[15]  ( .D(In3[15]), .RN(n9), .CK(clk), .Q(Out3[15]) );
  DFFTRX1 \Out3_reg[14]  ( .D(In3[14]), .RN(n9), .CK(clk), .Q(Out3[14]) );
  DFFTRX1 \Out3_reg[13]  ( .D(In3[13]), .RN(n9), .CK(clk), .Q(Out3[13]) );
  DFFTRX1 \Out4_reg[15]  ( .D(In4[15]), .RN(n7), .CK(clk), .Q(Out4[15]) );
  DFFTRX1 \Out4_reg[14]  ( .D(In4[14]), .RN(n7), .CK(clk), .Q(Out4[14]) );
  DFFTRX1 \Out4_reg[13]  ( .D(In4[13]), .RN(n7), .CK(clk), .Q(Out4[13]) );
  DFFTRX1 \Out5_reg[15]  ( .D(In5[15]), .RN(n6), .CK(clk), .Q(Out5[15]) );
  DFFTRX1 \Out5_reg[14]  ( .D(In5[14]), .RN(n6), .CK(clk), .Q(Out5[14]) );
  DFFTRX1 \Out5_reg[13]  ( .D(In5[13]), .RN(n6), .CK(clk), .Q(Out5[13]) );
  DFFTRX1 \Out6_reg[16]  ( .D(In6[16]), .RN(n4), .CK(clk), .Q(Out6[16]) );
  DFFTRX1 \Out6_reg[15]  ( .D(In6[15]), .RN(n4), .CK(clk), .Q(Out6[15]) );
  DFFTRX1 \Out6_reg[13]  ( .D(In6[13]), .RN(n4), .CK(clk), .Q(Out6[13]) );
  DFFTRX1 \Out6_reg[12]  ( .D(In6[12]), .RN(n4), .CK(clk), .Q(Out6[12]) );
  DFFTRX1 \Out7_reg[16]  ( .D(In7[16]), .RN(n3), .CK(clk), .Q(Out7[16]) );
  DFFTRX1 \Out7_reg[15]  ( .D(In7[15]), .RN(n2), .CK(clk), .Q(Out7[15]) );
  DFFTRX1 \Out7_reg[13]  ( .D(In7[13]), .RN(n2), .CK(clk), .Q(Out7[13]) );
  DFFTRX1 \Out7_reg[12]  ( .D(In7[12]), .RN(n2), .CK(clk), .Q(Out7[12]) );
  DFFTRX1 \Out8_reg[16]  ( .D(In8[16]), .RN(n1), .CK(clk), .Q(Out8[16]) );
  DFFTRX1 \Out8_reg[15]  ( .D(In8[15]), .RN(n1), .CK(clk), .Q(Out8[15]) );
  DFFTRX1 \Out8_reg[13]  ( .D(In8[13]), .RN(n1), .CK(clk), .Q(Out8[13]) );
  DFFTRX1 \Out8_reg[12]  ( .D(In8[12]), .RN(n1), .CK(clk), .Q(Out8[12]) );
  DFFTRX1 \Out1_reg[11]  ( .D(In1[11]), .RN(n12), .CK(clk), .Q(Out1[11]) );
  DFFTRX1 \Out1_reg[9]  ( .D(In1[9]), .RN(n12), .CK(clk), .Q(Out1[9]) );
  DFFTRX1 \Out1_reg[8]  ( .D(In1[8]), .RN(n12), .CK(clk), .Q(Out1[8]) );
  DFFTRX1 \Out1_reg[7]  ( .D(In1[7]), .RN(n12), .CK(clk), .Q(Out1[7]) );
  DFFTRX1 \Out2_reg[11]  ( .D(In2[11]), .RN(n10), .CK(clk), .Q(Out2[11]) );
  DFFTRX1 \Out2_reg[9]  ( .D(In2[9]), .RN(n10), .CK(clk), .Q(Out2[9]) );
  DFFTRX1 \Out2_reg[8]  ( .D(In2[8]), .RN(n10), .CK(clk), .Q(Out2[8]) );
  DFFTRX1 \Out2_reg[7]  ( .D(In2[7]), .RN(n10), .CK(clk), .Q(Out2[7]) );
  DFFTRX1 \Out3_reg[11]  ( .D(In3[11]), .RN(n9), .CK(clk), .Q(Out3[11]) );
  DFFTRX1 \Out3_reg[9]  ( .D(In3[9]), .RN(n9), .CK(clk), .Q(Out3[9]) );
  DFFTRX1 \Out3_reg[8]  ( .D(In3[8]), .RN(n9), .CK(clk), .Q(Out3[8]) );
  DFFTRX1 \Out3_reg[7]  ( .D(In3[7]), .RN(n8), .CK(clk), .Q(Out3[7]) );
  DFFTRX1 \Out4_reg[11]  ( .D(In4[11]), .RN(n7), .CK(clk), .Q(Out4[11]) );
  DFFTRX1 \Out4_reg[9]  ( .D(In4[9]), .RN(n7), .CK(clk), .Q(Out4[9]) );
  DFFTRX1 \Out4_reg[8]  ( .D(In4[8]), .RN(n7), .CK(clk), .Q(Out4[8]) );
  DFFTRX1 \Out4_reg[7]  ( .D(In4[7]), .RN(n7), .CK(clk), .Q(Out4[7]) );
  DFFTRX1 \Out5_reg[11]  ( .D(In5[11]), .RN(n5), .CK(clk), .Q(Out5[11]) );
  DFFTRX1 \Out5_reg[9]  ( .D(In5[9]), .RN(n5), .CK(clk), .Q(Out5[9]) );
  DFFTRX1 \Out5_reg[8]  ( .D(In5[8]), .RN(n5), .CK(clk), .Q(Out5[8]) );
  DFFTRX1 \Out5_reg[7]  ( .D(In5[7]), .RN(n5), .CK(clk), .Q(Out5[7]) );
  DFFTRX1 \Out6_reg[11]  ( .D(In6[11]), .RN(n4), .CK(clk), .Q(Out6[11]) );
  DFFTRX1 \Out6_reg[10]  ( .D(In6[10]), .RN(n4), .CK(clk), .Q(Out6[10]) );
  DFFTRX1 \Out6_reg[9]  ( .D(In6[9]), .RN(n4), .CK(clk), .Q(Out6[9]) );
  DFFTRX1 \Out6_reg[8]  ( .D(In6[8]), .RN(n4), .CK(clk), .Q(Out6[8]) );
  DFFTRX1 \Out6_reg[7]  ( .D(In6[7]), .RN(n3), .CK(clk), .Q(Out6[7]) );
  DFFTRX1 \Out7_reg[11]  ( .D(In7[11]), .RN(n2), .CK(clk), .Q(Out7[11]) );
  DFFTRX1 \Out7_reg[10]  ( .D(In7[10]), .RN(n2), .CK(clk), .Q(Out7[10]) );
  DFFTRX1 \Out7_reg[9]  ( .D(In7[9]), .RN(n2), .CK(clk), .Q(Out7[9]) );
  DFFTRX1 \Out7_reg[8]  ( .D(In7[8]), .RN(n2), .CK(clk), .Q(Out7[8]) );
  DFFTRX1 \Out7_reg[7]  ( .D(In7[7]), .RN(n2), .CK(clk), .Q(Out7[7]) );
  DFFTRX1 \Out8_reg[11]  ( .D(In8[11]), .RN(n25), .CK(clk), .Q(Out8[11]) );
  DFFTRX1 \Out8_reg[10]  ( .D(In8[10]), .RN(n24), .CK(clk), .Q(Out8[10]) );
  DFFTRX1 \Out8_reg[9]  ( .D(In8[9]), .RN(n23), .CK(clk), .Q(Out8[9]) );
  DFFTRX1 \Out8_reg[8]  ( .D(In8[8]), .RN(n1), .CK(clk), .Q(Out8[8]) );
  DFFTRX1 \Out8_reg[7]  ( .D(In8[7]), .RN(n3), .CK(clk), .Q(Out8[7]) );
  DFFTRX1 \Out1_reg[5]  ( .D(In1[5]), .RN(n12), .CK(clk), .Q(Out1[5]) );
  DFFTRX1 \Out2_reg[6]  ( .D(In2[6]), .RN(n10), .CK(clk), .Q(Out2[6]) );
  DFFTRX1 \Out2_reg[5]  ( .D(In2[5]), .RN(n10), .CK(clk), .Q(Out2[5]) );
  DFFTRX1 \Out3_reg[6]  ( .D(In3[6]), .RN(n8), .CK(clk), .Q(Out3[6]) );
  DFFTRX1 \Out3_reg[5]  ( .D(In3[5]), .RN(n8), .CK(clk), .Q(Out3[5]) );
  DFFTRX1 \Out4_reg[6]  ( .D(In4[6]), .RN(n7), .CK(clk), .Q(Out4[6]) );
  DFFTRX1 \Out4_reg[5]  ( .D(In4[5]), .RN(n7), .CK(clk), .Q(Out4[5]) );
  DFFTRX1 \Out5_reg[6]  ( .D(In5[6]), .RN(n5), .CK(clk), .Q(Out5[6]) );
  DFFTRX1 \Out5_reg[5]  ( .D(In5[5]), .RN(n5), .CK(clk), .Q(Out5[5]) );
  DFFTRX1 \Out6_reg[6]  ( .D(In6[6]), .RN(n3), .CK(clk), .Q(Out6[6]) );
  DFFTRX1 \Out6_reg[5]  ( .D(In6[5]), .RN(n3), .CK(clk), .Q(Out6[5]) );
  DFFTRX1 \Out7_reg[6]  ( .D(In7[6]), .RN(n2), .CK(clk), .Q(Out7[6]) );
  DFFTRX1 \Out7_reg[5]  ( .D(In7[5]), .RN(n2), .CK(clk), .Q(Out7[5]) );
  DFFTRX1 \Out8_reg[6]  ( .D(In8[6]), .RN(n2), .CK(clk), .Q(Out8[6]) );
  DFFTRX1 \Out8_reg[5]  ( .D(In8[5]), .RN(n16), .CK(clk), .Q(Out8[5]) );
  DFFTRX1 \Out9_reg[18]  ( .D(In9[18]), .RN(n16), .CK(clk), .Q(Out9[18]) );
  DFFTRX1 \Out9_reg[17]  ( .D(In9[17]), .RN(n16), .CK(clk), .Q(Out9[17]) );
  DFFTRX1 \Out9_reg[16]  ( .D(In9[16]), .RN(n16), .CK(clk), .Q(Out9[16]) );
  DFFTRX1 \Out9_reg[15]  ( .D(In9[15]), .RN(n16), .CK(clk), .Q(Out9[15]) );
  DFFTRX1 \Out9_reg[14]  ( .D(In9[14]), .RN(n16), .CK(clk), .Q(Out9[14]) );
  DFFTRX1 \Out9_reg[13]  ( .D(In9[13]), .RN(n16), .CK(clk), .Q(Out9[13]) );
  DFFTRX1 \Out9_reg[12]  ( .D(In9[12]), .RN(n16), .CK(clk), .Q(Out9[12]) );
  DFFTRX1 \Out9_reg[11]  ( .D(In9[11]), .RN(n15), .CK(clk), .Q(Out9[11]) );
  DFFTRX1 \Out9_reg[10]  ( .D(In9[10]), .RN(n15), .CK(clk), .Q(Out9[10]) );
  DFFTRX1 \Out9_reg[9]  ( .D(In9[9]), .RN(n15), .CK(clk), .Q(Out9[9]) );
  DFFTRX1 \Out9_reg[8]  ( .D(In9[8]), .RN(n15), .CK(clk), .Q(Out9[8]) );
  DFFTRX1 \Out9_reg[7]  ( .D(In9[7]), .RN(n15), .CK(clk), .Q(Out9[7]) );
  DFFTRX1 \Out9_reg[6]  ( .D(In9[6]), .RN(n15), .CK(clk), .Q(Out9[6]) );
  DFFTRX1 \Out9_reg[5]  ( .D(In9[5]), .RN(n15), .CK(clk), .Q(Out9[5]) );
  DFFTRX1 \Out9_reg[4]  ( .D(In9[4]), .RN(n15), .CK(clk), .Q(Out9[4]) );
  DFFTRX1 \Out9_reg[3]  ( .D(In9[3]), .RN(n15), .CK(clk), .Q(Out9[3]) );
  DFFTRX1 \Out9_reg[2]  ( .D(In9[2]), .RN(n15), .CK(clk), .Q(Out9[2]) );
  DFFTRX1 \Out9_reg[1]  ( .D(In9[1]), .RN(n15), .CK(clk), .Q(Out9[1]) );
  DFFTRX1 \Out9_reg[0]  ( .D(In9[0]), .RN(n15), .CK(clk), .Q(Out9[0]) );
  DFFTRX1 \Out10_reg[19]  ( .D(In10[19]), .RN(n14), .CK(clk), .Q(Out10[19]) );
  DFFTRX1 \Out10_reg[18]  ( .D(In10[18]), .RN(n14), .CK(clk), .Q(Out10[18]) );
  DFFTRX1 \Out10_reg[17]  ( .D(In10[17]), .RN(n14), .CK(clk), .Q(Out10[17]) );
  DFFTRX1 \Out10_reg[16]  ( .D(In10[16]), .RN(n14), .CK(clk), .Q(Out10[16]) );
  DFFTRX1 \Out10_reg[15]  ( .D(In10[15]), .RN(n14), .CK(clk), .Q(Out10[15]) );
  DFFTRX1 \Out10_reg[14]  ( .D(In10[14]), .RN(n14), .CK(clk), .Q(Out10[14]) );
  DFFTRX1 \Out10_reg[13]  ( .D(In10[13]), .RN(n14), .CK(clk), .Q(Out10[13]) );
  DFFTRX1 \Out10_reg[12]  ( .D(In10[12]), .RN(n14), .CK(clk), .Q(Out10[12]) );
  DFFTRX1 \Out10_reg[11]  ( .D(In10[11]), .RN(n14), .CK(clk), .Q(Out10[11]) );
  DFFTRX1 \Out10_reg[10]  ( .D(In10[10]), .RN(n14), .CK(clk), .Q(Out10[10]) );
  DFFTRX1 \Out10_reg[9]  ( .D(In10[9]), .RN(n14), .CK(clk), .Q(Out10[9]) );
  DFFTRX1 \Out10_reg[8]  ( .D(In10[8]), .RN(n14), .CK(clk), .Q(Out10[8]) );
  DFFTRX1 \Out10_reg[7]  ( .D(In10[7]), .RN(n13), .CK(clk), .Q(Out10[7]) );
  DFFTRX1 \Out10_reg[6]  ( .D(In10[6]), .RN(n13), .CK(clk), .Q(Out10[6]) );
  DFFTRX1 \Out10_reg[5]  ( .D(In10[5]), .RN(n13), .CK(clk), .Q(Out10[5]) );
  DFFTRX1 \Out10_reg[4]  ( .D(In10[4]), .RN(n13), .CK(clk), .Q(Out10[4]) );
  DFFTRX1 \Out10_reg[3]  ( .D(In10[3]), .RN(n13), .CK(clk), .Q(Out10[3]) );
  DFFTRX1 \Out10_reg[2]  ( .D(In10[2]), .RN(n13), .CK(clk), .Q(Out10[2]) );
  DFFTRX1 \Out10_reg[1]  ( .D(In10[1]), .RN(n13), .CK(clk), .Q(Out10[1]) );
  DFFTRX1 \Out10_reg[0]  ( .D(In10[0]), .RN(n13), .CK(clk), .Q(Out10[0]) );
  DFFTRXL \Out1_reg[4]  ( .D(In1[4]), .RN(n12), .CK(clk), .Q(Out1[4]) );
  DFFTRXL \Out2_reg[4]  ( .D(In2[4]), .RN(n10), .CK(clk), .Q(Out2[4]) );
  DFFTRXL \Out3_reg[4]  ( .D(In3[4]), .RN(n8), .CK(clk), .Q(Out3[4]) );
  DFFTRXL \Out4_reg[4]  ( .D(In4[4]), .RN(n7), .CK(clk), .Q(Out4[4]) );
  DFFTRXL \Out5_reg[4]  ( .D(In5[4]), .RN(n5), .CK(clk), .Q(Out5[4]) );
  DFFTRXL \Out6_reg[4]  ( .D(In6[4]), .RN(n3), .CK(clk), .Q(Out6[4]) );
  DFFTRXL \Out7_reg[4]  ( .D(In7[4]), .RN(n2), .CK(clk), .Q(Out7[4]) );
  DFFTRXL \Out8_reg[4]  ( .D(In8[4]), .RN(n16), .CK(clk), .Q(Out8[4]) );
  DFFTRXL \Out1_reg[3]  ( .D(In1[3]), .RN(n11), .CK(clk), .Q(Out1[3]) );
  DFFTRXL \Out2_reg[3]  ( .D(In2[3]), .RN(n10), .CK(clk), .Q(Out2[3]) );
  DFFTRXL \Out1_reg[2]  ( .D(In1[2]), .RN(n11), .CK(clk), .Q(Out1[2]) );
  DFFTRXL \Out2_reg[2]  ( .D(In2[2]), .RN(n10), .CK(clk), .Q(Out2[2]) );
  DFFTRXL \Out6_reg[2]  ( .D(In6[2]), .RN(n3), .CK(clk), .Q(Out6[2]) );
  DFFTRXL \Out7_reg[2]  ( .D(In7[2]), .RN(n1), .CK(clk), .Q(Out7[2]) );
  DFFTRXL \Out8_reg[2]  ( .D(In8[2]), .RN(n16), .CK(clk), .Q(Out8[2]) );
  DFFTRXL \Out1_reg[1]  ( .D(In1[1]), .RN(n11), .CK(clk), .Q(Out1[1]) );
  DFFTRXL \Out2_reg[1]  ( .D(In2[1]), .RN(n10), .CK(clk), .Q(Out2[1]) );
  DFFTRX1 \Out3_reg[17]  ( .D(In3[17]), .RN(n9), .CK(clk), .Q(Out3[17]) );
  DFFTRX1 \Out4_reg[17]  ( .D(In4[17]), .RN(n8), .CK(clk), .Q(Out4[17]) );
  DFFTRX1 \Out5_reg[17]  ( .D(In5[17]), .RN(n6), .CK(clk), .Q(Out5[17]) );
  DFFTRX1 \Out2_reg[17]  ( .D(In2[17]), .RN(n11), .CK(clk), .Q(Out2[17]) );
  DFFTRX2 \Out3_reg[19]  ( .D(In3[19]), .RN(n9), .CK(clk), .Q(Out3[19]) );
  DFFTRX2 \Out4_reg[19]  ( .D(In4[19]), .RN(n8), .CK(clk), .Q(Out4[19]) );
  DFFTRX2 \Out5_reg[19]  ( .D(In5[19]), .RN(n6), .CK(clk), .Q(Out5[19]) );
  DFFTRX1 \Out3_reg[16]  ( .D(In3[16]), .RN(n9), .CK(clk), .Q(Out3[16]) );
  DFFTRX1 \Out4_reg[16]  ( .D(In4[16]), .RN(n8), .CK(clk), .Q(Out4[16]) );
  DFFTRX1 \Out5_reg[16]  ( .D(In5[16]), .RN(n6), .CK(clk), .Q(Out5[16]) );
  DFFTRX1 \Out3_reg[3]  ( .D(In3[3]), .RN(n8), .CK(clk), .Q(Out3[3]) );
  DFFTRX1 \Out4_reg[3]  ( .D(In4[3]), .RN(n6), .CK(clk), .Q(Out4[3]) );
  DFFTRX1 \Out5_reg[3]  ( .D(In5[3]), .RN(n5), .CK(clk), .Q(Out5[3]) );
  DFFTRX2 \Out6_reg[19]  ( .D(In6[19]), .RN(n4), .CK(clk), .Q(Out6[19]) );
  DFFTRX2 \Out7_reg[19]  ( .D(In7[19]), .RN(n3), .CK(clk), .Q(Out7[19]) );
  DFFTRX2 \Out8_reg[19]  ( .D(In8[19]), .RN(n1), .CK(clk), .Q(Out8[19]) );
  DFFTRX1 \Out6_reg[3]  ( .D(In6[3]), .RN(n3), .CK(clk), .Q(Out6[3]) );
  DFFTRX1 \Out7_reg[3]  ( .D(In7[3]), .RN(n1), .CK(clk), .Q(Out7[3]) );
  DFFTRX1 \Out8_reg[3]  ( .D(In8[3]), .RN(n4), .CK(clk), .Q(Out8[3]) );
  DFFTRX1 \Out1_reg[17]  ( .D(In1[17]), .RN(n13), .CK(clk), .Q(Out1[17]) );
  DFFTRX1 \Out1_reg[10]  ( .D(In1[10]), .RN(n12), .CK(clk), .Q(Out1[10]) );
  DFFTRX1 \Out6_reg[14]  ( .D(In6[14]), .RN(n4), .CK(clk), .Q(Out6[14]) );
  DFFTRX1 \Out7_reg[14]  ( .D(In7[14]), .RN(n2), .CK(clk), .Q(Out7[14]) );
  DFFTRX1 \Out8_reg[14]  ( .D(In8[14]), .RN(n1), .CK(clk), .Q(Out8[14]) );
  DFFTRX1 \Out3_reg[2]  ( .D(In3[2]), .RN(n8), .CK(clk), .Q(Out3[2]) );
  DFFTRX1 \Out4_reg[2]  ( .D(In4[2]), .RN(n6), .CK(clk), .Q(Out4[2]) );
  DFFTRX1 \Out5_reg[2]  ( .D(In5[2]), .RN(n5), .CK(clk), .Q(Out5[2]) );
  DFFTRX1 \Out1_reg[16]  ( .D(In1[16]), .RN(n13), .CK(clk), .Q(Out1[16]) );
  DFFTRX1 \Out1_reg[6]  ( .D(In1[6]), .RN(n12), .CK(clk), .Q(Out1[6]) );
  DFFTRX1 \Out4_reg[1]  ( .D(In4[1]), .RN(n6), .CK(clk), .Q(Out4[1]) );
  DFFTRX1 \Out5_reg[1]  ( .D(In5[1]), .RN(n5), .CK(clk), .Q(Out5[1]) );
  DFFTRX1 \Out3_reg[1]  ( .D(In3[1]), .RN(n8), .CK(clk), .Q(Out3[1]) );
  DFFTRX1 \Out3_reg[10]  ( .D(In3[10]), .RN(n9), .CK(clk), .Q(Out3[10]) );
  DFFTRX1 \Out4_reg[10]  ( .D(In4[10]), .RN(n7), .CK(clk), .Q(Out4[10]) );
  DFFTRX1 \Out5_reg[10]  ( .D(In5[10]), .RN(n5), .CK(clk), .Q(Out5[10]) );
  DFFTRX1 \Out2_reg[15]  ( .D(In2[15]), .RN(n11), .CK(clk), .Q(Out2[15]) );
  DFFTRX1 \Out2_reg[10]  ( .D(In2[10]), .RN(n10), .CK(clk), .Q(Out2[10]) );
  DFFTRX1 \Out1_reg[0]  ( .D(In1[0]), .RN(n11), .CK(clk), .Q(Out1[0]) );
  DFFTRX1 \Out2_reg[0]  ( .D(In2[0]), .RN(n10), .CK(clk), .Q(Out2[0]) );
  DFFTRX1 \Out3_reg[0]  ( .D(In3[0]), .RN(n8), .CK(clk), .Q(Out3[0]) );
  DFFTRX1 \Out4_reg[0]  ( .D(In4[0]), .RN(n6), .CK(clk), .Q(Out4[0]) );
  DFFTRX1 \Out5_reg[0]  ( .D(In5[0]), .RN(n5), .CK(clk), .Q(Out5[0]) );
  DFFTRX1 \Out6_reg[0]  ( .D(In6[0]), .RN(n3), .CK(clk), .Q(Out6[0]) );
  DFFTRX1 \Out7_reg[0]  ( .D(In7[0]), .RN(n1), .CK(clk), .Q(Out7[0]) );
  DFFTRX1 \Out8_reg[0]  ( .D(In8[0]), .RN(n25), .CK(clk), .Q(Out8[0]) );
  DFFTRX1 \Out2_reg[19]  ( .D(In2[19]), .RN(n11), .CK(clk), .Q(Out2[19]) );
  DFFTRX1 \Out9_reg[19]  ( .D(In9[19]), .RN(n16), .CK(clk), .Q(Out9[19]) );
  DFFTRX1 \Out6_reg[1]  ( .D(In6[1]), .RN(n3), .CK(clk), .Q(Out6[1]) );
  DFFTRX1 \Out7_reg[1]  ( .D(In7[1]), .RN(n1), .CK(clk), .Q(Out7[1]) );
  DFFTRX1 \Out8_reg[1]  ( .D(In8[1]), .RN(n16), .CK(clk), .Q(Out8[1]) );
  DFFTRX1 \Out3_reg[12]  ( .D(In3[12]), .RN(n9), .CK(clk), .Q(Out3[12]) );
  DFFTRX1 \Out4_reg[12]  ( .D(In4[12]), .RN(n7), .CK(clk), .Q(Out4[12]) );
  DFFTRX1 \Out5_reg[12]  ( .D(In5[12]), .RN(n6), .CK(clk), .Q(Out5[12]) );
  CLKINVX1 U3 ( .A(rst), .Y(n28) );
  CLKBUFX3 U4 ( .A(n24), .Y(n1) );
  CLKBUFX3 U5 ( .A(n24), .Y(n2) );
  CLKBUFX3 U6 ( .A(n23), .Y(n3) );
  CLKBUFX3 U7 ( .A(n23), .Y(n4) );
  CLKBUFX3 U8 ( .A(n22), .Y(n5) );
  CLKBUFX3 U9 ( .A(n22), .Y(n6) );
  CLKBUFX3 U10 ( .A(n21), .Y(n7) );
  CLKBUFX3 U11 ( .A(n21), .Y(n8) );
  CLKBUFX3 U12 ( .A(n20), .Y(n9) );
  CLKBUFX3 U13 ( .A(n20), .Y(n10) );
  CLKBUFX3 U14 ( .A(n19), .Y(n11) );
  CLKBUFX3 U15 ( .A(n19), .Y(n12) );
  CLKBUFX3 U16 ( .A(n18), .Y(n13) );
  CLKBUFX3 U17 ( .A(n18), .Y(n14) );
  CLKBUFX3 U18 ( .A(n17), .Y(n15) );
  CLKBUFX3 U19 ( .A(n17), .Y(n16) );
  CLKBUFX3 U20 ( .A(n25), .Y(n24) );
  CLKBUFX3 U21 ( .A(n25), .Y(n23) );
  CLKBUFX3 U22 ( .A(n26), .Y(n22) );
  CLKBUFX3 U23 ( .A(n26), .Y(n21) );
  CLKBUFX3 U24 ( .A(n26), .Y(n20) );
  CLKBUFX3 U25 ( .A(n27), .Y(n19) );
  CLKBUFX3 U26 ( .A(n27), .Y(n18) );
  CLKBUFX3 U27 ( .A(n27), .Y(n17) );
  CLKBUFX3 U28 ( .A(n28), .Y(n25) );
  CLKBUFX3 U29 ( .A(n28), .Y(n26) );
  CLKBUFX3 U30 ( .A(n28), .Y(n27) );
endmodule


module PE_47_DW01_add_0_DW01_add_47 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  NAND2X1 U1 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U3 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U4 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U5 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U6 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U7 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U8 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U9 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U10 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U11 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2XL U12 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U13 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U14 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U15 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3X1 U16 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  NAND2X1 U17 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U18 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U19 ( .A(A[14]), .B(B[14]), .Y(n10) );
  NAND3X1 U20 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_47_DW_mult_tc_0_DW_mult_tc_47 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_47 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_47_DW01_add_0_DW01_add_47 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_47_DW_mult_tc_0_DW_mult_tc_47 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_46_DW01_add_0_DW01_add_46 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  NAND2X1 U1 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U3 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U4 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U5 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U6 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U7 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U8 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U9 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U10 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U11 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2XL U12 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U13 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U14 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U15 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3X1 U16 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  NAND2X1 U17 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U18 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U19 ( .A(A[14]), .B(B[14]), .Y(n10) );
  NAND3X1 U20 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_46_DW_mult_tc_0_DW_mult_tc_46 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_46 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_46_DW01_add_0_DW01_add_46 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_46_DW_mult_tc_0_DW_mult_tc_46 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_45_DW01_add_0_DW01_add_45 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  NAND2X1 U1 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U3 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U4 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U5 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U6 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U7 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U8 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U9 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U10 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U11 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2XL U12 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U13 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U14 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U15 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3X1 U16 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  NAND2X1 U17 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U18 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U19 ( .A(A[14]), .B(B[14]), .Y(n10) );
  NAND3X1 U20 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_45_DW_mult_tc_0_DW_mult_tc_45 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_45 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_45_DW01_add_0_DW01_add_45 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_45_DW_mult_tc_0_DW_mult_tc_45 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_44_DW01_add_0_DW01_add_44 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  NAND3X1 U1 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  NAND2X1 U2 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X6 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND2X2 U4 ( .A(B[14]), .B(carry[14]), .Y(n11) );
  NAND2X2 U5 ( .A(A[14]), .B(carry[14]), .Y(n12) );
  NAND3X4 U6 ( .A(n8), .B(n9), .C(n10), .Y(carry[14]) );
  NAND2X1 U7 ( .A(A[13]), .B(B[13]), .Y(n10) );
  NAND2X1 U8 ( .A(B[13]), .B(carry[13]), .Y(n8) );
  NAND2X1 U9 ( .A(A[13]), .B(carry[13]), .Y(n9) );
  AND2X2 U10 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U11 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U12 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2X1 U13 ( .A(A[5]), .B(B[5]), .Y(n4) );
  XOR3XL U14 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U15 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U16 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U17 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  XOR3XL U18 ( .A(carry[13]), .B(A[13]), .C(B[13]), .Y(SUM[13]) );
  NAND3X1 U19 ( .A(n11), .B(n12), .C(n13), .Y(carry[15]) );
  NAND2XL U20 ( .A(B[17]), .B(carry[17]), .Y(n14) );
  NAND2XL U21 ( .A(A[17]), .B(carry[17]), .Y(n15) );
  NAND2XL U22 ( .A(A[17]), .B(B[17]), .Y(n16) );
  NAND3X1 U23 ( .A(n14), .B(n15), .C(n16), .Y(carry[18]) );
  XOR3XL U24 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  NAND2XL U25 ( .A(A[14]), .B(B[14]), .Y(n13) );
  XOR3XL U26 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U27 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_44_DW_mult_tc_0_DW_mult_tc_44 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_44 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_44_DW01_add_0_DW01_add_44 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_44_DW_mult_tc_0_DW_mult_tc_44 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_43_DW01_add_0_DW01_add_43 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  NAND3X1 U1 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  NAND2X1 U2 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X6 U3 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  NAND2X2 U4 ( .A(B[14]), .B(carry[14]), .Y(n11) );
  NAND2X2 U5 ( .A(A[14]), .B(carry[14]), .Y(n12) );
  NAND3X4 U6 ( .A(n8), .B(n9), .C(n10), .Y(carry[14]) );
  NAND2X1 U7 ( .A(A[13]), .B(B[13]), .Y(n10) );
  NAND2X1 U8 ( .A(B[13]), .B(carry[13]), .Y(n8) );
  NAND2X1 U9 ( .A(A[13]), .B(carry[13]), .Y(n9) );
  AND2X2 U10 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U11 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U12 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2X1 U13 ( .A(A[5]), .B(B[5]), .Y(n4) );
  XOR3XL U14 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U15 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U16 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U17 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  XOR3XL U18 ( .A(carry[13]), .B(A[13]), .C(B[13]), .Y(SUM[13]) );
  NAND3X1 U19 ( .A(n11), .B(n12), .C(n13), .Y(carry[15]) );
  NAND2XL U20 ( .A(B[17]), .B(carry[17]), .Y(n14) );
  NAND2XL U21 ( .A(A[17]), .B(carry[17]), .Y(n15) );
  NAND2XL U22 ( .A(A[17]), .B(B[17]), .Y(n16) );
  NAND3X1 U23 ( .A(n14), .B(n15), .C(n16), .Y(carry[18]) );
  XOR3XL U24 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  NAND2XL U25 ( .A(A[14]), .B(B[14]), .Y(n13) );
  XOR3XL U26 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U27 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_43_DW_mult_tc_0_DW_mult_tc_43 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_43 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_43_DW01_add_0_DW01_add_43 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_43_DW_mult_tc_0_DW_mult_tc_43 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_42_DW01_add_0_DW01_add_42 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  NAND2X1 U1 ( .A(A[8]), .B(carry[8]), .Y(n6) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U3 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X1 U4 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  NAND2XL U5 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U6 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND3X1 U7 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  XOR3XL U8 ( .A(carry[8]), .B(A[8]), .C(B[8]), .Y(SUM[8]) );
  NAND2X4 U9 ( .A(B[8]), .B(carry[8]), .Y(n5) );
  NAND2X4 U10 ( .A(A[8]), .B(B[8]), .Y(n7) );
  NAND3X8 U11 ( .A(n5), .B(n6), .C(n7), .Y(carry[9]) );
  NAND2XL U12 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2XL U13 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  NAND2XL U14 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND3X1 U15 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  XOR3X1 U16 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  NAND2X1 U17 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U18 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U19 ( .A(A[14]), .B(B[14]), .Y(n10) );
  NAND3X1 U20 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_42_DW_mult_tc_0_DW_mult_tc_42 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_42 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_42_DW01_add_0_DW01_add_42 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_42_DW_mult_tc_0_DW_mult_tc_42 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_41_DW01_add_0_DW01_add_41 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [19:1] carry;

  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  XOR2X1 U1 ( .A(carry[19]), .B(n2), .Y(SUM[19]) );
  XOR2X1 U2 ( .A(B[19]), .B(A[19]), .Y(n2) );
  NAND2X1 U3 ( .A(A[1]), .B(B[1]), .Y(n5) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U5 ( .A(n1), .B(A[1]), .Y(n3) );
  XOR2XL U6 ( .A(B[1]), .B(n3), .Y(SUM[1]) );
  NAND2X2 U7 ( .A(n1), .B(B[1]), .Y(n4) );
  NAND2X4 U8 ( .A(A[1]), .B(n1), .Y(n6) );
  NAND3X2 U9 ( .A(n4), .B(n5), .C(n6), .Y(carry[2]) );
  XOR2XL U10 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_41_DW_mult_tc_0_DW_mult_tc_41 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_41 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_41_DW01_add_0_DW01_add_41 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_41_DW_mult_tc_0_DW_mult_tc_41 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_40_DW01_add_0_DW01_add_40 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_40_DW_mult_tc_0_DW_mult_tc_40 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_40 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_40_DW01_add_0_DW01_add_40 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_40_DW_mult_tc_0_DW_mult_tc_40 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_39_DW01_add_0_DW01_add_39 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [19:1] carry;

  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  XOR2X1 U1 ( .A(carry[19]), .B(n2), .Y(SUM[19]) );
  XOR2X1 U2 ( .A(B[19]), .B(A[19]), .Y(n2) );
  NAND2X1 U3 ( .A(A[1]), .B(B[1]), .Y(n5) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U5 ( .A(n1), .B(A[1]), .Y(n3) );
  XOR2XL U6 ( .A(B[1]), .B(n3), .Y(SUM[1]) );
  NAND2X2 U7 ( .A(n1), .B(B[1]), .Y(n4) );
  NAND2X4 U8 ( .A(A[1]), .B(n1), .Y(n6) );
  NAND3X2 U9 ( .A(n4), .B(n5), .C(n6), .Y(carry[2]) );
  XOR2XL U10 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_39_DW_mult_tc_0_DW_mult_tc_39 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_39 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_39_DW01_add_0_DW01_add_39 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_39_DW_mult_tc_0_DW_mult_tc_39 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_38_DW01_add_0_DW01_add_38 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_38_DW_mult_tc_0_DW_mult_tc_38 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_38 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_38_DW01_add_0_DW01_add_38 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_38_DW_mult_tc_0_DW_mult_tc_38 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_37_DW01_add_0_DW01_add_37 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_37_DW_mult_tc_0_DW_mult_tc_37 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_37 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_37_DW01_add_0_DW01_add_37 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_37_DW_mult_tc_0_DW_mult_tc_37 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_36_DW01_add_0_DW01_add_36 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_36_DW_mult_tc_0_DW_mult_tc_36 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_36 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_36_DW01_add_0_DW01_add_36 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_36_DW_mult_tc_0_DW_mult_tc_36 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_35_DW01_add_0_DW01_add_35 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX4 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX4 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_35_DW_mult_tc_0_DW_mult_tc_35 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_35 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_35_DW01_add_0_DW01_add_35 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_35_DW_mult_tc_0_DW_mult_tc_35 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_34_DW01_add_0_DW01_add_34 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX4 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX4 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_34_DW_mult_tc_0_DW_mult_tc_34 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_34 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_34_DW01_add_0_DW01_add_34 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_34_DW_mult_tc_0_DW_mult_tc_34 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_33_DW01_add_0_DW01_add_33 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_33_DW_mult_tc_0_DW_mult_tc_33 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_33 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_33_DW01_add_0_DW01_add_33 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_33_DW_mult_tc_0_DW_mult_tc_33 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_32_DW01_add_0_DW01_add_32 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X2 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_32_DW_mult_tc_0_DW_mult_tc_32 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_32 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_32_DW01_add_0_DW01_add_32 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_32_DW_mult_tc_0_DW_mult_tc_32 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_31_DW01_add_0_DW01_add_31 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_31_DW_mult_tc_0_DW_mult_tc_31 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_31 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_31_DW01_add_0_DW01_add_31 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_31_DW_mult_tc_0_DW_mult_tc_31 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_30_DW01_add_0_DW01_add_30 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X2 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_30_DW_mult_tc_0_DW_mult_tc_30 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_30 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_30_DW01_add_0_DW01_add_30 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_30_DW_mult_tc_0_DW_mult_tc_30 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_29_DW01_add_0_DW01_add_29 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U2 ( .A(B[0]), .B(n3), .Y(n4) );
  NAND2X1 U3 ( .A(n2), .B(A[0]), .Y(n5) );
  NAND2X1 U4 ( .A(n4), .B(n5), .Y(SUM[0]) );
  CLKINVX1 U5 ( .A(A[0]), .Y(n3) );
  CLKINVX1 U6 ( .A(B[0]), .Y(n2) );
endmodule


module PE_29_DW_mult_tc_0_DW_mult_tc_29 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_29 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_29_DW01_add_0_DW01_add_29 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_29_DW_mult_tc_0_DW_mult_tc_29 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_28_DW01_add_0_DW01_add_28 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U2 ( .A(B[0]), .B(n3), .Y(n4) );
  NAND2X1 U3 ( .A(n2), .B(A[0]), .Y(n5) );
  NAND2X1 U4 ( .A(n4), .B(n5), .Y(SUM[0]) );
  CLKINVX1 U5 ( .A(A[0]), .Y(n3) );
  CLKINVX1 U6 ( .A(B[0]), .Y(n2) );
endmodule


module PE_28_DW_mult_tc_0_DW_mult_tc_28 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_28 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_28_DW01_add_0_DW01_add_28 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_28_DW_mult_tc_0_DW_mult_tc_28 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_27_DW01_add_0_DW01_add_27 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U2 ( .A(B[0]), .B(n3), .Y(n4) );
  NAND2X1 U3 ( .A(n2), .B(A[0]), .Y(n5) );
  NAND2X1 U4 ( .A(n4), .B(n5), .Y(SUM[0]) );
  CLKINVX1 U5 ( .A(A[0]), .Y(n3) );
  CLKINVX1 U6 ( .A(B[0]), .Y(n2) );
endmodule


module PE_27_DW_mult_tc_0_DW_mult_tc_27 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_27 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_27_DW01_add_0_DW01_add_27 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_27_DW_mult_tc_0_DW_mult_tc_27 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_26_DW01_add_0_DW01_add_26 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  BUFX8 U1 ( .A(A[0]), .Y(n1) );
  NAND2X4 U2 ( .A(n3), .B(n1), .Y(n6) );
  INVXL U3 ( .A(n1), .Y(n4) );
  AND2XL U4 ( .A(B[0]), .B(n1), .Y(n2) );
  NAND2X1 U5 ( .A(n5), .B(n6), .Y(SUM[0]) );
  NAND2X1 U6 ( .A(B[0]), .B(n4), .Y(n5) );
  CLKINVX1 U7 ( .A(B[0]), .Y(n3) );
endmodule


module PE_26_DW_mult_tc_0_DW_mult_tc_26 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_26 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_26_DW01_add_0_DW01_add_26 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_26_DW_mult_tc_0_DW_mult_tc_26 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_25_DW01_add_0_DW01_add_25 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  BUFX8 U1 ( .A(A[0]), .Y(n1) );
  NAND2X4 U2 ( .A(n3), .B(n1), .Y(n6) );
  INVXL U3 ( .A(n1), .Y(n4) );
  AND2XL U4 ( .A(B[0]), .B(n1), .Y(n2) );
  NAND2X1 U5 ( .A(n5), .B(n6), .Y(SUM[0]) );
  NAND2X1 U6 ( .A(B[0]), .B(n4), .Y(n5) );
  CLKINVX1 U7 ( .A(B[0]), .Y(n3) );
endmodule


module PE_25_DW_mult_tc_0_DW_mult_tc_25 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_25 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_25_DW01_add_0_DW01_add_25 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_25_DW_mult_tc_0_DW_mult_tc_25 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_24_DW01_add_0_DW01_add_24 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U2 ( .A(B[0]), .B(n3), .Y(n4) );
  NAND2X1 U3 ( .A(n2), .B(A[0]), .Y(n5) );
  NAND2X1 U4 ( .A(n4), .B(n5), .Y(SUM[0]) );
  CLKINVX1 U5 ( .A(A[0]), .Y(n3) );
  CLKINVX1 U6 ( .A(B[0]), .Y(n2) );
endmodule


module PE_24_DW_mult_tc_0_DW_mult_tc_24 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_24 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_24_DW01_add_0_DW01_add_24 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_24_DW_mult_tc_0_DW_mult_tc_24 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module RfTemp_0 ( clk, rst, In1, In2, In3, In4, In5, In6, In7, In8, In9, In10, 
        Out1, Out2, Out3, Out4, Out5, Out6, Out7, Out8, Out9, Out10 );
  input [19:0] In1;
  input [19:0] In2;
  input [19:0] In3;
  input [19:0] In4;
  input [19:0] In5;
  input [19:0] In6;
  input [19:0] In7;
  input [19:0] In8;
  input [19:0] In9;
  input [19:0] In10;
  output [19:0] Out1;
  output [19:0] Out2;
  output [19:0] Out3;
  output [19:0] Out4;
  output [19:0] Out5;
  output [19:0] Out6;
  output [19:0] Out7;
  output [19:0] Out8;
  output [19:0] Out9;
  output [19:0] Out10;
  input clk, rst;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27;

  DFFTRX1 \Out1_reg[19]  ( .D(In1[19]), .RN(n14), .CK(clk), .Q(Out1[19]) );
  DFFTRX1 \Out2_reg[19]  ( .D(In2[19]), .RN(n12), .CK(clk), .Q(Out2[19]) );
  DFFTRX1 \Out3_reg[19]  ( .D(In3[19]), .RN(n10), .CK(clk), .Q(Out3[19]) );
  DFFTRX1 \Out4_reg[19]  ( .D(In4[19]), .RN(n9), .CK(clk), .Q(Out4[19]) );
  DFFTRX1 \Out5_reg[19]  ( .D(In5[19]), .RN(n7), .CK(clk), .Q(Out5[19]) );
  DFFTRX1 \Out6_reg[19]  ( .D(In6[19]), .RN(n5), .CK(clk), .Q(Out6[19]) );
  DFFTRX1 \Out7_reg[19]  ( .D(In7[19]), .RN(n4), .CK(clk), .Q(Out7[19]) );
  DFFTRX1 \Out8_reg[19]  ( .D(In8[19]), .RN(n2), .CK(clk), .Q(Out8[19]) );
  DFFTRX1 \Out1_reg[18]  ( .D(In1[18]), .RN(n14), .CK(clk), .Q(Out1[18]) );
  DFFTRX1 \Out1_reg[17]  ( .D(In1[17]), .RN(n14), .CK(clk), .Q(Out1[17]) );
  DFFTRX1 \Out1_reg[16]  ( .D(In1[16]), .RN(n14), .CK(clk), .Q(Out1[16]) );
  DFFTRX1 \Out1_reg[15]  ( .D(In1[15]), .RN(n13), .CK(clk), .Q(Out1[15]) );
  DFFTRX1 \Out1_reg[14]  ( .D(In1[14]), .RN(n13), .CK(clk), .Q(Out1[14]) );
  DFFTRX1 \Out2_reg[18]  ( .D(In2[18]), .RN(n12), .CK(clk), .Q(Out2[18]) );
  DFFTRX1 \Out2_reg[17]  ( .D(In2[17]), .RN(n12), .CK(clk), .Q(Out2[17]) );
  DFFTRX1 \Out2_reg[16]  ( .D(In2[16]), .RN(n12), .CK(clk), .Q(Out2[16]) );
  DFFTRX1 \Out2_reg[15]  ( .D(In2[15]), .RN(n12), .CK(clk), .Q(Out2[15]) );
  DFFTRX1 \Out2_reg[14]  ( .D(In2[14]), .RN(n12), .CK(clk), .Q(Out2[14]) );
  DFFTRX1 \Out3_reg[18]  ( .D(In3[18]), .RN(n10), .CK(clk), .Q(Out3[18]) );
  DFFTRX1 \Out3_reg[17]  ( .D(In3[17]), .RN(n10), .CK(clk), .Q(Out3[17]) );
  DFFTRX1 \Out3_reg[16]  ( .D(In3[16]), .RN(n10), .CK(clk), .Q(Out3[16]) );
  DFFTRX1 \Out3_reg[15]  ( .D(In3[15]), .RN(n10), .CK(clk), .Q(Out3[15]) );
  DFFTRX1 \Out3_reg[14]  ( .D(In3[14]), .RN(n10), .CK(clk), .Q(Out3[14]) );
  DFFTRX1 \Out4_reg[18]  ( .D(In4[18]), .RN(n9), .CK(clk), .Q(Out4[18]) );
  DFFTRX1 \Out4_reg[17]  ( .D(In4[17]), .RN(n9), .CK(clk), .Q(Out4[17]) );
  DFFTRX1 \Out4_reg[16]  ( .D(In4[16]), .RN(n9), .CK(clk), .Q(Out4[16]) );
  DFFTRX1 \Out4_reg[15]  ( .D(In4[15]), .RN(n8), .CK(clk), .Q(Out4[15]) );
  DFFTRX1 \Out4_reg[14]  ( .D(In4[14]), .RN(n8), .CK(clk), .Q(Out4[14]) );
  DFFTRX1 \Out5_reg[18]  ( .D(In5[18]), .RN(n7), .CK(clk), .Q(Out5[18]) );
  DFFTRX1 \Out5_reg[17]  ( .D(In5[17]), .RN(n7), .CK(clk), .Q(Out5[17]) );
  DFFTRX1 \Out5_reg[16]  ( .D(In5[16]), .RN(n7), .CK(clk), .Q(Out5[16]) );
  DFFTRX1 \Out5_reg[15]  ( .D(In5[15]), .RN(n7), .CK(clk), .Q(Out5[15]) );
  DFFTRX1 \Out5_reg[14]  ( .D(In5[14]), .RN(n7), .CK(clk), .Q(Out5[14]) );
  DFFTRX1 \Out6_reg[18]  ( .D(In6[18]), .RN(n5), .CK(clk), .Q(Out6[18]) );
  DFFTRX1 \Out6_reg[17]  ( .D(In6[17]), .RN(n5), .CK(clk), .Q(Out6[17]) );
  DFFTRX1 \Out6_reg[16]  ( .D(In6[16]), .RN(n5), .CK(clk), .Q(Out6[16]) );
  DFFTRX1 \Out6_reg[15]  ( .D(In6[15]), .RN(n5), .CK(clk), .Q(Out6[15]) );
  DFFTRX1 \Out6_reg[14]  ( .D(In6[14]), .RN(n5), .CK(clk), .Q(Out6[14]) );
  DFFTRX1 \Out7_reg[18]  ( .D(In7[18]), .RN(n4), .CK(clk), .Q(Out7[18]) );
  DFFTRX1 \Out7_reg[17]  ( .D(In7[17]), .RN(n4), .CK(clk), .Q(Out7[17]) );
  DFFTRX1 \Out7_reg[16]  ( .D(In7[16]), .RN(n4), .CK(clk), .Q(Out7[16]) );
  DFFTRX1 \Out7_reg[15]  ( .D(In7[15]), .RN(n3), .CK(clk), .Q(Out7[15]) );
  DFFTRX1 \Out7_reg[14]  ( .D(In7[14]), .RN(n3), .CK(clk), .Q(Out7[14]) );
  DFFTRX1 \Out8_reg[18]  ( .D(In8[18]), .RN(n2), .CK(clk), .Q(Out8[18]) );
  DFFTRX1 \Out8_reg[17]  ( .D(In8[17]), .RN(n2), .CK(clk), .Q(Out8[17]) );
  DFFTRX1 \Out8_reg[16]  ( .D(In8[16]), .RN(n2), .CK(clk), .Q(Out8[16]) );
  DFFTRX1 \Out8_reg[15]  ( .D(In8[15]), .RN(n2), .CK(clk), .Q(Out8[15]) );
  DFFTRX1 \Out8_reg[14]  ( .D(In8[14]), .RN(n2), .CK(clk), .Q(Out8[14]) );
  DFFTRX1 \Out9_reg[17]  ( .D(In9[17]), .RN(n17), .CK(clk), .Q(Out9[17]) );
  DFFTRX1 \Out9_reg[16]  ( .D(In9[16]), .RN(n17), .CK(clk), .Q(Out9[16]) );
  DFFTRX1 \Out10_reg[17]  ( .D(In10[17]), .RN(n15), .CK(clk), .Q(Out10[17]) );
  DFFTRX1 \Out10_reg[16]  ( .D(In10[16]), .RN(n15), .CK(clk), .Q(Out10[16]) );
  DFFTRX1 \Out10_reg[14]  ( .D(In10[14]), .RN(n15), .CK(clk), .Q(Out10[14]) );
  DFFTRX1 \Out1_reg[13]  ( .D(In1[13]), .RN(n13), .CK(clk), .Q(Out1[13]) );
  DFFTRX1 \Out1_reg[12]  ( .D(In1[12]), .RN(n13), .CK(clk), .Q(Out1[12]) );
  DFFTRX1 \Out1_reg[11]  ( .D(In1[11]), .RN(n13), .CK(clk), .Q(Out1[11]) );
  DFFTRX1 \Out1_reg[10]  ( .D(In1[10]), .RN(n13), .CK(clk), .Q(Out1[10]) );
  DFFTRX1 \Out1_reg[9]  ( .D(In1[9]), .RN(n13), .CK(clk), .Q(Out1[9]) );
  DFFTRX1 \Out2_reg[13]  ( .D(In2[13]), .RN(n12), .CK(clk), .Q(Out2[13]) );
  DFFTRX1 \Out2_reg[12]  ( .D(In2[12]), .RN(n12), .CK(clk), .Q(Out2[12]) );
  DFFTRX1 \Out2_reg[11]  ( .D(In2[11]), .RN(n11), .CK(clk), .Q(Out2[11]) );
  DFFTRX1 \Out2_reg[10]  ( .D(In2[10]), .RN(n11), .CK(clk), .Q(Out2[10]) );
  DFFTRX1 \Out2_reg[9]  ( .D(In2[9]), .RN(n11), .CK(clk), .Q(Out2[9]) );
  DFFTRX1 \Out3_reg[13]  ( .D(In3[13]), .RN(n10), .CK(clk), .Q(Out3[13]) );
  DFFTRX1 \Out3_reg[12]  ( .D(In3[12]), .RN(n10), .CK(clk), .Q(Out3[12]) );
  DFFTRX1 \Out3_reg[11]  ( .D(In3[11]), .RN(n10), .CK(clk), .Q(Out3[11]) );
  DFFTRX1 \Out3_reg[10]  ( .D(In3[10]), .RN(n10), .CK(clk), .Q(Out3[10]) );
  DFFTRX1 \Out3_reg[9]  ( .D(In3[9]), .RN(n10), .CK(clk), .Q(Out3[9]) );
  DFFTRX1 \Out4_reg[13]  ( .D(In4[13]), .RN(n8), .CK(clk), .Q(Out4[13]) );
  DFFTRX1 \Out4_reg[12]  ( .D(In4[12]), .RN(n8), .CK(clk), .Q(Out4[12]) );
  DFFTRX1 \Out4_reg[11]  ( .D(In4[11]), .RN(n8), .CK(clk), .Q(Out4[11]) );
  DFFTRX1 \Out4_reg[10]  ( .D(In4[10]), .RN(n8), .CK(clk), .Q(Out4[10]) );
  DFFTRX1 \Out4_reg[9]  ( .D(In4[9]), .RN(n8), .CK(clk), .Q(Out4[9]) );
  DFFTRX1 \Out5_reg[13]  ( .D(In5[13]), .RN(n7), .CK(clk), .Q(Out5[13]) );
  DFFTRX1 \Out5_reg[12]  ( .D(In5[12]), .RN(n7), .CK(clk), .Q(Out5[12]) );
  DFFTRX1 \Out5_reg[11]  ( .D(In5[11]), .RN(n6), .CK(clk), .Q(Out5[11]) );
  DFFTRX1 \Out5_reg[10]  ( .D(In5[10]), .RN(n6), .CK(clk), .Q(Out5[10]) );
  DFFTRX1 \Out5_reg[9]  ( .D(In5[9]), .RN(n6), .CK(clk), .Q(Out5[9]) );
  DFFTRX1 \Out6_reg[13]  ( .D(In6[13]), .RN(n5), .CK(clk), .Q(Out6[13]) );
  DFFTRX1 \Out6_reg[12]  ( .D(In6[12]), .RN(n5), .CK(clk), .Q(Out6[12]) );
  DFFTRX1 \Out6_reg[11]  ( .D(In6[11]), .RN(n5), .CK(clk), .Q(Out6[11]) );
  DFFTRX1 \Out6_reg[10]  ( .D(In6[10]), .RN(n5), .CK(clk), .Q(Out6[10]) );
  DFFTRX1 \Out6_reg[9]  ( .D(In6[9]), .RN(n5), .CK(clk), .Q(Out6[9]) );
  DFFTRX1 \Out7_reg[13]  ( .D(In7[13]), .RN(n3), .CK(clk), .Q(Out7[13]) );
  DFFTRX1 \Out7_reg[12]  ( .D(In7[12]), .RN(n3), .CK(clk), .Q(Out7[12]) );
  DFFTRX1 \Out7_reg[11]  ( .D(In7[11]), .RN(n3), .CK(clk), .Q(Out7[11]) );
  DFFTRX1 \Out7_reg[10]  ( .D(In7[10]), .RN(n3), .CK(clk), .Q(Out7[10]) );
  DFFTRX1 \Out7_reg[9]  ( .D(In7[9]), .RN(n3), .CK(clk), .Q(Out7[9]) );
  DFFTRX1 \Out8_reg[13]  ( .D(In8[13]), .RN(n2), .CK(clk), .Q(Out8[13]) );
  DFFTRX1 \Out8_reg[12]  ( .D(In8[12]), .RN(n2), .CK(clk), .Q(Out8[12]) );
  DFFTRX1 \Out8_reg[11]  ( .D(In8[11]), .RN(n1), .CK(clk), .Q(Out8[11]) );
  DFFTRX1 \Out8_reg[10]  ( .D(In8[10]), .RN(n1), .CK(clk), .Q(Out8[10]) );
  DFFTRX1 \Out8_reg[9]  ( .D(In8[9]), .RN(n1), .CK(clk), .Q(Out8[9]) );
  DFFTRX1 \Out9_reg[13]  ( .D(In9[13]), .RN(n17), .CK(clk), .Q(Out9[13]) );
  DFFTRX1 \Out9_reg[11]  ( .D(In9[11]), .RN(n16), .CK(clk), .Q(Out9[11]) );
  DFFTRX1 \Out9_reg[10]  ( .D(In9[10]), .RN(n16), .CK(clk), .Q(Out9[10]) );
  DFFTRX1 \Out9_reg[9]  ( .D(In9[9]), .RN(n16), .CK(clk), .Q(Out9[9]) );
  DFFTRX1 \Out10_reg[13]  ( .D(In10[13]), .RN(n15), .CK(clk), .Q(Out10[13]) );
  DFFTRX1 \Out10_reg[11]  ( .D(In10[11]), .RN(n15), .CK(clk), .Q(Out10[11]) );
  DFFTRX1 \Out10_reg[10]  ( .D(In10[10]), .RN(n15), .CK(clk), .Q(Out10[10]) );
  DFFTRX1 \Out10_reg[9]  ( .D(In10[9]), .RN(n15), .CK(clk), .Q(Out10[9]) );
  DFFTRX1 \Out1_reg[8]  ( .D(In1[8]), .RN(n13), .CK(clk), .Q(Out1[8]) );
  DFFTRX1 \Out1_reg[7]  ( .D(In1[7]), .RN(n13), .CK(clk), .Q(Out1[7]) );
  DFFTRX1 \Out1_reg[5]  ( .D(In1[5]), .RN(n13), .CK(clk), .Q(Out1[5]) );
  DFFTRX1 \Out1_reg[4]  ( .D(In1[4]), .RN(n13), .CK(clk), .Q(Out1[4]) );
  DFFTRX1 \Out2_reg[8]  ( .D(In2[8]), .RN(n11), .CK(clk), .Q(Out2[8]) );
  DFFTRX1 \Out2_reg[7]  ( .D(In2[7]), .RN(n11), .CK(clk), .Q(Out2[7]) );
  DFFTRX1 \Out2_reg[5]  ( .D(In2[5]), .RN(n11), .CK(clk), .Q(Out2[5]) );
  DFFTRX1 \Out2_reg[4]  ( .D(In2[4]), .RN(n11), .CK(clk), .Q(Out2[4]) );
  DFFTRX1 \Out3_reg[8]  ( .D(In3[8]), .RN(n10), .CK(clk), .Q(Out3[8]) );
  DFFTRX1 \Out3_reg[7]  ( .D(In3[7]), .RN(n9), .CK(clk), .Q(Out3[7]) );
  DFFTRX1 \Out3_reg[5]  ( .D(In3[5]), .RN(n9), .CK(clk), .Q(Out3[5]) );
  DFFTRX1 \Out3_reg[4]  ( .D(In3[4]), .RN(n9), .CK(clk), .Q(Out3[4]) );
  DFFTRX1 \Out4_reg[8]  ( .D(In4[8]), .RN(n8), .CK(clk), .Q(Out4[8]) );
  DFFTRX1 \Out4_reg[7]  ( .D(In4[7]), .RN(n8), .CK(clk), .Q(Out4[7]) );
  DFFTRX1 \Out4_reg[5]  ( .D(In4[5]), .RN(n8), .CK(clk), .Q(Out4[5]) );
  DFFTRX1 \Out4_reg[4]  ( .D(In4[4]), .RN(n8), .CK(clk), .Q(Out4[4]) );
  DFFTRX1 \Out5_reg[8]  ( .D(In5[8]), .RN(n6), .CK(clk), .Q(Out5[8]) );
  DFFTRX1 \Out5_reg[7]  ( .D(In5[7]), .RN(n6), .CK(clk), .Q(Out5[7]) );
  DFFTRX1 \Out5_reg[5]  ( .D(In5[5]), .RN(n6), .CK(clk), .Q(Out5[5]) );
  DFFTRX1 \Out5_reg[4]  ( .D(In5[4]), .RN(n6), .CK(clk), .Q(Out5[4]) );
  DFFTRX1 \Out6_reg[8]  ( .D(In6[8]), .RN(n5), .CK(clk), .Q(Out6[8]) );
  DFFTRX1 \Out6_reg[7]  ( .D(In6[7]), .RN(n4), .CK(clk), .Q(Out6[7]) );
  DFFTRX1 \Out6_reg[5]  ( .D(In6[5]), .RN(n4), .CK(clk), .Q(Out6[5]) );
  DFFTRX1 \Out6_reg[4]  ( .D(In6[4]), .RN(n4), .CK(clk), .Q(Out6[4]) );
  DFFTRX1 \Out7_reg[8]  ( .D(In7[8]), .RN(n3), .CK(clk), .Q(Out7[8]) );
  DFFTRX1 \Out7_reg[7]  ( .D(In7[7]), .RN(n3), .CK(clk), .Q(Out7[7]) );
  DFFTRX1 \Out7_reg[5]  ( .D(In7[5]), .RN(n3), .CK(clk), .Q(Out7[5]) );
  DFFTRX1 \Out7_reg[4]  ( .D(In7[4]), .RN(n3), .CK(clk), .Q(Out7[4]) );
  DFFTRX1 \Out8_reg[8]  ( .D(In8[8]), .RN(n1), .CK(clk), .Q(Out8[8]) );
  DFFTRX1 \Out8_reg[7]  ( .D(In8[7]), .RN(n1), .CK(clk), .Q(Out8[7]) );
  DFFTRX1 \Out8_reg[5]  ( .D(In8[5]), .RN(n1), .CK(clk), .Q(Out8[5]) );
  DFFTRX1 \Out8_reg[4]  ( .D(In8[4]), .RN(n1), .CK(clk), .Q(Out8[4]) );
  DFFTRX1 \Out9_reg[8]  ( .D(In9[8]), .RN(n16), .CK(clk), .Q(Out9[8]) );
  DFFTRX1 \Out9_reg[7]  ( .D(In9[7]), .RN(n16), .CK(clk), .Q(Out9[7]) );
  DFFTRX1 \Out9_reg[6]  ( .D(In9[6]), .RN(n16), .CK(clk), .Q(Out9[6]) );
  DFFTRX1 \Out9_reg[4]  ( .D(In9[4]), .RN(n16), .CK(clk), .Q(Out9[4]) );
  DFFTRX1 \Out10_reg[8]  ( .D(In10[8]), .RN(n15), .CK(clk), .Q(Out10[8]) );
  DFFTRX1 \Out10_reg[7]  ( .D(In10[7]), .RN(n14), .CK(clk), .Q(Out10[7]) );
  DFFTRX2 \Out9_reg[15]  ( .D(In9[15]), .RN(n17), .CK(clk), .Q(Out9[15]) );
  DFFTRX2 \Out10_reg[15]  ( .D(In10[15]), .RN(n15), .CK(clk), .Q(Out10[15]) );
  DFFTRXL \Out1_reg[6]  ( .D(In1[6]), .RN(n13), .CK(clk), .Q(Out1[6]) );
  DFFTRXL \Out2_reg[6]  ( .D(In2[6]), .RN(n11), .CK(clk), .Q(Out2[6]) );
  DFFTRXL \Out3_reg[6]  ( .D(In3[6]), .RN(n9), .CK(clk), .Q(Out3[6]) );
  DFFTRXL \Out4_reg[6]  ( .D(In4[6]), .RN(n8), .CK(clk), .Q(Out4[6]) );
  DFFTRXL \Out5_reg[6]  ( .D(In5[6]), .RN(n6), .CK(clk), .Q(Out5[6]) );
  DFFTRXL \Out6_reg[6]  ( .D(In6[6]), .RN(n4), .CK(clk), .Q(Out6[6]) );
  DFFTRXL \Out7_reg[6]  ( .D(In7[6]), .RN(n3), .CK(clk), .Q(Out7[6]) );
  DFFTRXL \Out8_reg[6]  ( .D(In8[6]), .RN(n1), .CK(clk), .Q(Out8[6]) );
  DFFTRXL \Out3_reg[3]  ( .D(In3[3]), .RN(n9), .CK(clk), .Q(Out3[3]) );
  DFFTRXL \Out4_reg[3]  ( .D(In4[3]), .RN(n7), .CK(clk), .Q(Out4[3]) );
  DFFTRXL \Out5_reg[3]  ( .D(In5[3]), .RN(n6), .CK(clk), .Q(Out5[3]) );
  DFFTRXL \Out6_reg[3]  ( .D(In6[3]), .RN(n4), .CK(clk), .Q(Out6[3]) );
  DFFTRXL \Out7_reg[3]  ( .D(In7[3]), .RN(n2), .CK(clk), .Q(Out7[3]) );
  DFFTRXL \Out8_reg[3]  ( .D(In8[3]), .RN(n1), .CK(clk), .Q(Out8[3]) );
  DFFTRXL \Out3_reg[2]  ( .D(In3[2]), .RN(n9), .CK(clk), .Q(Out3[2]) );
  DFFTRXL \Out4_reg[2]  ( .D(In4[2]), .RN(n7), .CK(clk), .Q(Out4[2]) );
  DFFTRXL \Out5_reg[2]  ( .D(In5[2]), .RN(n6), .CK(clk), .Q(Out5[2]) );
  DFFTRXL \Out6_reg[2]  ( .D(In6[2]), .RN(n4), .CK(clk), .Q(Out6[2]) );
  DFFTRXL \Out7_reg[2]  ( .D(In7[2]), .RN(n2), .CK(clk), .Q(Out7[2]) );
  DFFTRXL \Out8_reg[2]  ( .D(In8[2]), .RN(n1), .CK(clk), .Q(Out8[2]) );
  DFFTRX1 \Out10_reg[6]  ( .D(In10[6]), .RN(n14), .CK(clk), .Q(Out10[6]) );
  DFFTRX1 \Out1_reg[1]  ( .D(In1[1]), .RN(n12), .CK(clk), .Q(Out1[1]) );
  DFFTRX1 \Out2_reg[1]  ( .D(In2[1]), .RN(n11), .CK(clk), .Q(Out2[1]) );
  DFFTRX1 \Out3_reg[1]  ( .D(In3[1]), .RN(n9), .CK(clk), .Q(Out3[1]) );
  DFFTRX1 \Out4_reg[1]  ( .D(In4[1]), .RN(n7), .CK(clk), .Q(Out4[1]) );
  DFFTRX1 \Out5_reg[1]  ( .D(In5[1]), .RN(n6), .CK(clk), .Q(Out5[1]) );
  DFFTRX1 \Out6_reg[1]  ( .D(In6[1]), .RN(n4), .CK(clk), .Q(Out6[1]) );
  DFFTRX1 \Out7_reg[1]  ( .D(In7[1]), .RN(n2), .CK(clk), .Q(Out7[1]) );
  DFFTRX1 \Out8_reg[1]  ( .D(In8[1]), .RN(n1), .CK(clk), .Q(Out8[1]) );
  DFFTRX1 \Out9_reg[14]  ( .D(In9[14]), .RN(n17), .CK(clk), .Q(Out9[14]) );
  DFFTRX2 \Out9_reg[18]  ( .D(In9[18]), .RN(n17), .CK(clk), .Q(Out9[18]) );
  DFFTRX2 \Out10_reg[18]  ( .D(In10[18]), .RN(n15), .CK(clk), .Q(Out10[18]) );
  DFFTRX1 \Out2_reg[3]  ( .D(In2[3]), .RN(n11), .CK(clk), .Q(Out2[3]) );
  DFFTRX1 \Out1_reg[3]  ( .D(In1[3]), .RN(n12), .CK(clk), .Q(Out1[3]) );
  DFFTRX1 \Out1_reg[2]  ( .D(In1[2]), .RN(n12), .CK(clk), .Q(Out1[2]) );
  DFFTRX1 \Out2_reg[2]  ( .D(In2[2]), .RN(n11), .CK(clk), .Q(Out2[2]) );
  DFFTRX2 \Out9_reg[19]  ( .D(In9[19]), .RN(n17), .CK(clk), .Q(Out9[19]) );
  DFFTRX1 \Out8_reg[0]  ( .D(In8[0]), .RN(n1), .CK(clk), .Q(Out8[0]) );
  DFFTRX2 \Out10_reg[19]  ( .D(In10[19]), .RN(n15), .CK(clk), .Q(Out10[19]) );
  DFFTRX1 \Out10_reg[4]  ( .D(In10[4]), .RN(n14), .CK(clk), .Q(Out10[4]) );
  DFFTRX1 \Out9_reg[2]  ( .D(In9[2]), .RN(n16), .CK(clk), .Q(Out9[2]) );
  DFFTRX1 \Out10_reg[2]  ( .D(In10[2]), .RN(n14), .CK(clk), .Q(Out10[2]) );
  DFFTRX1 \Out9_reg[3]  ( .D(In9[3]), .RN(n16), .CK(clk), .Q(Out9[3]) );
  DFFTRX1 \Out10_reg[3]  ( .D(In10[3]), .RN(n14), .CK(clk), .Q(Out10[3]) );
  DFFTRX1 \Out9_reg[1]  ( .D(In9[1]), .RN(n16), .CK(clk), .Q(Out9[1]) );
  DFFTRX1 \Out10_reg[1]  ( .D(In10[1]), .RN(n14), .CK(clk), .Q(Out10[1]) );
  DFFTRX2 \Out9_reg[0]  ( .D(In9[0]), .RN(n16), .CK(clk), .Q(Out9[0]) );
  DFFTRX2 \Out10_reg[0]  ( .D(In10[0]), .RN(n14), .CK(clk), .Q(Out10[0]) );
  DFFTRX1 \Out6_reg[0]  ( .D(In6[0]), .RN(n4), .CK(clk), .Q(Out6[0]) );
  DFFTRX1 \Out7_reg[0]  ( .D(In7[0]), .RN(n2), .CK(clk), .Q(Out7[0]) );
  DFFTRX1 \Out3_reg[0]  ( .D(In3[0]), .RN(n9), .CK(clk), .Q(Out3[0]) );
  DFFTRX1 \Out4_reg[0]  ( .D(In4[0]), .RN(n7), .CK(clk), .Q(Out4[0]) );
  DFFTRX1 \Out5_reg[0]  ( .D(In5[0]), .RN(n6), .CK(clk), .Q(Out5[0]) );
  DFFTRX2 \Out1_reg[0]  ( .D(In1[0]), .RN(n12), .CK(clk), .Q(Out1[0]) );
  DFFTRX2 \Out10_reg[12]  ( .D(In10[12]), .RN(n15), .CK(clk), .Q(Out10[12]) );
  DFFTRX2 \Out10_reg[5]  ( .D(In10[5]), .RN(n14), .CK(clk), .Q(Out10[5]) );
  DFFTRX2 \Out9_reg[12]  ( .D(In9[12]), .RN(n17), .CK(clk), .Q(Out9[12]) );
  DFFTRX2 \Out9_reg[5]  ( .D(In9[5]), .RN(n16), .CK(clk), .Q(Out9[5]) );
  DFFTRX1 \Out2_reg[0]  ( .D(In2[0]), .RN(n11), .CK(clk), .Q(Out2[0]) );
  CLKINVX1 U3 ( .A(rst), .Y(n27) );
  CLKBUFX3 U4 ( .A(n22), .Y(n2) );
  CLKBUFX3 U5 ( .A(n22), .Y(n3) );
  CLKBUFX3 U6 ( .A(n21), .Y(n4) );
  CLKBUFX3 U7 ( .A(n21), .Y(n5) );
  CLKBUFX3 U8 ( .A(n20), .Y(n6) );
  CLKBUFX3 U9 ( .A(n20), .Y(n7) );
  CLKBUFX3 U10 ( .A(n19), .Y(n8) );
  CLKBUFX3 U11 ( .A(n19), .Y(n9) );
  CLKBUFX3 U12 ( .A(n20), .Y(n10) );
  CLKBUFX3 U13 ( .A(n19), .Y(n11) );
  CLKBUFX3 U14 ( .A(n26), .Y(n12) );
  CLKBUFX3 U15 ( .A(n18), .Y(n13) );
  CLKBUFX3 U16 ( .A(n26), .Y(n14) );
  CLKBUFX3 U17 ( .A(n23), .Y(n15) );
  CLKBUFX3 U18 ( .A(n18), .Y(n16) );
  CLKBUFX3 U19 ( .A(n18), .Y(n17) );
  CLKBUFX3 U20 ( .A(n23), .Y(n1) );
  CLKBUFX3 U21 ( .A(n24), .Y(n23) );
  CLKBUFX3 U22 ( .A(n24), .Y(n22) );
  CLKBUFX3 U23 ( .A(n24), .Y(n21) );
  CLKBUFX3 U24 ( .A(n25), .Y(n20) );
  CLKBUFX3 U25 ( .A(n25), .Y(n19) );
  CLKBUFX3 U26 ( .A(n26), .Y(n18) );
  CLKBUFX3 U27 ( .A(n27), .Y(n24) );
  CLKBUFX3 U28 ( .A(n27), .Y(n25) );
  CLKBUFX3 U29 ( .A(n27), .Y(n26) );
endmodule


module PE_23_DW01_add_0_DW01_add_23 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21;
  wire   [19:1] carry;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  CMPR32X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  NAND3X4 U1 ( .A(n9), .B(n10), .C(n11), .Y(carry[9]) );
  NAND2X1 U2 ( .A(A[8]), .B(n1), .Y(n11) );
  BUFX8 U3 ( .A(B[8]), .Y(n1) );
  NAND3X4 U4 ( .A(n6), .B(n7), .C(n8), .Y(carry[8]) );
  NAND2X2 U5 ( .A(A[12]), .B(B[12]), .Y(n17) );
  NAND2X1 U6 ( .A(n1), .B(carry[8]), .Y(n9) );
  NAND2X1 U7 ( .A(A[8]), .B(carry[8]), .Y(n10) );
  NAND3X1 U8 ( .A(n12), .B(n13), .C(n14), .Y(carry[5]) );
  NAND2X1 U9 ( .A(A[4]), .B(B[4]), .Y(n14) );
  NAND2X1 U10 ( .A(B[12]), .B(carry[12]), .Y(n15) );
  NAND3X1 U11 ( .A(n19), .B(n20), .C(n21), .Y(carry[17]) );
  AND2X2 U12 ( .A(B[0]), .B(A[0]), .Y(n2) );
  XOR3X1 U13 ( .A(B[9]), .B(A[9]), .C(carry[9]), .Y(SUM[9]) );
  NAND2X1 U14 ( .A(carry[9]), .B(B[9]), .Y(n3) );
  NAND2XL U15 ( .A(A[9]), .B(B[9]), .Y(n4) );
  NAND2X1 U16 ( .A(A[9]), .B(carry[9]), .Y(n5) );
  NAND3X2 U17 ( .A(n3), .B(n4), .C(n5), .Y(carry[10]) );
  XOR3XL U18 ( .A(carry[7]), .B(A[7]), .C(B[7]), .Y(SUM[7]) );
  NAND2X2 U19 ( .A(B[7]), .B(carry[7]), .Y(n6) );
  NAND2X2 U20 ( .A(A[7]), .B(carry[7]), .Y(n7) );
  NAND2X2 U21 ( .A(A[7]), .B(B[7]), .Y(n8) );
  XOR3XL U22 ( .A(carry[8]), .B(A[8]), .C(n1), .Y(SUM[8]) );
  XOR3XL U23 ( .A(carry[4]), .B(A[4]), .C(B[4]), .Y(SUM[4]) );
  NAND2X2 U24 ( .A(B[4]), .B(carry[4]), .Y(n12) );
  NAND2X2 U25 ( .A(A[4]), .B(carry[4]), .Y(n13) );
  NAND2X1 U26 ( .A(A[12]), .B(carry[12]), .Y(n16) );
  NAND3X1 U27 ( .A(n15), .B(n16), .C(n17), .Y(carry[13]) );
  XOR2XL U28 ( .A(carry[16]), .B(n18), .Y(SUM[16]) );
  XOR3XL U29 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  XOR2XL U30 ( .A(B[16]), .B(A[16]), .Y(n18) );
  NAND2X2 U31 ( .A(B[16]), .B(carry[16]), .Y(n19) );
  NAND2X2 U32 ( .A(A[16]), .B(carry[16]), .Y(n20) );
  NAND2X1 U33 ( .A(A[16]), .B(B[16]), .Y(n21) );
  XOR2XL U34 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_23_DW_mult_tc_0_DW_mult_tc_23 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_23 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_23_DW01_add_0_DW01_add_23 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_23_DW_mult_tc_0_DW_mult_tc_23 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_22_DW01_add_0_DW01_add_22 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21;
  wire   [19:1] carry;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  CMPR32X2 U1_15 ( .A(A[15]), .B(B[15]), .C(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  NAND3X4 U1 ( .A(n9), .B(n10), .C(n11), .Y(carry[9]) );
  NAND2X1 U2 ( .A(A[8]), .B(n1), .Y(n11) );
  BUFX8 U3 ( .A(B[8]), .Y(n1) );
  NAND3X4 U4 ( .A(n6), .B(n7), .C(n8), .Y(carry[8]) );
  NAND2X2 U5 ( .A(A[12]), .B(B[12]), .Y(n17) );
  NAND2X1 U6 ( .A(n1), .B(carry[8]), .Y(n9) );
  NAND2X1 U7 ( .A(A[8]), .B(carry[8]), .Y(n10) );
  NAND3X1 U8 ( .A(n12), .B(n13), .C(n14), .Y(carry[5]) );
  NAND2X1 U9 ( .A(A[4]), .B(B[4]), .Y(n14) );
  NAND2X1 U10 ( .A(B[12]), .B(carry[12]), .Y(n15) );
  NAND3X1 U11 ( .A(n19), .B(n20), .C(n21), .Y(carry[17]) );
  AND2X2 U12 ( .A(B[0]), .B(A[0]), .Y(n2) );
  XOR3X1 U13 ( .A(B[9]), .B(A[9]), .C(carry[9]), .Y(SUM[9]) );
  NAND2X1 U14 ( .A(carry[9]), .B(B[9]), .Y(n3) );
  NAND2XL U15 ( .A(A[9]), .B(B[9]), .Y(n4) );
  NAND2X1 U16 ( .A(A[9]), .B(carry[9]), .Y(n5) );
  NAND3X2 U17 ( .A(n3), .B(n4), .C(n5), .Y(carry[10]) );
  XOR3XL U18 ( .A(carry[7]), .B(A[7]), .C(B[7]), .Y(SUM[7]) );
  NAND2X2 U19 ( .A(B[7]), .B(carry[7]), .Y(n6) );
  NAND2X2 U20 ( .A(A[7]), .B(carry[7]), .Y(n7) );
  NAND2X2 U21 ( .A(A[7]), .B(B[7]), .Y(n8) );
  XOR3XL U22 ( .A(carry[8]), .B(A[8]), .C(n1), .Y(SUM[8]) );
  XOR3XL U23 ( .A(carry[4]), .B(A[4]), .C(B[4]), .Y(SUM[4]) );
  NAND2X2 U24 ( .A(B[4]), .B(carry[4]), .Y(n12) );
  NAND2X2 U25 ( .A(A[4]), .B(carry[4]), .Y(n13) );
  NAND2X1 U26 ( .A(A[12]), .B(carry[12]), .Y(n16) );
  NAND3X1 U27 ( .A(n15), .B(n16), .C(n17), .Y(carry[13]) );
  XOR2XL U28 ( .A(carry[16]), .B(n18), .Y(SUM[16]) );
  XOR3XL U29 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  XOR2XL U30 ( .A(B[16]), .B(A[16]), .Y(n18) );
  NAND2X2 U31 ( .A(B[16]), .B(carry[16]), .Y(n19) );
  NAND2X2 U32 ( .A(A[16]), .B(carry[16]), .Y(n20) );
  NAND2X1 U33 ( .A(A[16]), .B(B[16]), .Y(n21) );
  XOR2XL U34 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_22_DW_mult_tc_0_DW_mult_tc_22 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_22 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_22_DW01_add_0_DW01_add_22 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_22_DW_mult_tc_0_DW_mult_tc_22 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_21_DW01_add_0_DW01_add_21 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18;
  wire   [19:1] carry;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  CMPR32X2 U1_14 ( .A(A[14]), .B(B[14]), .C(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  NAND2X2 U1 ( .A(A[8]), .B(carry[8]), .Y(n10) );
  NAND3X2 U2 ( .A(n9), .B(n10), .C(n11), .Y(carry[9]) );
  NAND2X2 U3 ( .A(B[8]), .B(carry[8]), .Y(n9) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U5 ( .A(B[12]), .B(A[12]), .C(carry[12]), .Y(SUM[12]) );
  NAND2X2 U6 ( .A(carry[12]), .B(B[12]), .Y(n2) );
  NAND2X1 U7 ( .A(A[12]), .B(B[12]), .Y(n3) );
  NAND2X2 U8 ( .A(A[12]), .B(carry[12]), .Y(n4) );
  NAND3X1 U9 ( .A(n2), .B(n3), .C(n4), .Y(carry[13]) );
  XOR3XL U10 ( .A(carry[4]), .B(A[4]), .C(B[4]), .Y(SUM[4]) );
  NAND2X1 U11 ( .A(B[4]), .B(carry[4]), .Y(n5) );
  NAND2X1 U12 ( .A(A[4]), .B(carry[4]), .Y(n6) );
  NAND2X1 U13 ( .A(A[4]), .B(B[4]), .Y(n7) );
  NAND3X1 U14 ( .A(n5), .B(n6), .C(n7), .Y(carry[5]) );
  XOR2XL U15 ( .A(B[8]), .B(A[8]), .Y(n8) );
  XOR2XL U16 ( .A(carry[8]), .B(n8), .Y(SUM[8]) );
  NAND2X1 U17 ( .A(A[8]), .B(B[8]), .Y(n11) );
  NAND3X1 U18 ( .A(n16), .B(n17), .C(n18), .Y(carry[16]) );
  NAND2X1 U19 ( .A(A[15]), .B(carry[15]), .Y(n17) );
  XOR2XL U20 ( .A(carry[15]), .B(n15), .Y(SUM[15]) );
  NAND2X1 U21 ( .A(B[15]), .B(carry[15]), .Y(n16) );
  NAND2X1 U22 ( .A(A[15]), .B(B[15]), .Y(n18) );
  NAND2X1 U23 ( .A(B[10]), .B(carry[10]), .Y(n12) );
  NAND2X1 U24 ( .A(A[10]), .B(carry[10]), .Y(n13) );
  NAND2X1 U25 ( .A(A[10]), .B(B[10]), .Y(n14) );
  NAND3X1 U26 ( .A(n12), .B(n13), .C(n14), .Y(carry[11]) );
  XOR3XL U27 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR2XL U28 ( .A(B[15]), .B(A[15]), .Y(n15) );
  XOR2XL U29 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_21_DW_mult_tc_0_DW_mult_tc_21 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_21 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_21_DW01_add_0_DW01_add_21 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_21_DW_mult_tc_0_DW_mult_tc_21 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_20_DW01_add_0_DW01_add_20 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18;
  wire   [19:1] carry;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  CMPR32X2 U1_14 ( .A(A[14]), .B(B[14]), .C(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  NAND2X2 U1 ( .A(A[8]), .B(carry[8]), .Y(n10) );
  NAND3X2 U2 ( .A(n9), .B(n10), .C(n11), .Y(carry[9]) );
  NAND2X2 U3 ( .A(B[8]), .B(carry[8]), .Y(n9) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U5 ( .A(B[12]), .B(A[12]), .C(carry[12]), .Y(SUM[12]) );
  NAND2X2 U6 ( .A(carry[12]), .B(B[12]), .Y(n2) );
  NAND2X1 U7 ( .A(A[12]), .B(B[12]), .Y(n3) );
  NAND2X2 U8 ( .A(A[12]), .B(carry[12]), .Y(n4) );
  NAND3X1 U9 ( .A(n2), .B(n3), .C(n4), .Y(carry[13]) );
  XOR3XL U10 ( .A(carry[4]), .B(A[4]), .C(B[4]), .Y(SUM[4]) );
  NAND2X1 U11 ( .A(B[4]), .B(carry[4]), .Y(n5) );
  NAND2X1 U12 ( .A(A[4]), .B(carry[4]), .Y(n6) );
  NAND2X1 U13 ( .A(A[4]), .B(B[4]), .Y(n7) );
  NAND3X1 U14 ( .A(n5), .B(n6), .C(n7), .Y(carry[5]) );
  XOR2XL U15 ( .A(B[8]), .B(A[8]), .Y(n8) );
  XOR2XL U16 ( .A(carry[8]), .B(n8), .Y(SUM[8]) );
  NAND2X1 U17 ( .A(A[8]), .B(B[8]), .Y(n11) );
  NAND3X1 U18 ( .A(n16), .B(n17), .C(n18), .Y(carry[16]) );
  NAND2X1 U19 ( .A(A[15]), .B(carry[15]), .Y(n17) );
  XOR2XL U20 ( .A(carry[15]), .B(n15), .Y(SUM[15]) );
  NAND2X1 U21 ( .A(B[15]), .B(carry[15]), .Y(n16) );
  NAND2X1 U22 ( .A(A[15]), .B(B[15]), .Y(n18) );
  NAND2X1 U23 ( .A(B[10]), .B(carry[10]), .Y(n12) );
  NAND2X1 U24 ( .A(A[10]), .B(carry[10]), .Y(n13) );
  NAND2X1 U25 ( .A(A[10]), .B(B[10]), .Y(n14) );
  NAND3X1 U26 ( .A(n12), .B(n13), .C(n14), .Y(carry[11]) );
  XOR3XL U27 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR2XL U28 ( .A(B[15]), .B(A[15]), .Y(n15) );
  XOR2XL U29 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_20_DW_mult_tc_0_DW_mult_tc_20 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_20 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_20_DW01_add_0_DW01_add_20 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_20_DW_mult_tc_0_DW_mult_tc_20 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_19_DW01_add_0_DW01_add_19 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18;
  wire   [19:1] carry;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  CMPR32X2 U1_14 ( .A(A[14]), .B(B[14]), .C(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX1 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  NAND3X2 U1 ( .A(n9), .B(n10), .C(n11), .Y(carry[9]) );
  NAND2X2 U2 ( .A(B[8]), .B(carry[8]), .Y(n9) );
  AND2X2 U3 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U4 ( .A(B[12]), .B(A[12]), .C(carry[12]), .Y(SUM[12]) );
  NAND2X2 U5 ( .A(carry[12]), .B(B[12]), .Y(n2) );
  NAND2X1 U6 ( .A(A[12]), .B(B[12]), .Y(n3) );
  NAND2X2 U7 ( .A(A[12]), .B(carry[12]), .Y(n4) );
  NAND3X1 U8 ( .A(n2), .B(n3), .C(n4), .Y(carry[13]) );
  XOR3XL U9 ( .A(carry[4]), .B(A[4]), .C(B[4]), .Y(SUM[4]) );
  NAND2X1 U10 ( .A(B[4]), .B(carry[4]), .Y(n5) );
  NAND2X1 U11 ( .A(A[4]), .B(carry[4]), .Y(n6) );
  NAND2X1 U12 ( .A(A[4]), .B(B[4]), .Y(n7) );
  NAND3X1 U13 ( .A(n5), .B(n6), .C(n7), .Y(carry[5]) );
  XOR2XL U14 ( .A(B[8]), .B(A[8]), .Y(n8) );
  XOR2XL U15 ( .A(carry[8]), .B(n8), .Y(SUM[8]) );
  NAND2X4 U16 ( .A(A[8]), .B(carry[8]), .Y(n10) );
  NAND2X1 U17 ( .A(A[8]), .B(B[8]), .Y(n11) );
  NAND3X1 U18 ( .A(n16), .B(n17), .C(n18), .Y(carry[16]) );
  NAND2X1 U19 ( .A(A[15]), .B(carry[15]), .Y(n17) );
  XOR2XL U20 ( .A(carry[15]), .B(n15), .Y(SUM[15]) );
  NAND2X1 U21 ( .A(B[15]), .B(carry[15]), .Y(n16) );
  NAND2X1 U22 ( .A(A[15]), .B(B[15]), .Y(n18) );
  NAND2X1 U23 ( .A(B[10]), .B(carry[10]), .Y(n12) );
  NAND2X1 U24 ( .A(A[10]), .B(carry[10]), .Y(n13) );
  NAND2X1 U25 ( .A(A[10]), .B(B[10]), .Y(n14) );
  NAND3X1 U26 ( .A(n12), .B(n13), .C(n14), .Y(carry[11]) );
  XOR3XL U27 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR2XL U28 ( .A(B[15]), .B(A[15]), .Y(n15) );
  XOR2XL U29 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_19_DW_mult_tc_0_DW_mult_tc_19 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_19 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_19_DW01_add_0_DW01_add_19 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_19_DW_mult_tc_0_DW_mult_tc_19 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_18_DW01_add_0_DW01_add_18 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8;
  wire   [19:1] carry;

  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  CMPR32X2 U1_14 ( .A(A[14]), .B(B[14]), .C(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX4 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  NAND2X1 U1 ( .A(B[15]), .B(carry[15]), .Y(n6) );
  NAND2X1 U2 ( .A(A[15]), .B(carry[15]), .Y(n7) );
  NAND3X1 U3 ( .A(n2), .B(n3), .C(n4), .Y(carry[11]) );
  NAND2X1 U4 ( .A(B[10]), .B(carry[10]), .Y(n2) );
  NAND2X1 U5 ( .A(A[10]), .B(B[10]), .Y(n4) );
  AND2X2 U6 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND3X1 U7 ( .A(n6), .B(n7), .C(n8), .Y(carry[16]) );
  NAND2X1 U8 ( .A(A[15]), .B(B[15]), .Y(n8) );
  XOR2XL U9 ( .A(carry[15]), .B(n5), .Y(SUM[15]) );
  XOR3XL U10 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  NAND2X4 U11 ( .A(A[10]), .B(carry[10]), .Y(n3) );
  XOR2XL U12 ( .A(B[15]), .B(A[15]), .Y(n5) );
  XOR2XL U13 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_18_DW_mult_tc_0_DW_mult_tc_18 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_18 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_18_DW01_add_0_DW01_add_18 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_18_DW_mult_tc_0_DW_mult_tc_18 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_17_DW01_add_0_DW01_add_17 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX1 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  NAND3X1 U1 ( .A(n3), .B(n4), .C(n5), .Y(carry[19]) );
  NAND2X1 U2 ( .A(A[18]), .B(B[18]), .Y(n5) );
  AND2X2 U3 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U4 ( .A(B[18]), .B(A[18]), .Y(n2) );
  XOR2XL U5 ( .A(carry[18]), .B(n2), .Y(SUM[18]) );
  NAND2X4 U6 ( .A(B[18]), .B(carry[18]), .Y(n3) );
  NAND2X4 U7 ( .A(A[18]), .B(carry[18]), .Y(n4) );
  XOR2XL U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_17_DW_mult_tc_0_DW_mult_tc_17 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_17 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_17_DW01_add_0_DW01_add_17 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_17_DW_mult_tc_0_DW_mult_tc_17 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_16_DW01_add_0_DW01_add_16 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_16_DW_mult_tc_0_DW_mult_tc_16 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_16 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_16_DW01_add_0_DW01_add_16 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_16_DW_mult_tc_0_DW_mult_tc_16 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_15_DW01_add_0_DW01_add_15 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX4 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  NAND2X1 U1 ( .A(A[4]), .B(carry[4]), .Y(n7) );
  NAND2X1 U2 ( .A(B[16]), .B(carry[16]), .Y(n9) );
  NAND3X1 U3 ( .A(n2), .B(n3), .C(n4), .Y(carry[7]) );
  NAND2X1 U4 ( .A(carry[6]), .B(B[6]), .Y(n2) );
  NAND3X1 U5 ( .A(n9), .B(n10), .C(n11), .Y(carry[17]) );
  NAND2X1 U6 ( .A(A[16]), .B(B[16]), .Y(n11) );
  NAND2X1 U7 ( .A(A[16]), .B(carry[16]), .Y(n10) );
  AND2X2 U8 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3XL U9 ( .A(B[6]), .B(A[6]), .C(carry[6]), .Y(SUM[6]) );
  NAND2X1 U10 ( .A(A[6]), .B(B[6]), .Y(n3) );
  NAND2X4 U11 ( .A(A[6]), .B(carry[6]), .Y(n4) );
  XOR3XL U12 ( .A(B[4]), .B(A[4]), .C(carry[4]), .Y(SUM[4]) );
  NAND2X2 U13 ( .A(carry[4]), .B(B[4]), .Y(n5) );
  NAND2X1 U14 ( .A(A[4]), .B(B[4]), .Y(n6) );
  NAND3X2 U15 ( .A(n5), .B(n6), .C(n7), .Y(carry[5]) );
  XOR2XL U16 ( .A(B[16]), .B(A[16]), .Y(n8) );
  XOR2XL U17 ( .A(carry[16]), .B(n8), .Y(SUM[16]) );
  XOR2XL U18 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_15_DW_mult_tc_0_DW_mult_tc_15 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_15 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_15_DW01_add_0_DW01_add_15 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_15_DW_mult_tc_0_DW_mult_tc_15 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_14_DW01_add_0_DW01_add_14 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR2X4 U1 ( .A(B[17]), .B(A[17]), .Y(n6) );
  NAND2X1 U2 ( .A(A[17]), .B(carry[17]), .Y(n8) );
  NAND3X1 U3 ( .A(n7), .B(n8), .C(n9), .Y(carry[18]) );
  NAND2X1 U4 ( .A(A[17]), .B(B[17]), .Y(n9) );
  NAND2X1 U5 ( .A(B[17]), .B(carry[17]), .Y(n7) );
  XOR2X1 U6 ( .A(carry[17]), .B(n6), .Y(SUM[17]) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U8 ( .A(B[6]), .B(A[6]), .Y(n2) );
  XOR2X2 U9 ( .A(carry[6]), .B(n2), .Y(SUM[6]) );
  NAND2X1 U10 ( .A(B[6]), .B(carry[6]), .Y(n3) );
  NAND2X1 U11 ( .A(A[6]), .B(carry[6]), .Y(n4) );
  NAND2X1 U12 ( .A(A[6]), .B(B[6]), .Y(n5) );
  NAND3X2 U13 ( .A(n3), .B(n4), .C(n5), .Y(carry[7]) );
  XOR2XL U14 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_14_DW_mult_tc_0_DW_mult_tc_14 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_14 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_14_DW01_add_0_DW01_add_14 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_14_DW_mult_tc_0_DW_mult_tc_14 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_13_DW01_add_0_DW01_add_13 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  XOR2X4 U1 ( .A(B[17]), .B(A[17]), .Y(n6) );
  NAND2X1 U2 ( .A(A[17]), .B(carry[17]), .Y(n8) );
  NAND3X1 U3 ( .A(n7), .B(n8), .C(n9), .Y(carry[18]) );
  NAND2X1 U4 ( .A(A[17]), .B(B[17]), .Y(n9) );
  NAND2X1 U5 ( .A(B[17]), .B(carry[17]), .Y(n7) );
  XOR2X1 U6 ( .A(carry[17]), .B(n6), .Y(SUM[17]) );
  AND2X2 U7 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U8 ( .A(B[6]), .B(A[6]), .Y(n2) );
  XOR2X2 U9 ( .A(carry[6]), .B(n2), .Y(SUM[6]) );
  NAND2X1 U10 ( .A(B[6]), .B(carry[6]), .Y(n3) );
  NAND2X1 U11 ( .A(A[6]), .B(carry[6]), .Y(n4) );
  NAND2X1 U12 ( .A(A[6]), .B(B[6]), .Y(n5) );
  NAND3X2 U13 ( .A(n3), .B(n4), .C(n5), .Y(carry[7]) );
  XOR2XL U14 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_13_DW_mult_tc_0_DW_mult_tc_13 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_13 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_13_DW01_add_0_DW01_add_13 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_13_DW_mult_tc_0_DW_mult_tc_13 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_12_DW01_add_0_DW01_add_12 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  CMPR32X2 U1_18 ( .A(A[18]), .B(B[18]), .C(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  XOR2X1 U1 ( .A(carry[7]), .B(n2), .Y(SUM[7]) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(n2) );
  AND2X2 U3 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U4 ( .A(B[7]), .B(carry[7]), .Y(n3) );
  NAND2X1 U5 ( .A(A[7]), .B(carry[7]), .Y(n4) );
  NAND2X1 U6 ( .A(A[7]), .B(B[7]), .Y(n5) );
  NAND3X2 U7 ( .A(n3), .B(n4), .C(n5), .Y(carry[8]) );
  XOR2X1 U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_12_DW_mult_tc_0_DW_mult_tc_12 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_12 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_12_DW01_add_0_DW01_add_12 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_12_DW_mult_tc_0_DW_mult_tc_12 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_11_DW01_add_0_DW01_add_11 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  CMPR32X2 U1_18 ( .A(A[18]), .B(B[18]), .C(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  XOR2X1 U1 ( .A(carry[7]), .B(n2), .Y(SUM[7]) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(n2) );
  AND2X2 U3 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U4 ( .A(B[7]), .B(carry[7]), .Y(n3) );
  NAND2X1 U5 ( .A(A[7]), .B(carry[7]), .Y(n4) );
  NAND2X1 U6 ( .A(A[7]), .B(B[7]), .Y(n5) );
  NAND3X2 U7 ( .A(n3), .B(n4), .C(n5), .Y(carry[8]) );
  XOR2X1 U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_11_DW_mult_tc_0_DW_mult_tc_11 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_11 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_11_DW01_add_0_DW01_add_11 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_11_DW_mult_tc_0_DW_mult_tc_11 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_10_DW01_add_0_DW01_add_10 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  CMPR32X2 U1_18 ( .A(A[18]), .B(B[18]), .C(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX4 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR2X1 U1 ( .A(carry[7]), .B(n5), .Y(SUM[7]) );
  XOR2X1 U2 ( .A(B[7]), .B(A[7]), .Y(n5) );
  NAND3X2 U3 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  NAND2X1 U4 ( .A(A[5]), .B(B[5]), .Y(n4) );
  NAND2X2 U5 ( .A(B[5]), .B(carry[5]), .Y(n2) );
  AND2X2 U6 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3X1 U7 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X4 U8 ( .A(A[5]), .B(carry[5]), .Y(n3) );
  NAND2X1 U9 ( .A(B[7]), .B(carry[7]), .Y(n6) );
  NAND2X1 U10 ( .A(A[7]), .B(carry[7]), .Y(n7) );
  NAND2X1 U11 ( .A(A[7]), .B(B[7]), .Y(n8) );
  NAND3X2 U12 ( .A(n6), .B(n7), .C(n8), .Y(carry[8]) );
  XOR2X1 U13 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_10_DW_mult_tc_0_DW_mult_tc_10 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_10 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_10_DW01_add_0_DW01_add_10 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_10_DW_mult_tc_0_DW_mult_tc_10 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n3), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n1), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_9_DW01_add_0_DW01_add_9 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  CMPR32X2 U1_16 ( .A(A[16]), .B(B[16]), .C(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR2X1 U1 ( .A(B[17]), .B(A[17]), .Y(n9) );
  NAND2X1 U2 ( .A(A[3]), .B(carry[3]), .Y(n7) );
  NAND2X1 U3 ( .A(A[17]), .B(carry[17]), .Y(n11) );
  NAND3X1 U4 ( .A(n2), .B(n3), .C(n4), .Y(carry[6]) );
  NAND3X1 U5 ( .A(n10), .B(n11), .C(n12), .Y(carry[18]) );
  NAND2X1 U6 ( .A(A[17]), .B(B[17]), .Y(n12) );
  NAND2X1 U7 ( .A(B[17]), .B(carry[17]), .Y(n10) );
  XOR2X1 U8 ( .A(carry[3]), .B(n5), .Y(SUM[3]) );
  XOR2X1 U9 ( .A(B[3]), .B(A[3]), .Y(n5) );
  XOR3X1 U10 ( .A(B[5]), .B(A[5]), .C(carry[5]), .Y(SUM[5]) );
  XOR2X1 U11 ( .A(carry[17]), .B(n9), .Y(SUM[17]) );
  AND2X2 U12 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U13 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  NAND2X1 U14 ( .A(carry[5]), .B(B[5]), .Y(n2) );
  NAND2X1 U15 ( .A(A[5]), .B(B[5]), .Y(n3) );
  NAND2X1 U16 ( .A(A[5]), .B(carry[5]), .Y(n4) );
  NAND2X2 U17 ( .A(B[3]), .B(carry[3]), .Y(n6) );
  NAND2X4 U18 ( .A(A[3]), .B(B[3]), .Y(n8) );
  NAND3X6 U19 ( .A(n6), .B(n7), .C(n8), .Y(carry[4]) );
endmodule


module PE_9_DW_mult_tc_0_DW_mult_tc_9 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X4 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_9 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_9_DW01_add_0_DW01_add_9 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_9_DW_mult_tc_0_DW_mult_tc_9 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  DFFRX2 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_8_DW01_add_0_DW01_add_8 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR2X2 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  AND2X2 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
endmodule


module PE_8_DW_mult_tc_0_DW_mult_tc_8 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_8 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_8_DW01_add_0_DW01_add_8 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_8_DW_mult_tc_0_DW_mult_tc_8 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_7_DW01_add_0_DW01_add_7 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_7_DW_mult_tc_0_DW_mult_tc_7 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_7 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_7_DW01_add_0_DW01_add_7 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_7_DW_mult_tc_0_DW_mult_tc_7 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_6_DW01_add_0_DW01_add_6 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX1 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2XL U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_6_DW_mult_tc_0_DW_mult_tc_6 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_6 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_6_DW01_add_0_DW01_add_6 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_6_DW_mult_tc_0_DW_mult_tc_6 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_5_DW01_add_0_DW01_add_5 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX4 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_5_DW_mult_tc_0_DW_mult_tc_5 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_5 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_5_DW01_add_0_DW01_add_5 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_5_DW_mult_tc_0_DW_mult_tc_5 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_4_DW01_add_0_DW01_add_4 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX4 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_4_DW_mult_tc_0_DW_mult_tc_4 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_4 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_4_DW01_add_0_DW01_add_4 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_4_DW_mult_tc_0_DW_mult_tc_4 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_3_DW01_add_0_DW01_add_3 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  CMPR32X2 U1_17 ( .A(A[17]), .B(B[17]), .C(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX4 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2XL U2 ( .A(B[14]), .B(carry[14]), .Y(n3) );
  NAND2XL U3 ( .A(A[14]), .B(carry[14]), .Y(n4) );
  XOR2X1 U4 ( .A(carry[14]), .B(n2), .Y(SUM[14]) );
  NAND2X1 U5 ( .A(A[14]), .B(B[14]), .Y(n5) );
  NAND3X1 U6 ( .A(n3), .B(n4), .C(n5), .Y(carry[15]) );
  XOR2X1 U7 ( .A(B[14]), .B(A[14]), .Y(n2) );
  XOR2X1 U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_3_DW_mult_tc_0_DW_mult_tc_3 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_3 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_3_DW01_add_0_DW01_add_3 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_3_DW_mult_tc_0_DW_mult_tc_3 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_2_DW01_add_0_DW01_add_2 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  CMPR32X2 U1_17 ( .A(A[17]), .B(B[17]), .C(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX4 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2XL U2 ( .A(B[14]), .B(carry[14]), .Y(n3) );
  NAND2XL U3 ( .A(A[14]), .B(carry[14]), .Y(n4) );
  XOR2X1 U4 ( .A(carry[14]), .B(n2), .Y(SUM[14]) );
  NAND2X1 U5 ( .A(A[14]), .B(B[14]), .Y(n5) );
  NAND3X1 U6 ( .A(n3), .B(n4), .C(n5), .Y(carry[15]) );
  XOR2X1 U7 ( .A(B[14]), .B(A[14]), .Y(n2) );
  XOR2X1 U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_2_DW_mult_tc_0_DW_mult_tc_2 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_2 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_2_DW01_add_0_DW01_add_2 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_2_DW_mult_tc_0_DW_mult_tc_2 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_1_DW01_add_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  CMPR32X2 U1_17 ( .A(A[17]), .B(B[17]), .C(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2XL U2 ( .A(B[14]), .B(carry[14]), .Y(n3) );
  NAND2XL U3 ( .A(A[14]), .B(carry[14]), .Y(n4) );
  XOR2X1 U4 ( .A(carry[14]), .B(n2), .Y(SUM[14]) );
  NAND2X1 U5 ( .A(A[14]), .B(B[14]), .Y(n5) );
  NAND3X1 U6 ( .A(n3), .B(n4), .C(n5), .Y(carry[15]) );
  XOR2X1 U7 ( .A(B[14]), .B(A[14]), .Y(n2) );
  XOR2X1 U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_1_DW_mult_tc_0_DW_mult_tc_1 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_1 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_1_DW01_add_0_DW01_add_1 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf[15], mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_1_DW_mult_tc_0_DW_mult_tc_1 mult_23 ( .a(ifmapBuf), .b(filterBuf), 
        .product({N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, 
        N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n3), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n1), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n3), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n4), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module PE_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [19:0] A;
  input [19:0] B;
  output [19:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [19:1] carry;

  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3X1 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .Y(SUM[19]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX1 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2XL U2 ( .A(B[14]), .B(carry[14]), .Y(n3) );
  NAND2XL U3 ( .A(A[14]), .B(carry[14]), .Y(n4) );
  XOR2X1 U4 ( .A(carry[14]), .B(n2), .Y(SUM[14]) );
  NAND2X1 U5 ( .A(A[14]), .B(B[14]), .Y(n5) );
  NAND3X1 U6 ( .A(n3), .B(n4), .C(n5), .Y(carry[15]) );
  XOR2X1 U7 ( .A(B[14]), .B(A[14]), .Y(n2) );
  XOR2X1 U8 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module PE_0_DW_mult_tc_0 ( a, b, product );
  input [7:0] a;
  input [7:0] b;
  output [15:0] product;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n17,
         n18, n19, n20, n21, n23, n24, n25, n26, n27, n28, n29, n31, n32, n33,
         n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47,
         n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61,
         n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n74, n75, n76,
         n77, n78, n79, n81, n82, n83, n84, n85, n86, n87, n189, n190, n191,
         n192, n193, n194, n195, n196, n197, n198, n199, n200, n201, n202,
         n203, n204, n205, n206, n207, n208, n209, n210, n211, n212, n213,
         n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243;

  ADDFXL U2 ( .A(n15), .B(n56), .CI(n2), .CO(n1), .S(product[14]) );
  ADDFXL U3 ( .A(n17), .B(n192), .CI(n3), .CO(n2), .S(product[13]) );
  ADDFXL U4 ( .A(n19), .B(n18), .CI(n4), .CO(n3), .S(product[12]) );
  ADDFXL U5 ( .A(n20), .B(n24), .CI(n5), .CO(n4), .S(product[11]) );
  ADDFXL U6 ( .A(n25), .B(n27), .CI(n6), .CO(n5), .S(product[10]) );
  ADDFXL U7 ( .A(n28), .B(n32), .CI(n7), .CO(n6), .S(product[9]) );
  ADDFXL U8 ( .A(n33), .B(n37), .CI(n8), .CO(n7), .S(product[8]) );
  ADDFXL U9 ( .A(n38), .B(n42), .CI(n9), .CO(n8), .S(product[7]) );
  ADDFXL U10 ( .A(n44), .B(n43), .CI(n10), .CO(n9), .S(product[6]) );
  ADDFXL U11 ( .A(n45), .B(n48), .CI(n11), .CO(n10), .S(product[5]) );
  ADDFXL U12 ( .A(n49), .B(n50), .CI(n12), .CO(n11), .S(product[4]) );
  ADDFXL U13 ( .A(n51), .B(n54), .CI(n13), .CO(n12), .S(product[3]) );
  ADDFXL U14 ( .A(n86), .B(n79), .CI(n14), .CO(n13), .S(product[2]) );
  ADDHXL U15 ( .A(n55), .B(n87), .CO(n14), .S(product[1]) );
  ADDFXL U17 ( .A(n21), .B(n64), .CI(n57), .CO(n17), .S(n18) );
  ADDFXL U18 ( .A(n194), .B(n58), .CI(n23), .CO(n19), .S(n20) );
  CMPR42X1 U20 ( .A(n72), .B(n65), .C(n29), .D(n59), .ICI(n26), .S(n25), .ICO(
        n23), .CO(n24) );
  CMPR42X1 U21 ( .A(n66), .B(n60), .C(n196), .D(n34), .ICI(n31), .S(n28), 
        .ICO(n26), .CO(n27) );
  CMPR42X1 U23 ( .A(n67), .B(n61), .C(n39), .D(n36), .ICI(n35), .S(n33), .ICO(
        n31), .CO(n32) );
  CMPR42X1 U26 ( .A(n81), .B(n68), .C(n74), .D(n41), .ICI(n40), .S(n38), .ICO(
        n36), .CO(n37) );
  ADDHXL U27 ( .A(n62), .B(n52), .CO(n39), .S(n40) );
  CMPR42X1 U28 ( .A(n63), .B(n82), .C(n75), .D(n69), .ICI(n46), .S(n43), .ICO(
        n41), .CO(n42) );
  ADDFXL U29 ( .A(n76), .B(n83), .CI(n47), .CO(n44), .S(n45) );
  ADDHXL U30 ( .A(n70), .B(n53), .CO(n46), .S(n47) );
  ADDFXL U31 ( .A(n84), .B(n71), .CI(n77), .CO(n48), .S(n49) );
  ADDHXL U32 ( .A(n85), .B(n78), .CO(n50), .S(n51) );
  NAND2X6 U140 ( .A(n189), .B(n241), .Y(n211) );
  NOR2XL U141 ( .A(n189), .B(n200), .Y(n79) );
  OA22XL U142 ( .A0(n216), .A1(n211), .B0(n189), .B1(n240), .Y(n239) );
  AO21XL U143 ( .A0(n211), .A1(n189), .B0(n217), .Y(n72) );
  OAI32XL U144 ( .A0(n197), .A1(b[0]), .A2(n189), .B0(n197), .B1(n211), .Y(n54) );
  CLKINVX2 U145 ( .A(a[1]), .Y(n198) );
  XOR2XL U146 ( .A(b[7]), .B(a[1]), .Y(n208) );
  CLKINVX1 U147 ( .A(n15), .Y(n192) );
  CLKINVX1 U148 ( .A(n29), .Y(n196) );
  CLKINVX1 U149 ( .A(n21), .Y(n194) );
  CLKBUFX3 U150 ( .A(n209), .Y(n189) );
  XNOR2X1 U151 ( .A(a[2]), .B(a[1]), .Y(n209) );
  NAND2X2 U152 ( .A(n190), .B(n242), .Y(n220) );
  CLKBUFX3 U153 ( .A(n218), .Y(n190) );
  XNOR2X1 U154 ( .A(a[4]), .B(a[3]), .Y(n218) );
  NAND2X2 U155 ( .A(a[1]), .B(n199), .Y(n201) );
  CLKINVX1 U156 ( .A(b[0]), .Y(n200) );
  INVX3 U157 ( .A(a[5]), .Y(n195) );
  INVX3 U158 ( .A(a[3]), .Y(n197) );
  INVX3 U159 ( .A(a[0]), .Y(n199) );
  NAND2X2 U160 ( .A(n191), .B(n243), .Y(n230) );
  INVX3 U161 ( .A(a[7]), .Y(n193) );
  CLKBUFX3 U162 ( .A(n228), .Y(n191) );
  XNOR2X1 U163 ( .A(a[6]), .B(a[5]), .Y(n228) );
  CLKINVX1 U164 ( .A(n1), .Y(product[15]) );
  NOR2X1 U165 ( .A(n199), .B(n200), .Y(product[0]) );
  OAI22XL U166 ( .A0(b[0]), .A1(n201), .B0(n202), .B1(n199), .Y(n87) );
  OAI22XL U167 ( .A0(n202), .A1(n201), .B0(n203), .B1(n199), .Y(n86) );
  XOR2X1 U168 ( .A(b[1]), .B(n198), .Y(n202) );
  OAI22XL U169 ( .A0(n203), .A1(n201), .B0(n204), .B1(n199), .Y(n85) );
  XOR2X1 U170 ( .A(b[2]), .B(n198), .Y(n203) );
  OAI22XL U171 ( .A0(n204), .A1(n201), .B0(n205), .B1(n199), .Y(n84) );
  XOR2X1 U172 ( .A(b[3]), .B(n198), .Y(n204) );
  OAI22XL U173 ( .A0(n205), .A1(n201), .B0(n206), .B1(n199), .Y(n83) );
  XOR2X1 U174 ( .A(b[4]), .B(n198), .Y(n205) );
  OAI22XL U175 ( .A0(n206), .A1(n201), .B0(n207), .B1(n199), .Y(n82) );
  XOR2X1 U176 ( .A(b[5]), .B(n198), .Y(n206) );
  OAI2BB2XL U177 ( .B0(n207), .B1(n201), .A0N(n208), .A1N(a[0]), .Y(n81) );
  XOR2X1 U178 ( .A(b[6]), .B(n198), .Y(n207) );
  OAI22XL U179 ( .A0(n210), .A1(n211), .B0(n189), .B1(n212), .Y(n78) );
  XOR2X1 U180 ( .A(n197), .B(b[0]), .Y(n210) );
  OAI22XL U181 ( .A0(n212), .A1(n211), .B0(n189), .B1(n213), .Y(n77) );
  XOR2X1 U182 ( .A(b[1]), .B(n197), .Y(n212) );
  OAI22XL U183 ( .A0(n213), .A1(n211), .B0(n189), .B1(n214), .Y(n76) );
  XOR2X1 U184 ( .A(b[2]), .B(n197), .Y(n213) );
  OAI22XL U185 ( .A0(n214), .A1(n211), .B0(n189), .B1(n215), .Y(n75) );
  XOR2X1 U186 ( .A(b[3]), .B(n197), .Y(n214) );
  OAI22XL U187 ( .A0(n215), .A1(n211), .B0(n189), .B1(n216), .Y(n74) );
  XOR2X1 U188 ( .A(b[4]), .B(n197), .Y(n215) );
  NOR2X1 U189 ( .A(n190), .B(n200), .Y(n71) );
  OAI22XL U190 ( .A0(n219), .A1(n220), .B0(n190), .B1(n221), .Y(n70) );
  XOR2X1 U191 ( .A(n195), .B(b[0]), .Y(n219) );
  OAI22XL U192 ( .A0(n221), .A1(n220), .B0(n190), .B1(n222), .Y(n69) );
  XOR2X1 U193 ( .A(b[1]), .B(n195), .Y(n221) );
  OAI22XL U194 ( .A0(n222), .A1(n220), .B0(n190), .B1(n223), .Y(n68) );
  XOR2X1 U195 ( .A(b[2]), .B(n195), .Y(n222) );
  OAI22XL U196 ( .A0(n223), .A1(n220), .B0(n190), .B1(n224), .Y(n67) );
  XOR2X1 U197 ( .A(b[3]), .B(n195), .Y(n223) );
  OAI22XL U198 ( .A0(n224), .A1(n220), .B0(n190), .B1(n225), .Y(n66) );
  XOR2X1 U199 ( .A(b[4]), .B(n195), .Y(n224) );
  OAI22XL U200 ( .A0(n225), .A1(n220), .B0(n190), .B1(n226), .Y(n65) );
  XOR2X1 U201 ( .A(b[5]), .B(n195), .Y(n225) );
  AO21X1 U202 ( .A0(n220), .A1(n190), .B0(n227), .Y(n64) );
  NOR2X1 U203 ( .A(n191), .B(n200), .Y(n63) );
  OAI22XL U204 ( .A0(n229), .A1(n230), .B0(n191), .B1(n231), .Y(n62) );
  XOR2X1 U205 ( .A(n193), .B(b[0]), .Y(n229) );
  OAI22XL U206 ( .A0(n231), .A1(n230), .B0(n191), .B1(n232), .Y(n61) );
  XOR2X1 U207 ( .A(b[1]), .B(n193), .Y(n231) );
  OAI22XL U208 ( .A0(n232), .A1(n230), .B0(n191), .B1(n233), .Y(n60) );
  XOR2X1 U209 ( .A(b[2]), .B(n193), .Y(n232) );
  OAI22XL U210 ( .A0(n233), .A1(n230), .B0(n191), .B1(n234), .Y(n59) );
  XOR2X1 U211 ( .A(b[3]), .B(n193), .Y(n233) );
  OAI22XL U212 ( .A0(n234), .A1(n230), .B0(n191), .B1(n235), .Y(n58) );
  XOR2X1 U213 ( .A(b[4]), .B(n193), .Y(n234) );
  OAI22XL U214 ( .A0(n235), .A1(n230), .B0(n191), .B1(n236), .Y(n57) );
  XOR2X1 U215 ( .A(b[5]), .B(n193), .Y(n235) );
  AO21X1 U216 ( .A0(n230), .A1(n191), .B0(n237), .Y(n56) );
  OAI21XL U217 ( .A0(b[0]), .A1(n198), .B0(n201), .Y(n55) );
  OAI32X1 U218 ( .A0(n195), .A1(b[0]), .A2(n190), .B0(n195), .B1(n220), .Y(n53) );
  OAI32X1 U219 ( .A0(n193), .A1(b[0]), .A2(n191), .B0(n193), .B1(n230), .Y(n52) );
  XOR2X1 U220 ( .A(n238), .B(n239), .Y(n35) );
  NAND2BX1 U221 ( .AN(n238), .B(n239), .Y(n34) );
  XOR2X1 U222 ( .A(b[5]), .B(n197), .Y(n216) );
  OAI2BB1X1 U223 ( .A0N(n199), .A1N(n201), .B0(n208), .Y(n238) );
  OAI22XL U224 ( .A0(n189), .A1(n217), .B0(n240), .B1(n211), .Y(n29) );
  XOR2X1 U225 ( .A(a[3]), .B(a[2]), .Y(n241) );
  XOR2X1 U226 ( .A(b[6]), .B(n197), .Y(n240) );
  XOR2X1 U227 ( .A(b[7]), .B(n197), .Y(n217) );
  OAI22XL U228 ( .A0(n190), .A1(n227), .B0(n226), .B1(n220), .Y(n21) );
  XOR2X1 U229 ( .A(a[5]), .B(a[4]), .Y(n242) );
  XOR2X1 U230 ( .A(b[6]), .B(n195), .Y(n226) );
  XOR2X1 U231 ( .A(b[7]), .B(n195), .Y(n227) );
  OAI22XL U232 ( .A0(n191), .A1(n237), .B0(n236), .B1(n230), .Y(n15) );
  XOR2X1 U233 ( .A(a[7]), .B(a[6]), .Y(n243) );
  XOR2X1 U234 ( .A(b[6]), .B(n193), .Y(n236) );
  XOR2X1 U235 ( .A(b[7]), .B(n193), .Y(n237) );
endmodule


module PE_0 ( clk, rst, ifmap, filter, psumIn, psumOut );
  input [7:0] ifmap;
  input [7:0] filter;
  input [19:0] psumIn;
  output [19:0] psumOut;
  input clk, rst;
  wire   N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16,
         n1, n3, n4;
  wire   [15:0] mulBuf;
  wire   [7:0] filterBuf;
  wire   [7:0] ifmapBuf;

  PE_0_DW01_add_0 add_28 ( .A({mulBuf[15], mulBuf[15], mulBuf[15], mulBuf[15], 
        mulBuf}), .B(psumIn), .CI(1'b0), .SUM(psumOut) );
  PE_0_DW_mult_tc_0 mult_23 ( .a(ifmapBuf), .b(filterBuf), .product({N16, N15, 
        N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1}) );
  DFFRX1 \mulBuf_reg[13]  ( .D(N14), .CK(clk), .RN(n3), .Q(mulBuf[13]) );
  DFFRX1 \mulBuf_reg[12]  ( .D(N13), .CK(clk), .RN(n3), .Q(mulBuf[12]) );
  DFFRX1 \mulBuf_reg[11]  ( .D(N12), .CK(clk), .RN(n3), .Q(mulBuf[11]) );
  DFFRX1 \mulBuf_reg[10]  ( .D(N11), .CK(clk), .RN(n3), .Q(mulBuf[10]) );
  DFFRX1 \mulBuf_reg[9]  ( .D(N10), .CK(clk), .RN(n3), .Q(mulBuf[9]) );
  DFFRX1 \mulBuf_reg[8]  ( .D(N9), .CK(clk), .RN(n3), .Q(mulBuf[8]) );
  DFFRX1 \mulBuf_reg[7]  ( .D(N8), .CK(clk), .RN(n3), .Q(mulBuf[7]) );
  DFFRX1 \mulBuf_reg[6]  ( .D(N7), .CK(clk), .RN(n3), .Q(mulBuf[6]) );
  DFFRX1 \mulBuf_reg[5]  ( .D(N6), .CK(clk), .RN(n3), .Q(mulBuf[5]) );
  DFFRX1 \mulBuf_reg[4]  ( .D(N5), .CK(clk), .RN(n3), .Q(mulBuf[4]) );
  DFFRX1 \mulBuf_reg[3]  ( .D(N4), .CK(clk), .RN(n1), .Q(mulBuf[3]) );
  DFFRX1 \mulBuf_reg[2]  ( .D(N3), .CK(clk), .RN(n1), .Q(mulBuf[2]) );
  DFFRX1 \mulBuf_reg[1]  ( .D(N2), .CK(clk), .RN(n1), .Q(mulBuf[1]) );
  DFFRX1 \mulBuf_reg[0]  ( .D(N1), .CK(clk), .RN(n1), .Q(mulBuf[0]) );
  DFFRX1 \filterBuf_reg[7]  ( .D(filter[7]), .CK(clk), .RN(n1), .Q(
        filterBuf[7]) );
  DFFRX1 \ifmapBuf_reg[6]  ( .D(ifmap[6]), .CK(clk), .RN(n1), .Q(ifmapBuf[6])
         );
  DFFRX1 \filterBuf_reg[6]  ( .D(filter[6]), .CK(clk), .RN(n1), .Q(
        filterBuf[6]) );
  DFFRX1 \ifmapBuf_reg[7]  ( .D(ifmap[7]), .CK(clk), .RN(n4), .Q(ifmapBuf[7])
         );
  DFFRX1 \ifmapBuf_reg[4]  ( .D(ifmap[4]), .CK(clk), .RN(n3), .Q(ifmapBuf[4])
         );
  DFFRX1 \ifmapBuf_reg[2]  ( .D(ifmap[2]), .CK(clk), .RN(n1), .Q(ifmapBuf[2])
         );
  DFFRX1 \filterBuf_reg[5]  ( .D(filter[5]), .CK(clk), .RN(n1), .Q(
        filterBuf[5]) );
  DFFRX1 \filterBuf_reg[4]  ( .D(filter[4]), .CK(clk), .RN(n1), .Q(
        filterBuf[4]) );
  DFFRX1 \filterBuf_reg[3]  ( .D(filter[3]), .CK(clk), .RN(n1), .Q(
        filterBuf[3]) );
  DFFRX1 \filterBuf_reg[2]  ( .D(filter[2]), .CK(clk), .RN(n1), .Q(
        filterBuf[2]) );
  DFFRX1 \filterBuf_reg[1]  ( .D(filter[1]), .CK(clk), .RN(n1), .Q(
        filterBuf[1]) );
  DFFRX1 \ifmapBuf_reg[0]  ( .D(ifmap[0]), .CK(clk), .RN(n3), .Q(ifmapBuf[0])
         );
  DFFRX1 \ifmapBuf_reg[5]  ( .D(ifmap[5]), .CK(clk), .RN(n4), .Q(ifmapBuf[5])
         );
  DFFRX2 \filterBuf_reg[0]  ( .D(filter[0]), .CK(clk), .RN(n1), .Q(
        filterBuf[0]) );
  DFFRX1 \ifmapBuf_reg[3]  ( .D(ifmap[3]), .CK(clk), .RN(n4), .Q(ifmapBuf[3])
         );
  DFFRX1 \mulBuf_reg[15]  ( .D(N16), .CK(clk), .RN(n3), .Q(mulBuf[15]) );
  DFFRX1 \mulBuf_reg[14]  ( .D(N15), .CK(clk), .RN(n3), .Q(mulBuf[14]) );
  DFFRX1 \ifmapBuf_reg[1]  ( .D(ifmap[1]), .CK(clk), .RN(n4), .Q(ifmapBuf[1])
         );
  CLKINVX1 U3 ( .A(rst), .Y(n4) );
  CLKBUFX3 U5 ( .A(n4), .Y(n1) );
  CLKBUFX3 U6 ( .A(n4), .Y(n3) );
endmodule


module Adder_9_DW01_add_1_DW01_add_91 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFX1 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX1 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX1 U1_1 ( .A(A[1]), .B(B[1]), .CI(carry[1]), .CO(carry[2]), .S(SUM[1])
         );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFX1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  NAND2X1 U1 ( .A(n3), .B(n4), .Y(SUM[0]) );
  INVXL U2 ( .A(B[0]), .Y(n1) );
  NAND2XL U3 ( .A(B[0]), .B(n2), .Y(n3) );
  NAND2XL U4 ( .A(n1), .B(A[0]), .Y(n4) );
  INVXL U5 ( .A(A[0]), .Y(n2) );
  NAND2X2 U6 ( .A(B[0]), .B(A[0]), .Y(n5) );
  INVX3 U7 ( .A(n5), .Y(carry[1]) );
endmodule


module Adder_9_DW01_add_0_DW01_add_90 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX1 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFXL U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX1 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  NAND2X4 U1 ( .A(A[7]), .B(carry[7]), .Y(n10) );
  NAND2X4 U2 ( .A(B[7]), .B(carry[7]), .Y(n9) );
  NAND3X4 U3 ( .A(n6), .B(n7), .C(n8), .Y(carry[7]) );
  AND2X2 U4 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U5 ( .A(A[6]), .B(B[6]), .Y(n8) );
  NAND3X2 U6 ( .A(n3), .B(n4), .C(n5), .Y(carry[17]) );
  NAND2X1 U7 ( .A(A[17]), .B(carry[17]), .Y(n16) );
  NAND2X1 U8 ( .A(B[17]), .B(carry[17]), .Y(n15) );
  NAND2X1 U9 ( .A(B[16]), .B(carry[16]), .Y(n3) );
  NAND2X1 U10 ( .A(A[16]), .B(carry[16]), .Y(n4) );
  NAND2X1 U11 ( .A(A[16]), .B(B[16]), .Y(n5) );
  NAND2X1 U12 ( .A(B[6]), .B(carry[6]), .Y(n6) );
  NAND2X1 U13 ( .A(A[6]), .B(carry[6]), .Y(n7) );
  XOR2XL U14 ( .A(B[16]), .B(A[16]), .Y(n2) );
  XOR2XL U15 ( .A(carry[16]), .B(n2), .Y(SUM[16]) );
  XOR3XL U16 ( .A(carry[6]), .B(A[6]), .C(B[6]), .Y(SUM[6]) );
  NAND2X1 U17 ( .A(A[17]), .B(B[17]), .Y(n17) );
  NAND3X1 U18 ( .A(n15), .B(n16), .C(n17), .Y(carry[18]) );
  NAND2X1 U19 ( .A(B[10]), .B(carry[10]), .Y(n12) );
  NAND2X1 U20 ( .A(A[10]), .B(carry[10]), .Y(n13) );
  NAND2X1 U21 ( .A(A[10]), .B(B[10]), .Y(n14) );
  NAND3X1 U22 ( .A(n12), .B(n13), .C(n14), .Y(carry[11]) );
  XOR3XL U23 ( .A(carry[7]), .B(A[7]), .C(B[7]), .Y(SUM[7]) );
  NAND2X1 U24 ( .A(A[7]), .B(B[7]), .Y(n11) );
  NAND3X1 U25 ( .A(n9), .B(n10), .C(n11), .Y(carry[8]) );
  XOR3XL U26 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR3XL U27 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U28 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_9 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_9_DW01_add_1_DW01_add_91 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_9_DW01_add_0_DW01_add_90 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_8_DW01_add_1_DW01_add_89 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX4 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX4 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX4 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_8_DW01_add_0_DW01_add_88 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX4 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND2X1 U2 ( .A(B[17]), .B(carry[17]), .Y(n11) );
  NAND2X1 U3 ( .A(B[15]), .B(carry[15]), .Y(n5) );
  NAND2X1 U4 ( .A(A[15]), .B(carry[15]), .Y(n6) );
  NAND2X1 U5 ( .A(A[15]), .B(B[15]), .Y(n7) );
  NAND3X1 U6 ( .A(n5), .B(n6), .C(n7), .Y(carry[16]) );
  NAND2X1 U7 ( .A(B[10]), .B(carry[10]), .Y(n2) );
  NAND2X1 U8 ( .A(A[10]), .B(carry[10]), .Y(n3) );
  NAND2X1 U9 ( .A(A[10]), .B(B[10]), .Y(n4) );
  NAND3X1 U10 ( .A(n2), .B(n3), .C(n4), .Y(carry[11]) );
  XOR3XL U11 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR3XL U12 ( .A(carry[15]), .B(A[15]), .C(B[15]), .Y(SUM[15]) );
  NAND2X1 U13 ( .A(A[17]), .B(carry[17]), .Y(n12) );
  XOR3XL U14 ( .A(B[20]), .B(A[20]), .C(carry[20]), .Y(SUM[20]) );
  NAND3X1 U15 ( .A(n11), .B(n12), .C(n13), .Y(carry[18]) );
  NAND2X1 U16 ( .A(A[17]), .B(B[17]), .Y(n13) );
  NAND2X1 U17 ( .A(carry[20]), .B(B[20]), .Y(n8) );
  NAND2X1 U18 ( .A(A[20]), .B(B[20]), .Y(n9) );
  NAND2X1 U19 ( .A(A[20]), .B(carry[20]), .Y(n10) );
  NAND3X1 U20 ( .A(n8), .B(n9), .C(n10), .Y(carry[21]) );
  XOR3XL U21 ( .A(carry[17]), .B(A[17]), .C(B[17]), .Y(SUM[17]) );
  XOR2XL U22 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_8 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_8_DW01_add_1_DW01_add_89 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_8_DW01_add_0_DW01_add_88 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_7_DW01_add_1_DW01_add_87 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_7_DW01_add_0_DW01_add_86 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32;
  wire   [21:1] carry;

  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX4 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  NAND2X2 U1 ( .A(A[17]), .B(carry[17]), .Y(n31) );
  NAND3X4 U2 ( .A(n19), .B(n20), .C(n21), .Y(carry[17]) );
  NAND2X4 U3 ( .A(A[2]), .B(carry[2]), .Y(n13) );
  NAND2X4 U4 ( .A(B[2]), .B(carry[2]), .Y(n12) );
  NAND3X4 U5 ( .A(n9), .B(n10), .C(n11), .Y(carry[2]) );
  NAND3X2 U6 ( .A(n30), .B(n31), .C(n32), .Y(carry[18]) );
  NAND2X4 U7 ( .A(n2), .B(n24), .Y(carry[20]) );
  NAND3X6 U8 ( .A(n12), .B(n13), .C(n14), .Y(carry[3]) );
  NAND2X4 U9 ( .A(A[2]), .B(B[2]), .Y(n14) );
  NAND2X2 U10 ( .A(A[12]), .B(carry[12]), .Y(n4) );
  NAND2X1 U11 ( .A(A[1]), .B(n1), .Y(n11) );
  NAND2X1 U12 ( .A(A[1]), .B(B[1]), .Y(n10) );
  NAND2X1 U13 ( .A(n1), .B(B[1]), .Y(n9) );
  NAND3X1 U14 ( .A(n3), .B(n4), .C(n5), .Y(carry[13]) );
  NAND2X1 U15 ( .A(A[12]), .B(B[12]), .Y(n5) );
  NAND2X1 U16 ( .A(B[12]), .B(carry[12]), .Y(n3) );
  AND2X2 U17 ( .A(B[0]), .B(A[0]), .Y(n1) );
  AND2X2 U18 ( .A(n25), .B(n23), .Y(n2) );
  XOR3XL U19 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  XOR3XL U20 ( .A(B[20]), .B(A[20]), .C(carry[20]), .Y(SUM[20]) );
  XOR2XL U21 ( .A(carry[19]), .B(n22), .Y(SUM[19]) );
  NAND2X1 U22 ( .A(carry[20]), .B(B[20]), .Y(n26) );
  NAND2X1 U23 ( .A(A[20]), .B(carry[20]), .Y(n28) );
  NAND2XL U24 ( .A(B[19]), .B(carry[19]), .Y(n23) );
  NAND2XL U25 ( .A(A[19]), .B(carry[19]), .Y(n24) );
  NAND2X1 U26 ( .A(A[19]), .B(B[19]), .Y(n25) );
  NAND2X1 U27 ( .A(B[10]), .B(carry[10]), .Y(n6) );
  NAND2X1 U28 ( .A(A[10]), .B(carry[10]), .Y(n7) );
  NAND2X1 U29 ( .A(A[10]), .B(B[10]), .Y(n8) );
  NAND3X1 U30 ( .A(n6), .B(n7), .C(n8), .Y(carry[11]) );
  XOR3XL U31 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR3XL U32 ( .A(B[1]), .B(A[1]), .C(n1), .Y(SUM[1]) );
  NAND2X1 U33 ( .A(B[16]), .B(carry[16]), .Y(n19) );
  NAND2X1 U34 ( .A(A[16]), .B(carry[16]), .Y(n20) );
  XOR3XL U35 ( .A(carry[2]), .B(A[2]), .C(B[2]), .Y(SUM[2]) );
  NAND2X1 U36 ( .A(A[16]), .B(B[16]), .Y(n21) );
  NAND3X1 U37 ( .A(n15), .B(n16), .C(n17), .Y(carry[4]) );
  NAND2X1 U38 ( .A(B[3]), .B(carry[3]), .Y(n15) );
  NAND2X1 U39 ( .A(A[3]), .B(carry[3]), .Y(n16) );
  NAND2X1 U40 ( .A(A[3]), .B(B[3]), .Y(n17) );
  NAND2X1 U41 ( .A(B[17]), .B(carry[17]), .Y(n30) );
  XOR3XL U42 ( .A(carry[3]), .B(A[3]), .C(B[3]), .Y(SUM[3]) );
  XOR2XL U43 ( .A(B[16]), .B(A[16]), .Y(n18) );
  XOR2XL U44 ( .A(carry[16]), .B(n18), .Y(SUM[16]) );
  XOR2XL U45 ( .A(B[19]), .B(A[19]), .Y(n22) );
  NAND2X1 U46 ( .A(A[17]), .B(B[17]), .Y(n32) );
  NAND2X1 U47 ( .A(A[20]), .B(B[20]), .Y(n27) );
  NAND3X1 U48 ( .A(n26), .B(n27), .C(n28), .Y(carry[21]) );
  XOR2XL U49 ( .A(B[17]), .B(A[17]), .Y(n29) );
  XOR2XL U50 ( .A(carry[17]), .B(n29), .Y(SUM[17]) );
  XOR2XL U51 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_7 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_7_DW01_add_1_DW01_add_87 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_7_DW01_add_0_DW01_add_86 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_6_DW01_add_1_DW01_add_85 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_6_DW01_add_0_DW01_add_84 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32;
  wire   [21:1] carry;

  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX4 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  NAND2X2 U1 ( .A(A[17]), .B(carry[17]), .Y(n31) );
  NAND3X4 U2 ( .A(n19), .B(n20), .C(n21), .Y(carry[17]) );
  NAND2X4 U3 ( .A(A[2]), .B(carry[2]), .Y(n13) );
  NAND2X4 U4 ( .A(B[2]), .B(carry[2]), .Y(n12) );
  NAND3X4 U5 ( .A(n9), .B(n10), .C(n11), .Y(carry[2]) );
  NAND3X2 U6 ( .A(n30), .B(n31), .C(n32), .Y(carry[18]) );
  NAND2X4 U7 ( .A(n2), .B(n24), .Y(carry[20]) );
  NAND3X6 U8 ( .A(n12), .B(n13), .C(n14), .Y(carry[3]) );
  NAND2X4 U9 ( .A(A[2]), .B(B[2]), .Y(n14) );
  NAND2X2 U10 ( .A(A[12]), .B(carry[12]), .Y(n4) );
  NAND2X1 U11 ( .A(A[1]), .B(n1), .Y(n11) );
  NAND2X1 U12 ( .A(A[1]), .B(B[1]), .Y(n10) );
  NAND2X1 U13 ( .A(n1), .B(B[1]), .Y(n9) );
  NAND3X1 U14 ( .A(n3), .B(n4), .C(n5), .Y(carry[13]) );
  NAND2X1 U15 ( .A(A[12]), .B(B[12]), .Y(n5) );
  NAND2X1 U16 ( .A(B[12]), .B(carry[12]), .Y(n3) );
  AND2X2 U17 ( .A(B[0]), .B(A[0]), .Y(n1) );
  AND2X2 U18 ( .A(n25), .B(n23), .Y(n2) );
  XOR3XL U19 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  XOR2XL U20 ( .A(carry[19]), .B(n22), .Y(SUM[19]) );
  NAND2X1 U21 ( .A(carry[20]), .B(B[20]), .Y(n26) );
  NAND2X1 U22 ( .A(A[20]), .B(carry[20]), .Y(n28) );
  NAND2XL U23 ( .A(B[19]), .B(carry[19]), .Y(n23) );
  NAND2XL U24 ( .A(A[19]), .B(carry[19]), .Y(n24) );
  NAND2X1 U25 ( .A(A[19]), .B(B[19]), .Y(n25) );
  NAND2X1 U26 ( .A(B[10]), .B(carry[10]), .Y(n6) );
  NAND2X1 U27 ( .A(A[10]), .B(carry[10]), .Y(n7) );
  NAND2X1 U28 ( .A(A[10]), .B(B[10]), .Y(n8) );
  NAND3X1 U29 ( .A(n6), .B(n7), .C(n8), .Y(carry[11]) );
  XOR3XL U30 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR3XL U31 ( .A(B[20]), .B(A[20]), .C(carry[20]), .Y(SUM[20]) );
  XOR3XL U32 ( .A(B[1]), .B(A[1]), .C(n1), .Y(SUM[1]) );
  NAND2X1 U33 ( .A(B[16]), .B(carry[16]), .Y(n19) );
  NAND2X1 U34 ( .A(A[16]), .B(carry[16]), .Y(n20) );
  XOR3XL U35 ( .A(carry[2]), .B(A[2]), .C(B[2]), .Y(SUM[2]) );
  NAND2X1 U36 ( .A(A[16]), .B(B[16]), .Y(n21) );
  NAND3X1 U37 ( .A(n15), .B(n16), .C(n17), .Y(carry[4]) );
  NAND2X1 U38 ( .A(B[3]), .B(carry[3]), .Y(n15) );
  NAND2X1 U39 ( .A(A[3]), .B(carry[3]), .Y(n16) );
  NAND2X1 U40 ( .A(A[3]), .B(B[3]), .Y(n17) );
  NAND2X1 U41 ( .A(B[17]), .B(carry[17]), .Y(n30) );
  XOR3XL U42 ( .A(carry[3]), .B(A[3]), .C(B[3]), .Y(SUM[3]) );
  XOR2XL U43 ( .A(B[16]), .B(A[16]), .Y(n18) );
  XOR2XL U44 ( .A(carry[16]), .B(n18), .Y(SUM[16]) );
  XOR2XL U45 ( .A(B[19]), .B(A[19]), .Y(n22) );
  NAND2X1 U46 ( .A(A[17]), .B(B[17]), .Y(n32) );
  NAND2X1 U47 ( .A(A[20]), .B(B[20]), .Y(n27) );
  NAND3X1 U48 ( .A(n26), .B(n27), .C(n28), .Y(carry[21]) );
  XOR2XL U49 ( .A(B[17]), .B(A[17]), .Y(n29) );
  XOR2XL U50 ( .A(carry[17]), .B(n29), .Y(SUM[17]) );
  XOR2XL U51 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_6 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_6_DW01_add_1_DW01_add_85 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_6_DW01_add_0_DW01_add_84 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_5_DW01_add_1_DW01_add_83 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX4 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX4 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  AND2X2 U1 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U2 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_5_DW01_add_0_DW01_add_82 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32;
  wire   [21:1] carry;

  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX4 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  NAND2X2 U1 ( .A(A[17]), .B(carry[17]), .Y(n31) );
  NAND3X4 U2 ( .A(n19), .B(n20), .C(n21), .Y(carry[17]) );
  NAND2X4 U3 ( .A(A[2]), .B(carry[2]), .Y(n13) );
  NAND2X4 U4 ( .A(B[2]), .B(carry[2]), .Y(n12) );
  NAND3X4 U5 ( .A(n9), .B(n10), .C(n11), .Y(carry[2]) );
  NAND3X2 U6 ( .A(n30), .B(n31), .C(n32), .Y(carry[18]) );
  NAND2X4 U7 ( .A(n2), .B(n24), .Y(carry[20]) );
  NAND3X6 U8 ( .A(n12), .B(n13), .C(n14), .Y(carry[3]) );
  NAND2X4 U9 ( .A(A[2]), .B(B[2]), .Y(n14) );
  NAND2X2 U10 ( .A(A[12]), .B(carry[12]), .Y(n4) );
  NAND2X1 U11 ( .A(A[1]), .B(n1), .Y(n11) );
  NAND2X1 U12 ( .A(A[1]), .B(B[1]), .Y(n10) );
  NAND2X1 U13 ( .A(n1), .B(B[1]), .Y(n9) );
  NAND3X1 U14 ( .A(n3), .B(n4), .C(n5), .Y(carry[13]) );
  NAND2X1 U15 ( .A(A[12]), .B(B[12]), .Y(n5) );
  NAND2X1 U16 ( .A(B[12]), .B(carry[12]), .Y(n3) );
  AND2X2 U17 ( .A(B[0]), .B(A[0]), .Y(n1) );
  AND2X2 U18 ( .A(n25), .B(n23), .Y(n2) );
  XOR3XL U19 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  XOR2XL U20 ( .A(carry[19]), .B(n22), .Y(SUM[19]) );
  NAND2X1 U21 ( .A(carry[20]), .B(B[20]), .Y(n26) );
  NAND2X1 U22 ( .A(A[20]), .B(carry[20]), .Y(n28) );
  NAND2XL U23 ( .A(B[19]), .B(carry[19]), .Y(n23) );
  NAND2XL U24 ( .A(A[19]), .B(carry[19]), .Y(n24) );
  NAND2X1 U25 ( .A(A[19]), .B(B[19]), .Y(n25) );
  NAND2X1 U26 ( .A(B[10]), .B(carry[10]), .Y(n6) );
  NAND2X1 U27 ( .A(A[10]), .B(carry[10]), .Y(n7) );
  NAND2X1 U28 ( .A(A[10]), .B(B[10]), .Y(n8) );
  NAND3X1 U29 ( .A(n6), .B(n7), .C(n8), .Y(carry[11]) );
  XOR3XL U30 ( .A(carry[10]), .B(A[10]), .C(B[10]), .Y(SUM[10]) );
  XOR3XL U31 ( .A(B[20]), .B(A[20]), .C(carry[20]), .Y(SUM[20]) );
  XOR3XL U32 ( .A(B[1]), .B(A[1]), .C(n1), .Y(SUM[1]) );
  NAND2X1 U33 ( .A(B[16]), .B(carry[16]), .Y(n19) );
  NAND2X1 U34 ( .A(A[16]), .B(carry[16]), .Y(n20) );
  XOR3XL U35 ( .A(carry[2]), .B(A[2]), .C(B[2]), .Y(SUM[2]) );
  NAND2X1 U36 ( .A(A[16]), .B(B[16]), .Y(n21) );
  NAND3X1 U37 ( .A(n15), .B(n16), .C(n17), .Y(carry[4]) );
  NAND2X1 U38 ( .A(B[3]), .B(carry[3]), .Y(n15) );
  NAND2X1 U39 ( .A(A[3]), .B(carry[3]), .Y(n16) );
  NAND2X1 U40 ( .A(A[3]), .B(B[3]), .Y(n17) );
  NAND2X1 U41 ( .A(B[17]), .B(carry[17]), .Y(n30) );
  XOR3XL U42 ( .A(carry[3]), .B(A[3]), .C(B[3]), .Y(SUM[3]) );
  XOR2XL U43 ( .A(B[16]), .B(A[16]), .Y(n18) );
  XOR2XL U44 ( .A(carry[16]), .B(n18), .Y(SUM[16]) );
  XOR2XL U45 ( .A(B[19]), .B(A[19]), .Y(n22) );
  NAND2X1 U46 ( .A(A[17]), .B(B[17]), .Y(n32) );
  NAND2X1 U47 ( .A(A[20]), .B(B[20]), .Y(n27) );
  NAND3X1 U48 ( .A(n26), .B(n27), .C(n28), .Y(carry[21]) );
  XOR2XL U49 ( .A(B[17]), .B(A[17]), .Y(n29) );
  XOR2XL U50 ( .A(carry[17]), .B(n29), .Y(SUM[17]) );
  XOR2XL U51 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_5 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_5_DW01_add_1_DW01_add_83 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_5_DW01_add_0_DW01_add_82 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_4_DW01_add_1_DW01_add_81 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  BUFX8 U1 ( .A(A[0]), .Y(n1) );
  CLKAND2X3 U2 ( .A(B[0]), .B(n1), .Y(n2) );
  INVX1 U3 ( .A(B[0]), .Y(n3) );
  NAND2X1 U4 ( .A(B[0]), .B(n4), .Y(n5) );
  NAND2X1 U5 ( .A(n3), .B(n1), .Y(n6) );
  NAND2X1 U6 ( .A(n5), .B(n6), .Y(SUM[0]) );
  INVXL U7 ( .A(n1), .Y(n4) );
endmodule


module Adder_4_DW01_add_0_DW01_add_80 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18;
  wire   [21:1] carry;

  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFHX4 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX1 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  NAND3X2 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  NAND3X1 U2 ( .A(n2), .B(n3), .C(n4), .Y(carry[2]) );
  NAND2X1 U3 ( .A(A[1]), .B(n1), .Y(n4) );
  NAND2X1 U4 ( .A(n1), .B(B[1]), .Y(n2) );
  XOR2X1 U5 ( .A(carry[20]), .B(n15), .Y(SUM[20]) );
  AND2X2 U6 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3XL U7 ( .A(B[1]), .B(A[1]), .C(n1), .Y(SUM[1]) );
  NAND2X2 U8 ( .A(A[1]), .B(B[1]), .Y(n3) );
  NAND3X2 U9 ( .A(n12), .B(n13), .C(n14), .Y(carry[20]) );
  XOR2XL U10 ( .A(carry[19]), .B(n11), .Y(SUM[19]) );
  NAND2X1 U11 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U12 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U13 ( .A(A[14]), .B(B[14]), .Y(n10) );
  XOR2X1 U14 ( .A(B[20]), .B(A[20]), .Y(n15) );
  NAND2X2 U15 ( .A(B[19]), .B(carry[19]), .Y(n12) );
  NAND2X2 U16 ( .A(A[19]), .B(carry[19]), .Y(n13) );
  NAND2X1 U17 ( .A(A[19]), .B(B[19]), .Y(n14) );
  NAND3X1 U18 ( .A(n5), .B(n6), .C(n7), .Y(carry[4]) );
  NAND2X1 U19 ( .A(B[3]), .B(carry[3]), .Y(n5) );
  NAND2X1 U20 ( .A(A[3]), .B(carry[3]), .Y(n6) );
  NAND2X1 U21 ( .A(A[3]), .B(B[3]), .Y(n7) );
  NAND2X1 U22 ( .A(A[20]), .B(B[20]), .Y(n18) );
  NAND2X1 U23 ( .A(B[20]), .B(carry[20]), .Y(n16) );
  NAND2X1 U24 ( .A(A[20]), .B(carry[20]), .Y(n17) );
  XOR3XL U25 ( .A(carry[3]), .B(A[3]), .C(B[3]), .Y(SUM[3]) );
  XOR3XL U26 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  XOR2XL U27 ( .A(B[19]), .B(A[19]), .Y(n11) );
  NAND3X1 U28 ( .A(n16), .B(n17), .C(n18), .Y(carry[21]) );
  XOR2XL U29 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_4 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0, n1;

  Adder_4_DW01_add_1_DW01_add_81 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum[19:1], n1}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0})
         );
  Adder_4_DW01_add_0_DW01_add_80 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
  BUFX6 U3 ( .A(Rf1_sum[0]), .Y(n1) );
endmodule


module Adder_3_DW01_add_1_DW01_add_79 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX1 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  NAND2X2 U1 ( .A(B[0]), .B(n4), .Y(n5) );
  INVX1 U2 ( .A(n1), .Y(n4) );
  CLKAND2X12 U3 ( .A(B[0]), .B(n1), .Y(n2) );
  INVX4 U4 ( .A(B[0]), .Y(n3) );
  BUFX8 U5 ( .A(A[0]), .Y(n1) );
  NAND2X1 U6 ( .A(n3), .B(n1), .Y(n6) );
  NAND2X1 U7 ( .A(n5), .B(n6), .Y(SUM[0]) );
endmodule


module Adder_3_DW01_add_0_DW01_add_78 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18;
  wire   [21:1] carry;

  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFHX4 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  NAND3X2 U1 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  NAND3X1 U2 ( .A(n2), .B(n3), .C(n4), .Y(carry[2]) );
  NAND2X1 U3 ( .A(A[1]), .B(n1), .Y(n4) );
  NAND2X1 U4 ( .A(n1), .B(B[1]), .Y(n2) );
  XOR2X1 U5 ( .A(carry[20]), .B(n15), .Y(SUM[20]) );
  AND2X2 U6 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3XL U7 ( .A(B[1]), .B(A[1]), .C(n1), .Y(SUM[1]) );
  NAND2X2 U8 ( .A(A[1]), .B(B[1]), .Y(n3) );
  NAND3X2 U9 ( .A(n12), .B(n13), .C(n14), .Y(carry[20]) );
  XOR2XL U10 ( .A(carry[19]), .B(n11), .Y(SUM[19]) );
  NAND2X1 U11 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U12 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U13 ( .A(A[14]), .B(B[14]), .Y(n10) );
  XOR2X1 U14 ( .A(B[20]), .B(A[20]), .Y(n15) );
  NAND2X2 U15 ( .A(B[19]), .B(carry[19]), .Y(n12) );
  NAND2X2 U16 ( .A(A[19]), .B(carry[19]), .Y(n13) );
  NAND2X1 U17 ( .A(A[19]), .B(B[19]), .Y(n14) );
  NAND3X1 U18 ( .A(n5), .B(n6), .C(n7), .Y(carry[4]) );
  NAND2X1 U19 ( .A(B[3]), .B(carry[3]), .Y(n5) );
  NAND2X1 U20 ( .A(A[3]), .B(carry[3]), .Y(n6) );
  NAND2X1 U21 ( .A(A[3]), .B(B[3]), .Y(n7) );
  NAND2X1 U22 ( .A(A[20]), .B(B[20]), .Y(n18) );
  NAND2X1 U23 ( .A(B[20]), .B(carry[20]), .Y(n16) );
  NAND2X1 U24 ( .A(A[20]), .B(carry[20]), .Y(n17) );
  XOR3XL U25 ( .A(carry[3]), .B(A[3]), .C(B[3]), .Y(SUM[3]) );
  XOR3XL U26 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  XOR2XL U27 ( .A(B[19]), .B(A[19]), .Y(n11) );
  NAND3X1 U28 ( .A(n16), .B(n17), .C(n18), .Y(carry[21]) );
  XOR2XL U29 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_3 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_3_DW01_add_1_DW01_add_79 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_3_DW01_add_0_DW01_add_78 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_2_DW01_add_1_DW01_add_77 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFXL U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFX1 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX1 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX2 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFXL U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFHX2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n3), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  BUFX8 U1 ( .A(B[0]), .Y(n1) );
  BUFX6 U2 ( .A(A[0]), .Y(n2) );
  AND2X2 U3 ( .A(n1), .B(n2), .Y(n3) );
  INVX1 U4 ( .A(n1), .Y(n4) );
  NAND2X1 U5 ( .A(n1), .B(n5), .Y(n6) );
  NAND2X1 U6 ( .A(n4), .B(n2), .Y(n7) );
  NAND2X1 U7 ( .A(n6), .B(n7), .Y(SUM[0]) );
  INVXL U8 ( .A(n2), .Y(n5) );
endmodule


module Adder_2_DW01_add_0_DW01_add_76 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18;
  wire   [21:1] carry;

  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFHX4 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  NAND3X1 U1 ( .A(n2), .B(n3), .C(n4), .Y(carry[2]) );
  NAND2X1 U2 ( .A(A[1]), .B(n1), .Y(n4) );
  NAND2X1 U3 ( .A(n1), .B(B[1]), .Y(n2) );
  XOR2X1 U4 ( .A(carry[20]), .B(n15), .Y(SUM[20]) );
  AND2X2 U5 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR3XL U6 ( .A(B[1]), .B(A[1]), .C(n1), .Y(SUM[1]) );
  NAND2X2 U7 ( .A(A[1]), .B(B[1]), .Y(n3) );
  NAND3X2 U8 ( .A(n12), .B(n13), .C(n14), .Y(carry[20]) );
  XOR2XL U9 ( .A(carry[19]), .B(n11), .Y(SUM[19]) );
  NAND3X1 U10 ( .A(n8), .B(n9), .C(n10), .Y(carry[15]) );
  NAND2X1 U11 ( .A(B[14]), .B(carry[14]), .Y(n8) );
  NAND2X1 U12 ( .A(A[14]), .B(carry[14]), .Y(n9) );
  NAND2X1 U13 ( .A(A[14]), .B(B[14]), .Y(n10) );
  XOR2X1 U14 ( .A(B[20]), .B(A[20]), .Y(n15) );
  NAND2X2 U15 ( .A(B[19]), .B(carry[19]), .Y(n12) );
  NAND2X2 U16 ( .A(A[19]), .B(carry[19]), .Y(n13) );
  NAND2X1 U17 ( .A(A[19]), .B(B[19]), .Y(n14) );
  NAND3X1 U18 ( .A(n5), .B(n6), .C(n7), .Y(carry[4]) );
  NAND2X1 U19 ( .A(B[3]), .B(carry[3]), .Y(n5) );
  NAND2X1 U20 ( .A(A[3]), .B(carry[3]), .Y(n6) );
  NAND2X1 U21 ( .A(A[3]), .B(B[3]), .Y(n7) );
  NAND2X1 U22 ( .A(A[20]), .B(B[20]), .Y(n18) );
  NAND2X1 U23 ( .A(B[20]), .B(carry[20]), .Y(n16) );
  NAND2X1 U24 ( .A(A[20]), .B(carry[20]), .Y(n17) );
  XOR3XL U25 ( .A(carry[3]), .B(A[3]), .C(B[3]), .Y(SUM[3]) );
  XOR3XL U26 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  XOR2XL U27 ( .A(B[19]), .B(A[19]), .Y(n11) );
  NAND3X1 U28 ( .A(n16), .B(n17), .C(n18), .Y(carry[21]) );
  XOR2XL U29 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_2 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_2_DW01_add_1_DW01_add_77 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf1_sum[19], Rf1_sum[19], 
        Rf1_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_2_DW01_add_0_DW01_add_76 add_0_root_add_0_root_add_8_2 ( .A({
        Rf2_sum[19], Rf2_sum[19], Rf2_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQX1 \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQX1 \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQXL \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQXL \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
endmodule


module Adder_1_DW01_add_1_DW01_add_75 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  CMPR32X2 U1_14 ( .A(A[14]), .B(B[14]), .C(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFX2 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFXL U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFXL U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX4 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  CMPR32X2 U1_19 ( .A(A[19]), .B(B[19]), .C(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFHX4 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR2X1 U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  CLKAND2X8 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  NAND3X2 U3 ( .A(n3), .B(n4), .C(n5), .Y(carry[16]) );
  XOR2X1 U4 ( .A(carry[18]), .B(n6), .Y(SUM[18]) );
  XOR2XL U5 ( .A(carry[15]), .B(n2), .Y(SUM[15]) );
  NAND2X1 U6 ( .A(B[15]), .B(carry[15]), .Y(n3) );
  NAND2X1 U7 ( .A(A[15]), .B(carry[15]), .Y(n4) );
  NAND2X1 U8 ( .A(A[15]), .B(B[15]), .Y(n5) );
  XOR2XL U9 ( .A(B[15]), .B(A[15]), .Y(n2) );
  XOR2X1 U10 ( .A(B[18]), .B(A[18]), .Y(n6) );
  NAND2XL U11 ( .A(B[18]), .B(carry[18]), .Y(n7) );
  NAND2XL U12 ( .A(A[18]), .B(carry[18]), .Y(n8) );
  NAND2XL U13 ( .A(A[18]), .B(B[18]), .Y(n9) );
  NAND3X1 U14 ( .A(n7), .B(n8), .C(n9), .Y(carry[19]) );
endmodule


module Adder_1_DW01_add_0_DW01_add_74 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17;
  wire   [21:1] carry;

  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n17), .CO(carry[2]), .S(SUM[1]) );
  ADDFX2 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFXL U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFX2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFX2 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX2 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  NAND2X1 U1 ( .A(B[20]), .B(carry[20]), .Y(n5) );
  NAND3X1 U2 ( .A(n8), .B(n9), .C(n10), .Y(carry[13]) );
  NAND2XL U3 ( .A(B[12]), .B(carry[12]), .Y(n8) );
  NAND2X1 U4 ( .A(A[5]), .B(carry[5]), .Y(n2) );
  NAND2X1 U5 ( .A(A[12]), .B(carry[12]), .Y(n9) );
  NAND3X1 U6 ( .A(n5), .B(n6), .C(n7), .Y(carry[21]) );
  NAND2X1 U7 ( .A(A[20]), .B(B[20]), .Y(n7) );
  NAND3X1 U8 ( .A(n1), .B(n2), .C(n3), .Y(carry[6]) );
  NAND2X1 U9 ( .A(A[5]), .B(B[5]), .Y(n3) );
  NAND2X2 U10 ( .A(B[5]), .B(carry[5]), .Y(n1) );
  NAND3X1 U11 ( .A(n11), .B(n12), .C(n13), .Y(carry[15]) );
  XOR2X1 U12 ( .A(carry[20]), .B(n4), .Y(SUM[20]) );
  XOR3XL U13 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  XOR2XL U14 ( .A(B[20]), .B(A[20]), .Y(n4) );
  NAND2X4 U15 ( .A(A[20]), .B(carry[20]), .Y(n6) );
  XOR3XL U16 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  NAND2X4 U17 ( .A(A[12]), .B(B[12]), .Y(n10) );
  NAND2X4 U18 ( .A(A[14]), .B(carry[14]), .Y(n12) );
  NAND2X2 U19 ( .A(B[14]), .B(carry[14]), .Y(n11) );
  NAND2X1 U20 ( .A(A[14]), .B(B[14]), .Y(n13) );
  NAND3X1 U21 ( .A(n14), .B(n15), .C(n16), .Y(carry[19]) );
  NAND2X1 U22 ( .A(B[18]), .B(carry[18]), .Y(n14) );
  NAND2X1 U23 ( .A(A[18]), .B(carry[18]), .Y(n15) );
  NAND2X1 U24 ( .A(A[18]), .B(B[18]), .Y(n16) );
  XOR3XL U25 ( .A(carry[14]), .B(A[14]), .C(B[14]), .Y(SUM[14]) );
  XOR3XL U26 ( .A(carry[18]), .B(A[18]), .C(B[18]), .Y(SUM[18]) );
  AND2XL U27 ( .A(B[0]), .B(A[0]), .Y(n17) );
  XOR2XL U28 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_1 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_1_DW01_add_1_DW01_add_75 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf2_sum[19], Rf2_sum[19], 
        Rf2_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_1_DW01_add_0_DW01_add_74 add_0_root_add_0_root_add_8_2 ( .A({
        Rf1_sum[19], Rf1_sum[19], Rf1_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQX1 \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQXL \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQXL \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
endmodule


module Adder_0_DW01_add_1_DW01_add_73 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFXL U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFX2 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  ADDFXL U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5])
         );
  ADDFXL U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFX2 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFHX2 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFHX4 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  ADDFHX4 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX2 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  XOR2XL U1 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
  CLKAND2X8 U2 ( .A(B[0]), .B(A[0]), .Y(n1) );
  XOR2X1 U3 ( .A(carry[18]), .B(n6), .Y(SUM[18]) );
  XOR2XL U4 ( .A(carry[15]), .B(n2), .Y(SUM[15]) );
  NAND2X1 U5 ( .A(B[15]), .B(carry[15]), .Y(n3) );
  NAND2X1 U6 ( .A(A[15]), .B(carry[15]), .Y(n4) );
  NAND2X1 U7 ( .A(A[15]), .B(B[15]), .Y(n5) );
  NAND3X1 U8 ( .A(n3), .B(n4), .C(n5), .Y(carry[16]) );
  XOR2XL U9 ( .A(B[15]), .B(A[15]), .Y(n2) );
  XOR2X1 U10 ( .A(B[18]), .B(A[18]), .Y(n6) );
  NAND2XL U11 ( .A(B[18]), .B(carry[18]), .Y(n7) );
  NAND2XL U12 ( .A(A[18]), .B(carry[18]), .Y(n8) );
  NAND2XL U13 ( .A(A[18]), .B(B[18]), .Y(n9) );
  NAND3X1 U14 ( .A(n7), .B(n8), .C(n9), .Y(carry[19]) );
endmodule


module Adder_0_DW01_add_0_DW01_add_72 ( A, B, CI, SUM, CO );
  input [21:0] A;
  input [21:0] B;
  output [21:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10;
  wire   [21:1] carry;

  XOR3X1 U1_21 ( .A(A[21]), .B(B[21]), .C(carry[21]), .Y(SUM[21]) );
  ADDFXL U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  ADDFXL U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3])
         );
  ADDFXL U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2])
         );
  ADDFXL U1_1 ( .A(A[1]), .B(B[1]), .CI(n10), .CO(carry[2]), .S(SUM[1]) );
  ADDFXL U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  ADDFX2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  ADDFHX1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  ADDFHX4 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  ADDFHX4 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6])
         );
  ADDFX2 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  ADDFXL U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  ADDFX2 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4])
         );
  ADDFHX4 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  ADDFHX2 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  ADDFHX4 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  ADDFX2 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7])
         );
  ADDFX2 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8])
         );
  NAND2X6 U1 ( .A(A[12]), .B(carry[12]), .Y(n5) );
  NAND2X1 U2 ( .A(A[5]), .B(carry[5]), .Y(n2) );
  XOR3XL U3 ( .A(carry[5]), .B(A[5]), .C(B[5]), .Y(SUM[5]) );
  NAND2X4 U4 ( .A(B[5]), .B(carry[5]), .Y(n1) );
  NAND2X4 U5 ( .A(A[5]), .B(B[5]), .Y(n3) );
  NAND3X8 U6 ( .A(n1), .B(n2), .C(n3), .Y(carry[6]) );
  XOR3XL U7 ( .A(carry[12]), .B(A[12]), .C(B[12]), .Y(SUM[12]) );
  NAND2X4 U8 ( .A(B[12]), .B(carry[12]), .Y(n4) );
  NAND2X4 U9 ( .A(A[12]), .B(B[12]), .Y(n6) );
  NAND3X8 U10 ( .A(n4), .B(n5), .C(n6), .Y(carry[13]) );
  NAND2X1 U11 ( .A(B[18]), .B(carry[18]), .Y(n7) );
  NAND3X1 U12 ( .A(n7), .B(n8), .C(n9), .Y(carry[19]) );
  NAND2X1 U13 ( .A(A[18]), .B(carry[18]), .Y(n8) );
  NAND2X1 U14 ( .A(A[18]), .B(B[18]), .Y(n9) );
  XOR3XL U15 ( .A(carry[18]), .B(A[18]), .C(B[18]), .Y(SUM[18]) );
  AND2XL U16 ( .A(B[0]), .B(A[0]), .Y(n10) );
  XOR2XL U17 ( .A(B[0]), .B(A[0]), .Y(SUM[0]) );
endmodule


module Adder_0 ( clk, rst, Rf1_sum, Rf2_sum, Rf3_sum, toPsumBuf );
  input [19:0] Rf1_sum;
  input [19:0] Rf2_sum;
  input [19:0] Rf3_sum;
  output [21:0] toPsumBuf;
  input clk, rst;
  wire   N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34, N35,
         N36, N37, N38, N39, N40, N41, N42, N43, N9, N8, N7, N6, N5, N4, N3,
         N21, N20, N2, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N1,
         N0;

  Adder_0_DW01_add_1_DW01_add_73 add_1_root_add_0_root_add_8_2 ( .A({
        Rf3_sum[19], Rf3_sum[19], Rf3_sum}), .B({Rf2_sum[19], Rf2_sum[19], 
        Rf2_sum}), .CI(1'b0), .SUM({N21, N20, N19, N18, N17, N16, N15, N14, 
        N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}) );
  Adder_0_DW01_add_0_DW01_add_72 add_0_root_add_0_root_add_8_2 ( .A({
        Rf1_sum[19], Rf1_sum[19], Rf1_sum}), .B({N21, N20, N19, N18, N17, N16, 
        N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1, N0}), 
        .CI(1'b0), .SUM({N43, N42, N41, N40, N39, N38, N37, N36, N35, N34, N33, 
        N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22}) );
  DFFQX1 \toPsumBuf_reg[20]  ( .D(N42), .CK(clk), .Q(toPsumBuf[20]) );
  DFFQX1 \toPsumBuf_reg[19]  ( .D(N41), .CK(clk), .Q(toPsumBuf[19]) );
  DFFQX1 \toPsumBuf_reg[17]  ( .D(N39), .CK(clk), .Q(toPsumBuf[17]) );
  DFFQX1 \toPsumBuf_reg[15]  ( .D(N37), .CK(clk), .Q(toPsumBuf[15]) );
  DFFQX1 \toPsumBuf_reg[13]  ( .D(N35), .CK(clk), .Q(toPsumBuf[13]) );
  DFFQX1 \toPsumBuf_reg[12]  ( .D(N34), .CK(clk), .Q(toPsumBuf[12]) );
  DFFQX1 \toPsumBuf_reg[11]  ( .D(N33), .CK(clk), .Q(toPsumBuf[11]) );
  DFFQX1 \toPsumBuf_reg[10]  ( .D(N32), .CK(clk), .Q(toPsumBuf[10]) );
  DFFQX1 \toPsumBuf_reg[9]  ( .D(N31), .CK(clk), .Q(toPsumBuf[9]) );
  DFFQX1 \toPsumBuf_reg[8]  ( .D(N30), .CK(clk), .Q(toPsumBuf[8]) );
  DFFQX1 \toPsumBuf_reg[7]  ( .D(N29), .CK(clk), .Q(toPsumBuf[7]) );
  DFFQX1 \toPsumBuf_reg[6]  ( .D(N28), .CK(clk), .Q(toPsumBuf[6]) );
  DFFQX1 \toPsumBuf_reg[5]  ( .D(N27), .CK(clk), .Q(toPsumBuf[5]) );
  DFFQX1 \toPsumBuf_reg[4]  ( .D(N26), .CK(clk), .Q(toPsumBuf[4]) );
  DFFQX1 \toPsumBuf_reg[3]  ( .D(N25), .CK(clk), .Q(toPsumBuf[3]) );
  DFFQX1 \toPsumBuf_reg[2]  ( .D(N24), .CK(clk), .Q(toPsumBuf[2]) );
  DFFQX1 \toPsumBuf_reg[1]  ( .D(N23), .CK(clk), .Q(toPsumBuf[1]) );
  DFFQX1 \toPsumBuf_reg[0]  ( .D(N22), .CK(clk), .Q(toPsumBuf[0]) );
  DFFQXL \toPsumBuf_reg[21]  ( .D(N43), .CK(clk), .Q(toPsumBuf[21]) );
  DFFQXL \toPsumBuf_reg[18]  ( .D(N40), .CK(clk), .Q(toPsumBuf[18]) );
  DFFQXL \toPsumBuf_reg[16]  ( .D(N38), .CK(clk), .Q(toPsumBuf[16]) );
  DFFQXL \toPsumBuf_reg[14]  ( .D(N36), .CK(clk), .Q(toPsumBuf[14]) );
endmodule


module PE_array ( clk, rst, ifmapIn1, ifmapIn2, ifmapIn3, filter, bias );
  input [63:0] ifmapIn1;
  input [63:0] ifmapIn2;
  input [63:0] ifmapIn3;
  input [71:0] filter;
  input [15:0] bias;
  input clk, rst;
  wire   \RF1out[8][19] , \RF1out[8][18] , \RF1out[8][17] , \RF1out[8][16] ,
         \RF1out[8][15] , \RF1out[8][14] , \RF1out[8][13] , \RF1out[8][12] ,
         \RF1out[8][11] , \RF1out[8][10] , \RF1out[8][9] , \RF1out[8][8] ,
         \RF1out[8][7] , \RF1out[8][6] , \RF1out[8][5] , \RF1out[8][4] ,
         \RF1out[8][3] , \RF1out[8][2] , \RF1out[8][1] , \RF1out[8][0] ,
         \RF1out[7][19] , \RF1out[7][18] , \RF1out[7][17] , \RF1out[7][16] ,
         \RF1out[7][15] , \RF1out[7][14] , \RF1out[7][13] , \RF1out[7][12] ,
         \RF1out[7][11] , \RF1out[7][10] , \RF1out[7][9] , \RF1out[7][8] ,
         \RF1out[7][7] , \RF1out[7][6] , \RF1out[7][5] , \RF1out[7][4] ,
         \RF1out[7][3] , \RF1out[7][2] , \RF1out[7][1] , \RF1out[7][0] ,
         \RF1out[6][19] , \RF1out[6][18] , \RF1out[6][17] , \RF1out[6][16] ,
         \RF1out[6][15] , \RF1out[6][14] , \RF1out[6][13] , \RF1out[6][12] ,
         \RF1out[6][11] , \RF1out[6][10] , \RF1out[6][9] , \RF1out[6][8] ,
         \RF1out[6][7] , \RF1out[6][6] , \RF1out[6][5] , \RF1out[6][4] ,
         \RF1out[6][3] , \RF1out[6][2] , \RF1out[6][1] , \RF1out[6][0] ,
         \RF1out[5][19] , \RF1out[5][18] , \RF1out[5][17] , \RF1out[5][16] ,
         \RF1out[5][15] , \RF1out[5][14] , \RF1out[5][13] , \RF1out[5][12] ,
         \RF1out[5][11] , \RF1out[5][10] , \RF1out[5][9] , \RF1out[5][8] ,
         \RF1out[5][7] , \RF1out[5][6] , \RF1out[5][5] , \RF1out[5][4] ,
         \RF1out[5][3] , \RF1out[5][2] , \RF1out[5][1] , \RF1out[5][0] ,
         \RF1out[4][19] , \RF1out[4][18] , \RF1out[4][17] , \RF1out[4][16] ,
         \RF1out[4][15] , \RF1out[4][14] , \RF1out[4][13] , \RF1out[4][12] ,
         \RF1out[4][11] , \RF1out[4][10] , \RF1out[4][9] , \RF1out[4][8] ,
         \RF1out[4][7] , \RF1out[4][6] , \RF1out[4][5] , \RF1out[4][4] ,
         \RF1out[4][3] , \RF1out[4][2] , \RF1out[4][1] , \RF1out[4][0] ,
         \RF1out[3][19] , \RF1out[3][18] , \RF1out[3][17] , \RF1out[3][16] ,
         \RF1out[3][15] , \RF1out[3][14] , \RF1out[3][13] , \RF1out[3][12] ,
         \RF1out[3][11] , \RF1out[3][10] , \RF1out[3][9] , \RF1out[3][8] ,
         \RF1out[3][7] , \RF1out[3][6] , \RF1out[3][5] , \RF1out[3][4] ,
         \RF1out[3][3] , \RF1out[3][2] , \RF1out[3][1] , \RF1out[3][0] ,
         \RF1out[2][19] , \RF1out[2][18] , \RF1out[2][17] , \RF1out[2][16] ,
         \RF1out[2][15] , \RF1out[2][14] , \RF1out[2][13] , \RF1out[2][12] ,
         \RF1out[2][11] , \RF1out[2][10] , \RF1out[2][9] , \RF1out[2][8] ,
         \RF1out[2][7] , \RF1out[2][6] , \RF1out[2][5] , \RF1out[2][4] ,
         \RF1out[2][3] , \RF1out[2][2] , \RF1out[2][1] , \RF1out[2][0] ,
         \RF1out[1][19] , \RF1out[1][18] , \RF1out[1][17] , \RF1out[1][16] ,
         \RF1out[1][15] , \RF1out[1][14] , \RF1out[1][13] , \RF1out[1][12] ,
         \RF1out[1][11] , \RF1out[1][10] , \RF1out[1][9] , \RF1out[1][8] ,
         \RF1out[1][7] , \RF1out[1][6] , \RF1out[1][5] , \RF1out[1][4] ,
         \RF1out[1][3] , \RF1out[1][2] , \RF1out[1][1] , \RF1out[1][0] ,
         \RF2out[8][19] , \RF2out[8][18] , \RF2out[8][17] , \RF2out[8][16] ,
         \RF2out[8][15] , \RF2out[8][14] , \RF2out[8][13] , \RF2out[8][12] ,
         \RF2out[8][11] , \RF2out[8][10] , \RF2out[8][9] , \RF2out[8][8] ,
         \RF2out[8][7] , \RF2out[8][6] , \RF2out[8][5] , \RF2out[8][4] ,
         \RF2out[8][3] , \RF2out[8][2] , \RF2out[8][1] , \RF2out[8][0] ,
         \RF2out[7][19] , \RF2out[7][18] , \RF2out[7][17] , \RF2out[7][16] ,
         \RF2out[7][15] , \RF2out[7][14] , \RF2out[7][13] , \RF2out[7][12] ,
         \RF2out[7][11] , \RF2out[7][10] , \RF2out[7][9] , \RF2out[7][8] ,
         \RF2out[7][7] , \RF2out[7][6] , \RF2out[7][5] , \RF2out[7][4] ,
         \RF2out[7][3] , \RF2out[7][2] , \RF2out[7][1] , \RF2out[7][0] ,
         \RF2out[6][19] , \RF2out[6][18] , \RF2out[6][17] , \RF2out[6][16] ,
         \RF2out[6][15] , \RF2out[6][14] , \RF2out[6][13] , \RF2out[6][12] ,
         \RF2out[6][11] , \RF2out[6][10] , \RF2out[6][9] , \RF2out[6][8] ,
         \RF2out[6][7] , \RF2out[6][6] , \RF2out[6][5] , \RF2out[6][4] ,
         \RF2out[6][3] , \RF2out[6][2] , \RF2out[6][1] , \RF2out[6][0] ,
         \RF2out[5][19] , \RF2out[5][18] , \RF2out[5][17] , \RF2out[5][16] ,
         \RF2out[5][15] , \RF2out[5][14] , \RF2out[5][13] , \RF2out[5][12] ,
         \RF2out[5][11] , \RF2out[5][10] , \RF2out[5][9] , \RF2out[5][8] ,
         \RF2out[5][7] , \RF2out[5][6] , \RF2out[5][5] , \RF2out[5][4] ,
         \RF2out[5][3] , \RF2out[5][2] , \RF2out[5][1] , \RF2out[5][0] ,
         \RF2out[4][19] , \RF2out[4][18] , \RF2out[4][17] , \RF2out[4][16] ,
         \RF2out[4][15] , \RF2out[4][14] , \RF2out[4][13] , \RF2out[4][12] ,
         \RF2out[4][11] , \RF2out[4][10] , \RF2out[4][9] , \RF2out[4][8] ,
         \RF2out[4][7] , \RF2out[4][6] , \RF2out[4][5] , \RF2out[4][4] ,
         \RF2out[4][3] , \RF2out[4][2] , \RF2out[4][1] , \RF2out[4][0] ,
         \RF2out[3][19] , \RF2out[3][18] , \RF2out[3][17] , \RF2out[3][16] ,
         \RF2out[3][15] , \RF2out[3][14] , \RF2out[3][13] , \RF2out[3][12] ,
         \RF2out[3][11] , \RF2out[3][10] , \RF2out[3][9] , \RF2out[3][8] ,
         \RF2out[3][7] , \RF2out[3][6] , \RF2out[3][5] , \RF2out[3][4] ,
         \RF2out[3][3] , \RF2out[3][2] , \RF2out[3][1] , \RF2out[3][0] ,
         \RF2out[2][19] , \RF2out[2][18] , \RF2out[2][17] , \RF2out[2][16] ,
         \RF2out[2][15] , \RF2out[2][14] , \RF2out[2][13] , \RF2out[2][12] ,
         \RF2out[2][11] , \RF2out[2][10] , \RF2out[2][9] , \RF2out[2][8] ,
         \RF2out[2][7] , \RF2out[2][6] , \RF2out[2][5] , \RF2out[2][4] ,
         \RF2out[2][3] , \RF2out[2][2] , \RF2out[2][1] , \RF2out[2][0] ,
         \RF2out[1][19] , \RF2out[1][18] , \RF2out[1][17] , \RF2out[1][16] ,
         \RF2out[1][15] , \RF2out[1][14] , \RF2out[1][13] , \RF2out[1][12] ,
         \RF2out[1][11] , \RF2out[1][10] , \RF2out[1][9] , \RF2out[1][8] ,
         \RF2out[1][7] , \RF2out[1][6] , \RF2out[1][5] , \RF2out[1][4] ,
         \RF2out[1][3] , \RF2out[1][2] , \RF2out[1][1] , \RF2out[1][0] ,
         \RF3out[10][19] , \RF3out[10][18] , \RF3out[10][17] ,
         \RF3out[10][16] , \RF3out[10][15] , \RF3out[10][14] ,
         \RF3out[10][13] , \RF3out[10][12] , \RF3out[10][11] ,
         \RF3out[10][10] , \RF3out[10][9] , \RF3out[10][8] , \RF3out[10][7] ,
         \RF3out[10][6] , \RF3out[10][5] , \RF3out[10][4] , \RF3out[10][3] ,
         \RF3out[10][2] , \RF3out[10][1] , \RF3out[10][0] , \RF3out[9][19] ,
         \RF3out[9][18] , \RF3out[9][17] , \RF3out[9][16] , \RF3out[9][15] ,
         \RF3out[9][14] , \RF3out[9][13] , \RF3out[9][12] , \RF3out[9][11] ,
         \RF3out[9][10] , \RF3out[9][9] , \RF3out[9][8] , \RF3out[9][7] ,
         \RF3out[9][6] , \RF3out[9][5] , \RF3out[9][4] , \RF3out[9][3] ,
         \RF3out[9][2] , \RF3out[9][1] , \RF3out[9][0] , \RF3out[8][19] ,
         \RF3out[8][18] , \RF3out[8][17] , \RF3out[8][16] , \RF3out[8][15] ,
         \RF3out[8][14] , \RF3out[8][13] , \RF3out[8][12] , \RF3out[8][11] ,
         \RF3out[8][10] , \RF3out[8][9] , \RF3out[8][8] , \RF3out[8][7] ,
         \RF3out[8][6] , \RF3out[8][5] , \RF3out[8][4] , \RF3out[8][3] ,
         \RF3out[8][2] , \RF3out[8][1] , \RF3out[8][0] , \RF3out[7][19] ,
         \RF3out[7][18] , \RF3out[7][17] , \RF3out[7][16] , \RF3out[7][15] ,
         \RF3out[7][14] , \RF3out[7][13] , \RF3out[7][12] , \RF3out[7][11] ,
         \RF3out[7][10] , \RF3out[7][9] , \RF3out[7][8] , \RF3out[7][7] ,
         \RF3out[7][6] , \RF3out[7][5] , \RF3out[7][4] , \RF3out[7][3] ,
         \RF3out[7][2] , \RF3out[7][1] , \RF3out[7][0] , \RF3out[6][19] ,
         \RF3out[6][18] , \RF3out[6][17] , \RF3out[6][16] , \RF3out[6][15] ,
         \RF3out[6][14] , \RF3out[6][13] , \RF3out[6][12] , \RF3out[6][11] ,
         \RF3out[6][10] , \RF3out[6][9] , \RF3out[6][8] , \RF3out[6][7] ,
         \RF3out[6][6] , \RF3out[6][5] , \RF3out[6][4] , \RF3out[6][3] ,
         \RF3out[6][2] , \RF3out[6][1] , \RF3out[6][0] , \RF3out[5][19] ,
         \RF3out[5][18] , \RF3out[5][17] , \RF3out[5][16] , \RF3out[5][15] ,
         \RF3out[5][14] , \RF3out[5][13] , \RF3out[5][12] , \RF3out[5][11] ,
         \RF3out[5][10] , \RF3out[5][9] , \RF3out[5][8] , \RF3out[5][7] ,
         \RF3out[5][6] , \RF3out[5][5] , \RF3out[5][4] , \RF3out[5][3] ,
         \RF3out[5][2] , \RF3out[5][1] , \RF3out[5][0] , \RF3out[4][19] ,
         \RF3out[4][18] , \RF3out[4][17] , \RF3out[4][16] , \RF3out[4][15] ,
         \RF3out[4][14] , \RF3out[4][13] , \RF3out[4][12] , \RF3out[4][11] ,
         \RF3out[4][10] , \RF3out[4][9] , \RF3out[4][8] , \RF3out[4][7] ,
         \RF3out[4][6] , \RF3out[4][5] , \RF3out[4][4] , \RF3out[4][3] ,
         \RF3out[4][2] , \RF3out[4][1] , \RF3out[4][0] , \RF3out[3][19] ,
         \RF3out[3][18] , \RF3out[3][17] , \RF3out[3][16] , \RF3out[3][15] ,
         \RF3out[3][14] , \RF3out[3][13] , \RF3out[3][12] , \RF3out[3][11] ,
         \RF3out[3][10] , \RF3out[3][9] , \RF3out[3][8] , \RF3out[3][7] ,
         \RF3out[3][6] , \RF3out[3][5] , \RF3out[3][4] , \RF3out[3][3] ,
         \RF3out[3][2] , \RF3out[3][1] , \RF3out[3][0] , \RF3out[2][19] ,
         \RF3out[2][18] , \RF3out[2][17] , \RF3out[2][16] , \RF3out[2][15] ,
         \RF3out[2][14] , \RF3out[2][13] , \RF3out[2][12] , \RF3out[2][11] ,
         \RF3out[2][10] , \RF3out[2][9] , \RF3out[2][8] , \RF3out[2][7] ,
         \RF3out[2][6] , \RF3out[2][5] , \RF3out[2][4] , \RF3out[2][3] ,
         \RF3out[2][2] , \RF3out[2][1] , \RF3out[2][0] , \RF3out[1][19] ,
         \RF3out[1][18] , \RF3out[1][17] , \RF3out[1][16] , \RF3out[1][15] ,
         \RF3out[1][14] , \RF3out[1][13] , \RF3out[1][12] , \RF3out[1][11] ,
         \RF3out[1][10] , \RF3out[1][9] , \RF3out[1][8] , \RF3out[1][7] ,
         \RF3out[1][6] , \RF3out[1][5] , \RF3out[1][4] , \RF3out[1][3] ,
         \RF3out[1][2] , \RF3out[1][1] , \RF3out[1][0] , n1, n2, n3, n4, n5,
         n6;
  wire   [19:0] pout17;
  wire   [19:0] pout9;
  wire   [19:0] pout1;
  wire   [19:0] pout2;
  wire   [19:0] pout3;
  wire   [19:0] pout4;
  wire   [19:0] pout5;
  wire   [19:0] pout6;
  wire   [19:0] pout7;
  wire   [19:0] pout8;
  wire   [19:0] pout10;
  wire   [19:0] pout11;
  wire   [19:0] pout12;
  wire   [19:0] pout13;
  wire   [19:0] pout14;
  wire   [19:0] pout15;
  wire   [19:0] pout16;
  wire   [19:0] pout18;
  wire   [19:0] pout19;
  wire   [19:0] pout20;
  wire   [19:0] pout21;
  wire   [19:0] pout22;
  wire   [19:0] pout23;
  wire   [19:0] pout24;
  wire   [19:0] pout41;
  wire   [19:0] pout33;
  wire   [19:0] pout25;
  wire   [19:0] pout26;
  wire   [19:0] pout27;
  wire   [19:0] pout28;
  wire   [19:0] pout29;
  wire   [19:0] pout30;
  wire   [19:0] pout31;
  wire   [19:0] pout32;
  wire   [19:0] pout34;
  wire   [19:0] pout35;
  wire   [19:0] pout36;
  wire   [19:0] pout37;
  wire   [19:0] pout38;
  wire   [19:0] pout39;
  wire   [19:0] pout40;
  wire   [19:0] pout42;
  wire   [19:0] pout43;
  wire   [19:0] pout44;
  wire   [19:0] pout45;
  wire   [19:0] pout46;
  wire   [19:0] pout47;
  wire   [19:0] pout48;
  wire   [19:0] pout65;
  wire   [19:0] pout57;
  wire   [19:0] pout49;
  wire   [19:0] pout50;
  wire   [19:0] pout51;
  wire   [19:0] pout52;
  wire   [19:0] pout53;
  wire   [19:0] pout54;
  wire   [19:0] pout55;
  wire   [19:0] pout56;
  wire   [19:0] pout58;
  wire   [19:0] pout59;
  wire   [19:0] pout60;
  wire   [19:0] pout61;
  wire   [19:0] pout62;
  wire   [19:0] pout63;
  wire   [19:0] pout64;
  wire   [19:0] pout66;
  wire   [19:0] pout67;
  wire   [19:0] pout68;
  wire   [19:0] pout69;
  wire   [19:0] pout70;
  wire   [19:0] pout71;
  wire   [19:0] pout72;

  RfTemp_2 Rf1 ( .clk(clk), .rst(n3), .In1(pout17), .In2(pout9), .In3(pout1), 
        .In4(pout2), .In5(pout3), .In6(pout4), .In7(pout5), .In8(pout6), .In9(
        pout7), .In10(pout8), .Out1({\RF1out[1][19] , \RF1out[1][18] , 
        \RF1out[1][17] , \RF1out[1][16] , \RF1out[1][15] , \RF1out[1][14] , 
        \RF1out[1][13] , \RF1out[1][12] , \RF1out[1][11] , \RF1out[1][10] , 
        \RF1out[1][9] , \RF1out[1][8] , \RF1out[1][7] , \RF1out[1][6] , 
        \RF1out[1][5] , \RF1out[1][4] , \RF1out[1][3] , \RF1out[1][2] , 
        \RF1out[1][1] , \RF1out[1][0] }), .Out2({\RF1out[2][19] , 
        \RF1out[2][18] , \RF1out[2][17] , \RF1out[2][16] , \RF1out[2][15] , 
        \RF1out[2][14] , \RF1out[2][13] , \RF1out[2][12] , \RF1out[2][11] , 
        \RF1out[2][10] , \RF1out[2][9] , \RF1out[2][8] , \RF1out[2][7] , 
        \RF1out[2][6] , \RF1out[2][5] , \RF1out[2][4] , \RF1out[2][3] , 
        \RF1out[2][2] , \RF1out[2][1] , \RF1out[2][0] }), .Out3({
        \RF1out[3][19] , \RF1out[3][18] , \RF1out[3][17] , \RF1out[3][16] , 
        \RF1out[3][15] , \RF1out[3][14] , \RF1out[3][13] , \RF1out[3][12] , 
        \RF1out[3][11] , \RF1out[3][10] , \RF1out[3][9] , \RF1out[3][8] , 
        \RF1out[3][7] , \RF1out[3][6] , \RF1out[3][5] , \RF1out[3][4] , 
        \RF1out[3][3] , \RF1out[3][2] , \RF1out[3][1] , \RF1out[3][0] }), 
        .Out4({\RF1out[4][19] , \RF1out[4][18] , \RF1out[4][17] , 
        \RF1out[4][16] , \RF1out[4][15] , \RF1out[4][14] , \RF1out[4][13] , 
        \RF1out[4][12] , \RF1out[4][11] , \RF1out[4][10] , \RF1out[4][9] , 
        \RF1out[4][8] , \RF1out[4][7] , \RF1out[4][6] , \RF1out[4][5] , 
        \RF1out[4][4] , \RF1out[4][3] , \RF1out[4][2] , \RF1out[4][1] , 
        \RF1out[4][0] }), .Out5({\RF1out[5][19] , \RF1out[5][18] , 
        \RF1out[5][17] , \RF1out[5][16] , \RF1out[5][15] , \RF1out[5][14] , 
        \RF1out[5][13] , \RF1out[5][12] , \RF1out[5][11] , \RF1out[5][10] , 
        \RF1out[5][9] , \RF1out[5][8] , \RF1out[5][7] , \RF1out[5][6] , 
        \RF1out[5][5] , \RF1out[5][4] , \RF1out[5][3] , \RF1out[5][2] , 
        \RF1out[5][1] , \RF1out[5][0] }), .Out6({\RF1out[6][19] , 
        \RF1out[6][18] , \RF1out[6][17] , \RF1out[6][16] , \RF1out[6][15] , 
        \RF1out[6][14] , \RF1out[6][13] , \RF1out[6][12] , \RF1out[6][11] , 
        \RF1out[6][10] , \RF1out[6][9] , \RF1out[6][8] , \RF1out[6][7] , 
        \RF1out[6][6] , \RF1out[6][5] , \RF1out[6][4] , \RF1out[6][3] , 
        \RF1out[6][2] , \RF1out[6][1] , \RF1out[6][0] }), .Out7({
        \RF1out[7][19] , \RF1out[7][18] , \RF1out[7][17] , \RF1out[7][16] , 
        \RF1out[7][15] , \RF1out[7][14] , \RF1out[7][13] , \RF1out[7][12] , 
        \RF1out[7][11] , \RF1out[7][10] , \RF1out[7][9] , \RF1out[7][8] , 
        \RF1out[7][7] , \RF1out[7][6] , \RF1out[7][5] , \RF1out[7][4] , 
        \RF1out[7][3] , \RF1out[7][2] , \RF1out[7][1] , \RF1out[7][0] }), 
        .Out8({\RF1out[8][19] , \RF1out[8][18] , \RF1out[8][17] , 
        \RF1out[8][16] , \RF1out[8][15] , \RF1out[8][14] , \RF1out[8][13] , 
        \RF1out[8][12] , \RF1out[8][11] , \RF1out[8][10] , \RF1out[8][9] , 
        \RF1out[8][8] , \RF1out[8][7] , \RF1out[8][6] , \RF1out[8][5] , 
        \RF1out[8][4] , \RF1out[8][3] , \RF1out[8][2] , \RF1out[8][1] , 
        \RF1out[8][0] }) );
  PE_71 PE1 ( .clk(clk), .rst(n6), .ifmap(ifmapIn1[7:0]), .filter(filter[7:0]), 
        .psumIn(pout10), .psumOut(pout1) );
  PE_70 PE2 ( .clk(clk), .rst(n3), .ifmap(ifmapIn1[15:8]), .filter(filter[7:0]), .psumIn(pout11), .psumOut(pout2) );
  PE_69 PE3 ( .clk(clk), .rst(n3), .ifmap(ifmapIn1[23:16]), .filter(
        filter[7:0]), .psumIn(pout12), .psumOut(pout3) );
  PE_68 PE4 ( .clk(clk), .rst(n3), .ifmap(ifmapIn1[31:24]), .filter(
        filter[7:0]), .psumIn(pout13), .psumOut(pout4) );
  PE_67 PE5 ( .clk(clk), .rst(n3), .ifmap(ifmapIn1[39:32]), .filter(
        filter[7:0]), .psumIn(pout14), .psumOut(pout5) );
  PE_66 PE6 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[47:40]), .filter(
        filter[7:0]), .psumIn(pout15), .psumOut(pout6) );
  PE_65 PE7 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[55:48]), .filter(
        filter[7:0]), .psumIn(pout16), .psumOut(pout7) );
  PE_64 PE8 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[63:56]), .filter(
        filter[7:0]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}), .psumOut(pout8) );
  PE_63 PE9 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[7:0]), .filter(filter[15:8]), .psumIn(pout18), .psumOut(pout9) );
  PE_62 PE10 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[15:8]), .filter(
        filter[15:8]), .psumIn(pout19), .psumOut(pout10) );
  PE_61 PE11 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[23:16]), .filter(
        filter[15:8]), .psumIn(pout20), .psumOut(pout11) );
  PE_60 PE12 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[31:24]), .filter(
        filter[15:8]), .psumIn(pout21), .psumOut(pout12) );
  PE_59 PE13 ( .clk(clk), .rst(n4), .ifmap(ifmapIn1[39:32]), .filter(
        filter[15:8]), .psumIn(pout22), .psumOut(pout13) );
  PE_58 PE14 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[47:40]), .filter(
        filter[15:8]), .psumIn(pout23), .psumOut(pout14) );
  PE_57 PE15 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[55:48]), .filter(
        filter[15:8]), .psumIn(pout24), .psumOut(pout15) );
  PE_56 PE16 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[63:56]), .filter(
        filter[15:8]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0}), .psumOut(pout16) );
  PE_55 PE17 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[7:0]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout17) );
  PE_54 PE18 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[15:8]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout18) );
  PE_53 PE19 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[23:16]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout19) );
  PE_52 PE20 ( .clk(clk), .rst(n5), .ifmap(ifmapIn1[31:24]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout20) );
  PE_51 PE21 ( .clk(clk), .rst(n6), .ifmap(ifmapIn1[39:32]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout21) );
  PE_50 PE22 ( .clk(clk), .rst(n6), .ifmap(ifmapIn1[47:40]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout22) );
  PE_49 PE23 ( .clk(clk), .rst(n6), .ifmap(ifmapIn1[55:48]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout23) );
  PE_48 PE24 ( .clk(clk), .rst(n6), .ifmap(ifmapIn1[63:56]), .filter(
        filter[23:16]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout24) );
  RfTemp_1 Rf2 ( .clk(clk), .rst(n3), .In1(pout41), .In2(pout33), .In3(pout25), 
        .In4(pout26), .In5(pout27), .In6(pout28), .In7(pout29), .In8(pout30), 
        .In9(pout31), .In10(pout32), .Out1({\RF2out[1][19] , \RF2out[1][18] , 
        \RF2out[1][17] , \RF2out[1][16] , \RF2out[1][15] , \RF2out[1][14] , 
        \RF2out[1][13] , \RF2out[1][12] , \RF2out[1][11] , \RF2out[1][10] , 
        \RF2out[1][9] , \RF2out[1][8] , \RF2out[1][7] , \RF2out[1][6] , 
        \RF2out[1][5] , \RF2out[1][4] , \RF2out[1][3] , \RF2out[1][2] , 
        \RF2out[1][1] , \RF2out[1][0] }), .Out2({\RF2out[2][19] , 
        \RF2out[2][18] , \RF2out[2][17] , \RF2out[2][16] , \RF2out[2][15] , 
        \RF2out[2][14] , \RF2out[2][13] , \RF2out[2][12] , \RF2out[2][11] , 
        \RF2out[2][10] , \RF2out[2][9] , \RF2out[2][8] , \RF2out[2][7] , 
        \RF2out[2][6] , \RF2out[2][5] , \RF2out[2][4] , \RF2out[2][3] , 
        \RF2out[2][2] , \RF2out[2][1] , \RF2out[2][0] }), .Out3({
        \RF2out[3][19] , \RF2out[3][18] , \RF2out[3][17] , \RF2out[3][16] , 
        \RF2out[3][15] , \RF2out[3][14] , \RF2out[3][13] , \RF2out[3][12] , 
        \RF2out[3][11] , \RF2out[3][10] , \RF2out[3][9] , \RF2out[3][8] , 
        \RF2out[3][7] , \RF2out[3][6] , \RF2out[3][5] , \RF2out[3][4] , 
        \RF2out[3][3] , \RF2out[3][2] , \RF2out[3][1] , \RF2out[3][0] }), 
        .Out4({\RF2out[4][19] , \RF2out[4][18] , \RF2out[4][17] , 
        \RF2out[4][16] , \RF2out[4][15] , \RF2out[4][14] , \RF2out[4][13] , 
        \RF2out[4][12] , \RF2out[4][11] , \RF2out[4][10] , \RF2out[4][9] , 
        \RF2out[4][8] , \RF2out[4][7] , \RF2out[4][6] , \RF2out[4][5] , 
        \RF2out[4][4] , \RF2out[4][3] , \RF2out[4][2] , \RF2out[4][1] , 
        \RF2out[4][0] }), .Out5({\RF2out[5][19] , \RF2out[5][18] , 
        \RF2out[5][17] , \RF2out[5][16] , \RF2out[5][15] , \RF2out[5][14] , 
        \RF2out[5][13] , \RF2out[5][12] , \RF2out[5][11] , \RF2out[5][10] , 
        \RF2out[5][9] , \RF2out[5][8] , \RF2out[5][7] , \RF2out[5][6] , 
        \RF2out[5][5] , \RF2out[5][4] , \RF2out[5][3] , \RF2out[5][2] , 
        \RF2out[5][1] , \RF2out[5][0] }), .Out6({\RF2out[6][19] , 
        \RF2out[6][18] , \RF2out[6][17] , \RF2out[6][16] , \RF2out[6][15] , 
        \RF2out[6][14] , \RF2out[6][13] , \RF2out[6][12] , \RF2out[6][11] , 
        \RF2out[6][10] , \RF2out[6][9] , \RF2out[6][8] , \RF2out[6][7] , 
        \RF2out[6][6] , \RF2out[6][5] , \RF2out[6][4] , \RF2out[6][3] , 
        \RF2out[6][2] , \RF2out[6][1] , \RF2out[6][0] }), .Out7({
        \RF2out[7][19] , \RF2out[7][18] , \RF2out[7][17] , \RF2out[7][16] , 
        \RF2out[7][15] , \RF2out[7][14] , \RF2out[7][13] , \RF2out[7][12] , 
        \RF2out[7][11] , \RF2out[7][10] , \RF2out[7][9] , \RF2out[7][8] , 
        \RF2out[7][7] , \RF2out[7][6] , \RF2out[7][5] , \RF2out[7][4] , 
        \RF2out[7][3] , \RF2out[7][2] , \RF2out[7][1] , \RF2out[7][0] }), 
        .Out8({\RF2out[8][19] , \RF2out[8][18] , \RF2out[8][17] , 
        \RF2out[8][16] , \RF2out[8][15] , \RF2out[8][14] , \RF2out[8][13] , 
        \RF2out[8][12] , \RF2out[8][11] , \RF2out[8][10] , \RF2out[8][9] , 
        \RF2out[8][8] , \RF2out[8][7] , \RF2out[8][6] , \RF2out[8][5] , 
        \RF2out[8][4] , \RF2out[8][3] , \RF2out[8][2] , \RF2out[8][1] , 
        \RF2out[8][0] }) );
  PE_47 PE25 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[7:0]), .filter(
        filter[31:24]), .psumIn(pout34), .psumOut(pout25) );
  PE_46 PE26 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[15:8]), .filter(
        filter[31:24]), .psumIn(pout35), .psumOut(pout26) );
  PE_45 PE27 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[23:16]), .filter(
        filter[31:24]), .psumIn(pout36), .psumOut(pout27) );
  PE_44 PE28 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[31:24]), .filter(
        filter[31:24]), .psumIn(pout37), .psumOut(pout28) );
  PE_43 PE29 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[39:32]), .filter(
        filter[31:24]), .psumIn(pout38), .psumOut(pout29) );
  PE_42 PE30 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[47:40]), .filter(
        filter[31:24]), .psumIn(pout39), .psumOut(pout30) );
  PE_41 PE31 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[55:48]), .filter(
        filter[31:24]), .psumIn(pout40), .psumOut(pout31) );
  PE_40 PE32 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[63:56]), .filter(
        filter[31:24]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout32) );
  PE_39 PE33 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[7:0]), .filter(
        filter[39:32]), .psumIn(pout42), .psumOut(pout33) );
  PE_38 PE34 ( .clk(clk), .rst(rst), .ifmap(ifmapIn2[15:8]), .filter(
        filter[39:32]), .psumIn(pout43), .psumOut(pout34) );
  PE_37 PE35 ( .clk(clk), .rst(n4), .ifmap(ifmapIn2[23:16]), .filter(
        filter[39:32]), .psumIn(pout44), .psumOut(pout35) );
  PE_36 PE36 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[31:24]), .filter(
        filter[39:32]), .psumIn(pout45), .psumOut(pout36) );
  PE_35 PE37 ( .clk(clk), .rst(n5), .ifmap(ifmapIn2[39:32]), .filter(
        filter[39:32]), .psumIn(pout46), .psumOut(pout37) );
  PE_34 PE38 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[47:40]), .filter(
        filter[39:32]), .psumIn(pout47), .psumOut(pout38) );
  PE_33 PE39 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[55:48]), .filter(
        filter[39:32]), .psumIn(pout48), .psumOut(pout39) );
  PE_32 PE40 ( .clk(clk), .rst(n5), .ifmap(ifmapIn2[63:56]), .filter(
        filter[39:32]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout40) );
  PE_31 PE41 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[7:0]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout41) );
  PE_30 PE42 ( .clk(clk), .rst(n5), .ifmap(ifmapIn2[15:8]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout42) );
  PE_29 PE43 ( .clk(clk), .rst(n4), .ifmap(ifmapIn2[23:16]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout43) );
  PE_28 PE44 ( .clk(clk), .rst(n4), .ifmap(ifmapIn2[31:24]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout44) );
  PE_27 PE45 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[39:32]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout45) );
  PE_26 PE46 ( .clk(clk), .rst(n6), .ifmap(ifmapIn2[47:40]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout46) );
  PE_25 PE47 ( .clk(clk), .rst(n5), .ifmap(ifmapIn2[55:48]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout47) );
  PE_24 PE48 ( .clk(clk), .rst(n5), .ifmap(ifmapIn2[63:56]), .filter(
        filter[47:40]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout48) );
  RfTemp_0 Rf3 ( .clk(clk), .rst(n3), .In1(pout65), .In2(pout57), .In3(pout49), 
        .In4(pout50), .In5(pout51), .In6(pout52), .In7(pout53), .In8(pout54), 
        .In9(pout55), .In10(pout56), .Out1({\RF3out[1][19] , \RF3out[1][18] , 
        \RF3out[1][17] , \RF3out[1][16] , \RF3out[1][15] , \RF3out[1][14] , 
        \RF3out[1][13] , \RF3out[1][12] , \RF3out[1][11] , \RF3out[1][10] , 
        \RF3out[1][9] , \RF3out[1][8] , \RF3out[1][7] , \RF3out[1][6] , 
        \RF3out[1][5] , \RF3out[1][4] , \RF3out[1][3] , \RF3out[1][2] , 
        \RF3out[1][1] , \RF3out[1][0] }), .Out2({\RF3out[2][19] , 
        \RF3out[2][18] , \RF3out[2][17] , \RF3out[2][16] , \RF3out[2][15] , 
        \RF3out[2][14] , \RF3out[2][13] , \RF3out[2][12] , \RF3out[2][11] , 
        \RF3out[2][10] , \RF3out[2][9] , \RF3out[2][8] , \RF3out[2][7] , 
        \RF3out[2][6] , \RF3out[2][5] , \RF3out[2][4] , \RF3out[2][3] , 
        \RF3out[2][2] , \RF3out[2][1] , \RF3out[2][0] }), .Out3({
        \RF3out[3][19] , \RF3out[3][18] , \RF3out[3][17] , \RF3out[3][16] , 
        \RF3out[3][15] , \RF3out[3][14] , \RF3out[3][13] , \RF3out[3][12] , 
        \RF3out[3][11] , \RF3out[3][10] , \RF3out[3][9] , \RF3out[3][8] , 
        \RF3out[3][7] , \RF3out[3][6] , \RF3out[3][5] , \RF3out[3][4] , 
        \RF3out[3][3] , \RF3out[3][2] , \RF3out[3][1] , \RF3out[3][0] }), 
        .Out4({\RF3out[4][19] , \RF3out[4][18] , \RF3out[4][17] , 
        \RF3out[4][16] , \RF3out[4][15] , \RF3out[4][14] , \RF3out[4][13] , 
        \RF3out[4][12] , \RF3out[4][11] , \RF3out[4][10] , \RF3out[4][9] , 
        \RF3out[4][8] , \RF3out[4][7] , \RF3out[4][6] , \RF3out[4][5] , 
        \RF3out[4][4] , \RF3out[4][3] , \RF3out[4][2] , \RF3out[4][1] , 
        \RF3out[4][0] }), .Out5({\RF3out[5][19] , \RF3out[5][18] , 
        \RF3out[5][17] , \RF3out[5][16] , \RF3out[5][15] , \RF3out[5][14] , 
        \RF3out[5][13] , \RF3out[5][12] , \RF3out[5][11] , \RF3out[5][10] , 
        \RF3out[5][9] , \RF3out[5][8] , \RF3out[5][7] , \RF3out[5][6] , 
        \RF3out[5][5] , \RF3out[5][4] , \RF3out[5][3] , \RF3out[5][2] , 
        \RF3out[5][1] , \RF3out[5][0] }), .Out6({\RF3out[6][19] , 
        \RF3out[6][18] , \RF3out[6][17] , \RF3out[6][16] , \RF3out[6][15] , 
        \RF3out[6][14] , \RF3out[6][13] , \RF3out[6][12] , \RF3out[6][11] , 
        \RF3out[6][10] , \RF3out[6][9] , \RF3out[6][8] , \RF3out[6][7] , 
        \RF3out[6][6] , \RF3out[6][5] , \RF3out[6][4] , \RF3out[6][3] , 
        \RF3out[6][2] , \RF3out[6][1] , \RF3out[6][0] }), .Out7({
        \RF3out[7][19] , \RF3out[7][18] , \RF3out[7][17] , \RF3out[7][16] , 
        \RF3out[7][15] , \RF3out[7][14] , \RF3out[7][13] , \RF3out[7][12] , 
        \RF3out[7][11] , \RF3out[7][10] , \RF3out[7][9] , \RF3out[7][8] , 
        \RF3out[7][7] , \RF3out[7][6] , \RF3out[7][5] , \RF3out[7][4] , 
        \RF3out[7][3] , \RF3out[7][2] , \RF3out[7][1] , \RF3out[7][0] }), 
        .Out8({\RF3out[8][19] , \RF3out[8][18] , \RF3out[8][17] , 
        \RF3out[8][16] , \RF3out[8][15] , \RF3out[8][14] , \RF3out[8][13] , 
        \RF3out[8][12] , \RF3out[8][11] , \RF3out[8][10] , \RF3out[8][9] , 
        \RF3out[8][8] , \RF3out[8][7] , \RF3out[8][6] , \RF3out[8][5] , 
        \RF3out[8][4] , \RF3out[8][3] , \RF3out[8][2] , \RF3out[8][1] , 
        \RF3out[8][0] }), .Out9({\RF3out[9][19] , \RF3out[9][18] , 
        \RF3out[9][17] , \RF3out[9][16] , \RF3out[9][15] , \RF3out[9][14] , 
        \RF3out[9][13] , \RF3out[9][12] , \RF3out[9][11] , \RF3out[9][10] , 
        \RF3out[9][9] , \RF3out[9][8] , \RF3out[9][7] , \RF3out[9][6] , 
        \RF3out[9][5] , \RF3out[9][4] , \RF3out[9][3] , \RF3out[9][2] , 
        \RF3out[9][1] , \RF3out[9][0] }), .Out10({\RF3out[10][19] , 
        \RF3out[10][18] , \RF3out[10][17] , \RF3out[10][16] , \RF3out[10][15] , 
        \RF3out[10][14] , \RF3out[10][13] , \RF3out[10][12] , \RF3out[10][11] , 
        \RF3out[10][10] , \RF3out[10][9] , \RF3out[10][8] , \RF3out[10][7] , 
        \RF3out[10][6] , \RF3out[10][5] , \RF3out[10][4] , \RF3out[10][3] , 
        \RF3out[10][2] , \RF3out[10][1] , \RF3out[10][0] }) );
  PE_23 PE49 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[7:0]), .filter(
        filter[55:48]), .psumIn(pout58), .psumOut(pout49) );
  PE_22 PE50 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[15:8]), .filter(
        filter[55:48]), .psumIn(pout59), .psumOut(pout50) );
  PE_21 PE51 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[23:16]), .filter(
        filter[55:48]), .psumIn(pout60), .psumOut(pout51) );
  PE_20 PE52 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[31:24]), .filter(
        filter[55:48]), .psumIn(pout61), .psumOut(pout52) );
  PE_19 PE53 ( .clk(clk), .rst(n6), .ifmap(ifmapIn3[39:32]), .filter(
        filter[55:48]), .psumIn(pout62), .psumOut(pout53) );
  PE_18 PE54 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[47:40]), .filter(
        filter[55:48]), .psumIn(pout63), .psumOut(pout54) );
  PE_17 PE55 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[55:48]), .filter(
        filter[55:48]), .psumIn(pout64), .psumOut(pout55) );
  PE_16 PE56 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[63:56]), .filter(
        filter[55:48]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout56) );
  PE_15 PE57 ( .clk(clk), .rst(n6), .ifmap(ifmapIn3[7:0]), .filter(
        filter[63:56]), .psumIn(pout66), .psumOut(pout57) );
  PE_14 PE58 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[15:8]), .filter(
        filter[63:56]), .psumIn(pout67), .psumOut(pout58) );
  PE_13 PE59 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[23:16]), .filter(
        filter[63:56]), .psumIn(pout68), .psumOut(pout59) );
  PE_12 PE60 ( .clk(clk), .rst(n6), .ifmap(ifmapIn3[31:24]), .filter(
        filter[63:56]), .psumIn(pout69), .psumOut(pout60) );
  PE_11 PE61 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[39:32]), .filter(
        filter[63:56]), .psumIn(pout70), .psumOut(pout61) );
  PE_10 PE62 ( .clk(clk), .rst(n6), .ifmap(ifmapIn3[47:40]), .filter(
        filter[63:56]), .psumIn(pout71), .psumOut(pout62) );
  PE_9 PE63 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[55:48]), .filter(
        filter[63:56]), .psumIn(pout72), .psumOut(pout63) );
  PE_8 PE64 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[63:56]), .filter(
        filter[63:56]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 
        1'b0}), .psumOut(pout64) );
  PE_7 PE65 ( .clk(clk), .rst(n6), .ifmap(ifmapIn3[7:0]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout65) );
  PE_6 PE66 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[15:8]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout66) );
  PE_5 PE67 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[23:16]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout67) );
  PE_4 PE68 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[31:24]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout68) );
  PE_3 PE69 ( .clk(clk), .rst(rst), .ifmap(ifmapIn3[39:32]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout69) );
  PE_2 PE70 ( .clk(clk), .rst(n6), .ifmap(ifmapIn3[47:40]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout70) );
  PE_1 PE71 ( .clk(clk), .rst(n5), .ifmap(ifmapIn3[55:48]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout71) );
  PE_0 PE72 ( .clk(clk), .rst(n4), .ifmap(ifmapIn3[63:56]), .filter(
        filter[71:64]), .psumIn({1'b0, 1'b0, 1'b0, 1'b0, bias}), .psumOut(
        pout72) );
  Adder_9 Adder1 ( .clk(clk), .rst(n3), .Rf1_sum({\RF1out[1][19] , 
        \RF1out[1][18] , \RF1out[1][17] , \RF1out[1][16] , \RF1out[1][15] , 
        \RF1out[1][14] , \RF1out[1][13] , \RF1out[1][12] , \RF1out[1][11] , 
        \RF1out[1][10] , \RF1out[1][9] , \RF1out[1][8] , \RF1out[1][7] , 
        \RF1out[1][6] , \RF1out[1][5] , \RF1out[1][4] , \RF1out[1][3] , 
        \RF1out[1][2] , \RF1out[1][1] , \RF1out[1][0] }), .Rf2_sum({
        \RF2out[1][19] , \RF2out[1][18] , \RF2out[1][17] , \RF2out[1][16] , 
        \RF2out[1][15] , \RF2out[1][14] , \RF2out[1][13] , \RF2out[1][12] , 
        \RF2out[1][11] , \RF2out[1][10] , \RF2out[1][9] , \RF2out[1][8] , 
        \RF2out[1][7] , \RF2out[1][6] , \RF2out[1][5] , \RF2out[1][4] , 
        \RF2out[1][3] , \RF2out[1][2] , \RF2out[1][1] , \RF2out[1][0] }), 
        .Rf3_sum({\RF3out[1][19] , \RF3out[1][18] , \RF3out[1][17] , 
        \RF3out[1][16] , \RF3out[1][15] , \RF3out[1][14] , \RF3out[1][13] , 
        \RF3out[1][12] , \RF3out[1][11] , \RF3out[1][10] , \RF3out[1][9] , 
        \RF3out[1][8] , \RF3out[1][7] , \RF3out[1][6] , \RF3out[1][5] , 
        \RF3out[1][4] , \RF3out[1][3] , \RF3out[1][2] , \RF3out[1][1] , 
        \RF3out[1][0] }) );
  Adder_8 Adder2 ( .clk(clk), .rst(n6), .Rf1_sum({\RF1out[2][19] , 
        \RF1out[2][18] , \RF1out[2][17] , \RF1out[2][16] , \RF1out[2][15] , 
        \RF1out[2][14] , \RF1out[2][13] , \RF1out[2][12] , \RF1out[2][11] , 
        \RF1out[2][10] , \RF1out[2][9] , \RF1out[2][8] , \RF1out[2][7] , 
        \RF1out[2][6] , \RF1out[2][5] , \RF1out[2][4] , \RF1out[2][3] , 
        \RF1out[2][2] , \RF1out[2][1] , \RF1out[2][0] }), .Rf2_sum({
        \RF2out[2][19] , \RF2out[2][18] , \RF2out[2][17] , \RF2out[2][16] , 
        \RF2out[2][15] , \RF2out[2][14] , \RF2out[2][13] , \RF2out[2][12] , 
        \RF2out[2][11] , \RF2out[2][10] , \RF2out[2][9] , \RF2out[2][8] , 
        \RF2out[2][7] , \RF2out[2][6] , \RF2out[2][5] , \RF2out[2][4] , 
        \RF2out[2][3] , \RF2out[2][2] , \RF2out[2][1] , \RF2out[2][0] }), 
        .Rf3_sum({\RF3out[2][19] , \RF3out[2][18] , \RF3out[2][17] , 
        \RF3out[2][16] , \RF3out[2][15] , \RF3out[2][14] , \RF3out[2][13] , 
        \RF3out[2][12] , \RF3out[2][11] , \RF3out[2][10] , \RF3out[2][9] , 
        \RF3out[2][8] , \RF3out[2][7] , \RF3out[2][6] , \RF3out[2][5] , 
        \RF3out[2][4] , \RF3out[2][3] , \RF3out[2][2] , \RF3out[2][1] , 
        \RF3out[2][0] }) );
  Adder_7 Adder3 ( .clk(clk), .rst(n4), .Rf1_sum({\RF1out[3][19] , 
        \RF1out[3][18] , \RF1out[3][17] , \RF1out[3][16] , \RF1out[3][15] , 
        \RF1out[3][14] , \RF1out[3][13] , \RF1out[3][12] , \RF1out[3][11] , 
        \RF1out[3][10] , \RF1out[3][9] , \RF1out[3][8] , \RF1out[3][7] , 
        \RF1out[3][6] , \RF1out[3][5] , \RF1out[3][4] , \RF1out[3][3] , 
        \RF1out[3][2] , \RF1out[3][1] , \RF1out[3][0] }), .Rf2_sum({
        \RF2out[3][19] , \RF2out[3][18] , \RF2out[3][17] , \RF2out[3][16] , 
        \RF2out[3][15] , \RF2out[3][14] , \RF2out[3][13] , \RF2out[3][12] , 
        \RF2out[3][11] , \RF2out[3][10] , \RF2out[3][9] , \RF2out[3][8] , 
        \RF2out[3][7] , \RF2out[3][6] , \RF2out[3][5] , \RF2out[3][4] , 
        \RF2out[3][3] , \RF2out[3][2] , \RF2out[3][1] , \RF2out[3][0] }), 
        .Rf3_sum({\RF3out[3][19] , \RF3out[3][18] , \RF3out[3][17] , 
        \RF3out[3][16] , \RF3out[3][15] , \RF3out[3][14] , \RF3out[3][13] , 
        \RF3out[3][12] , \RF3out[3][11] , \RF3out[3][10] , \RF3out[3][9] , 
        \RF3out[3][8] , \RF3out[3][7] , \RF3out[3][6] , \RF3out[3][5] , 
        \RF3out[3][4] , \RF3out[3][3] , \RF3out[3][2] , \RF3out[3][1] , 
        \RF3out[3][0] }) );
  Adder_6 Adder4 ( .clk(clk), .rst(n6), .Rf1_sum({\RF1out[4][19] , 
        \RF1out[4][18] , \RF1out[4][17] , \RF1out[4][16] , \RF1out[4][15] , 
        \RF1out[4][14] , \RF1out[4][13] , \RF1out[4][12] , \RF1out[4][11] , 
        \RF1out[4][10] , \RF1out[4][9] , \RF1out[4][8] , \RF1out[4][7] , 
        \RF1out[4][6] , \RF1out[4][5] , \RF1out[4][4] , \RF1out[4][3] , 
        \RF1out[4][2] , \RF1out[4][1] , \RF1out[4][0] }), .Rf2_sum({
        \RF2out[4][19] , \RF2out[4][18] , \RF2out[4][17] , \RF2out[4][16] , 
        \RF2out[4][15] , \RF2out[4][14] , \RF2out[4][13] , \RF2out[4][12] , 
        \RF2out[4][11] , \RF2out[4][10] , \RF2out[4][9] , \RF2out[4][8] , 
        \RF2out[4][7] , \RF2out[4][6] , \RF2out[4][5] , \RF2out[4][4] , 
        \RF2out[4][3] , \RF2out[4][2] , \RF2out[4][1] , \RF2out[4][0] }), 
        .Rf3_sum({\RF3out[4][19] , \RF3out[4][18] , \RF3out[4][17] , 
        \RF3out[4][16] , \RF3out[4][15] , \RF3out[4][14] , \RF3out[4][13] , 
        \RF3out[4][12] , \RF3out[4][11] , \RF3out[4][10] , \RF3out[4][9] , 
        \RF3out[4][8] , \RF3out[4][7] , \RF3out[4][6] , \RF3out[4][5] , 
        \RF3out[4][4] , \RF3out[4][3] , \RF3out[4][2] , \RF3out[4][1] , 
        \RF3out[4][0] }) );
  Adder_5 Adder5 ( .clk(clk), .rst(n6), .Rf1_sum({\RF1out[5][19] , 
        \RF1out[5][18] , \RF1out[5][17] , \RF1out[5][16] , \RF1out[5][15] , 
        \RF1out[5][14] , \RF1out[5][13] , \RF1out[5][12] , \RF1out[5][11] , 
        \RF1out[5][10] , \RF1out[5][9] , \RF1out[5][8] , \RF1out[5][7] , 
        \RF1out[5][6] , \RF1out[5][5] , \RF1out[5][4] , \RF1out[5][3] , 
        \RF1out[5][2] , \RF1out[5][1] , \RF1out[5][0] }), .Rf2_sum({
        \RF2out[5][19] , \RF2out[5][18] , \RF2out[5][17] , \RF2out[5][16] , 
        \RF2out[5][15] , \RF2out[5][14] , \RF2out[5][13] , \RF2out[5][12] , 
        \RF2out[5][11] , \RF2out[5][10] , \RF2out[5][9] , \RF2out[5][8] , 
        \RF2out[5][7] , \RF2out[5][6] , \RF2out[5][5] , \RF2out[5][4] , 
        \RF2out[5][3] , \RF2out[5][2] , \RF2out[5][1] , \RF2out[5][0] }), 
        .Rf3_sum({\RF3out[5][19] , \RF3out[5][18] , \RF3out[5][17] , 
        \RF3out[5][16] , \RF3out[5][15] , \RF3out[5][14] , \RF3out[5][13] , 
        \RF3out[5][12] , \RF3out[5][11] , \RF3out[5][10] , \RF3out[5][9] , 
        \RF3out[5][8] , \RF3out[5][7] , \RF3out[5][6] , \RF3out[5][5] , 
        \RF3out[5][4] , \RF3out[5][3] , \RF3out[5][2] , \RF3out[5][1] , 
        \RF3out[5][0] }) );
  Adder_4 Adder6 ( .clk(clk), .rst(n4), .Rf1_sum({\RF1out[6][19] , 
        \RF1out[6][18] , \RF1out[6][17] , \RF1out[6][16] , \RF1out[6][15] , 
        \RF1out[6][14] , \RF1out[6][13] , \RF1out[6][12] , \RF1out[6][11] , 
        \RF1out[6][10] , \RF1out[6][9] , \RF1out[6][8] , \RF1out[6][7] , 
        \RF1out[6][6] , \RF1out[6][5] , \RF1out[6][4] , \RF1out[6][3] , 
        \RF1out[6][2] , \RF1out[6][1] , \RF1out[6][0] }), .Rf2_sum({
        \RF2out[6][19] , \RF2out[6][18] , \RF2out[6][17] , \RF2out[6][16] , 
        \RF2out[6][15] , \RF2out[6][14] , \RF2out[6][13] , \RF2out[6][12] , 
        \RF2out[6][11] , \RF2out[6][10] , \RF2out[6][9] , \RF2out[6][8] , 
        \RF2out[6][7] , \RF2out[6][6] , \RF2out[6][5] , \RF2out[6][4] , 
        \RF2out[6][3] , \RF2out[6][2] , \RF2out[6][1] , \RF2out[6][0] }), 
        .Rf3_sum({\RF3out[6][19] , \RF3out[6][18] , \RF3out[6][17] , 
        \RF3out[6][16] , \RF3out[6][15] , \RF3out[6][14] , \RF3out[6][13] , 
        \RF3out[6][12] , \RF3out[6][11] , \RF3out[6][10] , \RF3out[6][9] , 
        \RF3out[6][8] , \RF3out[6][7] , \RF3out[6][6] , \RF3out[6][5] , 
        \RF3out[6][4] , \RF3out[6][3] , \RF3out[6][2] , \RF3out[6][1] , 
        \RF3out[6][0] }) );
  Adder_3 Adder7 ( .clk(clk), .rst(n4), .Rf1_sum({\RF1out[7][19] , 
        \RF1out[7][18] , \RF1out[7][17] , \RF1out[7][16] , \RF1out[7][15] , 
        \RF1out[7][14] , \RF1out[7][13] , \RF1out[7][12] , \RF1out[7][11] , 
        \RF1out[7][10] , \RF1out[7][9] , \RF1out[7][8] , \RF1out[7][7] , 
        \RF1out[7][6] , \RF1out[7][5] , \RF1out[7][4] , \RF1out[7][3] , 
        \RF1out[7][2] , \RF1out[7][1] , \RF1out[7][0] }), .Rf2_sum({
        \RF2out[7][19] , \RF2out[7][18] , \RF2out[7][17] , \RF2out[7][16] , 
        \RF2out[7][15] , \RF2out[7][14] , \RF2out[7][13] , \RF2out[7][12] , 
        \RF2out[7][11] , \RF2out[7][10] , \RF2out[7][9] , \RF2out[7][8] , 
        \RF2out[7][7] , \RF2out[7][6] , \RF2out[7][5] , \RF2out[7][4] , 
        \RF2out[7][3] , \RF2out[7][2] , \RF2out[7][1] , \RF2out[7][0] }), 
        .Rf3_sum({\RF3out[7][19] , \RF3out[7][18] , \RF3out[7][17] , 
        \RF3out[7][16] , \RF3out[7][15] , \RF3out[7][14] , \RF3out[7][13] , 
        \RF3out[7][12] , \RF3out[7][11] , \RF3out[7][10] , \RF3out[7][9] , 
        \RF3out[7][8] , \RF3out[7][7] , \RF3out[7][6] , \RF3out[7][5] , 
        \RF3out[7][4] , \RF3out[7][3] , \RF3out[7][2] , \RF3out[7][1] , 
        \RF3out[7][0] }) );
  Adder_2 Adder8 ( .clk(clk), .rst(n6), .Rf1_sum({\RF1out[8][19] , 
        \RF1out[8][18] , \RF1out[8][17] , \RF1out[8][16] , \RF1out[8][15] , 
        \RF1out[8][14] , \RF1out[8][13] , \RF1out[8][12] , \RF1out[8][11] , 
        \RF1out[8][10] , \RF1out[8][9] , \RF1out[8][8] , \RF1out[8][7] , 
        \RF1out[8][6] , \RF1out[8][5] , \RF1out[8][4] , \RF1out[8][3] , 
        \RF1out[8][2] , \RF1out[8][1] , \RF1out[8][0] }), .Rf2_sum({
        \RF2out[8][19] , \RF2out[8][18] , \RF2out[8][17] , \RF2out[8][16] , 
        \RF2out[8][15] , \RF2out[8][14] , \RF2out[8][13] , \RF2out[8][12] , 
        \RF2out[8][11] , \RF2out[8][10] , \RF2out[8][9] , \RF2out[8][8] , 
        \RF2out[8][7] , \RF2out[8][6] , \RF2out[8][5] , \RF2out[8][4] , 
        \RF2out[8][3] , \RF2out[8][2] , \RF2out[8][1] , \RF2out[8][0] }), 
        .Rf3_sum({\RF3out[8][19] , \RF3out[8][18] , \RF3out[8][17] , 
        \RF3out[8][16] , \RF3out[8][15] , \RF3out[8][14] , \RF3out[8][13] , 
        \RF3out[8][12] , \RF3out[8][11] , \RF3out[8][10] , \RF3out[8][9] , 
        \RF3out[8][8] , \RF3out[8][7] , \RF3out[8][6] , \RF3out[8][5] , 
        \RF3out[8][4] , \RF3out[8][3] , \RF3out[8][2] , \RF3out[8][1] , 
        \RF3out[8][0] }) );
  Adder_1 Adder9 ( .clk(clk), .rst(n5), .Rf1_sum({\RF3out[9][19] , 
        \RF3out[9][18] , \RF3out[9][17] , \RF3out[9][16] , \RF3out[9][15] , 
        \RF3out[9][14] , \RF3out[9][13] , \RF3out[9][12] , \RF3out[9][11] , 
        \RF3out[9][10] , \RF3out[9][9] , \RF3out[9][8] , \RF3out[9][7] , 
        \RF3out[9][6] , \RF3out[9][5] , \RF3out[9][4] , \RF3out[9][3] , 
        \RF3out[9][2] , n1, \RF3out[9][0] }), .Rf2_sum({\RF3out[9][19] , 
        \RF3out[9][18] , \RF3out[9][17] , \RF3out[9][16] , \RF3out[9][15] , 
        \RF3out[9][14] , \RF3out[9][13] , \RF3out[9][12] , \RF3out[9][11] , 
        \RF3out[9][10] , \RF3out[9][9] , \RF3out[9][8] , \RF3out[9][7] , 
        \RF3out[9][6] , \RF3out[9][5] , \RF3out[9][4] , \RF3out[9][3] , 
        \RF3out[9][2] , n1, \RF3out[9][0] }), .Rf3_sum({\RF3out[9][19] , 
        \RF3out[9][18] , \RF3out[9][17] , \RF3out[9][16] , \RF3out[9][15] , 
        \RF3out[9][14] , \RF3out[9][13] , \RF3out[9][12] , \RF3out[9][11] , 
        \RF3out[9][10] , \RF3out[9][9] , \RF3out[9][8] , \RF3out[9][7] , 
        \RF3out[9][6] , \RF3out[9][5] , \RF3out[9][4] , \RF3out[9][3] , 
        \RF3out[9][2] , n1, \RF3out[9][0] }) );
  Adder_0 Adder10 ( .clk(clk), .rst(n4), .Rf1_sum({\RF3out[10][19] , 
        \RF3out[10][18] , \RF3out[10][17] , \RF3out[10][16] , \RF3out[10][15] , 
        \RF3out[10][14] , \RF3out[10][13] , \RF3out[10][12] , \RF3out[10][11] , 
        \RF3out[10][10] , \RF3out[10][9] , \RF3out[10][8] , \RF3out[10][7] , 
        \RF3out[10][6] , \RF3out[10][5] , \RF3out[10][4] , \RF3out[10][3] , 
        \RF3out[10][2] , n2, \RF3out[10][0] }), .Rf2_sum({\RF3out[10][19] , 
        \RF3out[10][18] , \RF3out[10][17] , \RF3out[10][16] , \RF3out[10][15] , 
        \RF3out[10][14] , \RF3out[10][13] , \RF3out[10][12] , \RF3out[10][11] , 
        \RF3out[10][10] , \RF3out[10][9] , \RF3out[10][8] , \RF3out[10][7] , 
        \RF3out[10][6] , \RF3out[10][5] , \RF3out[10][4] , \RF3out[10][3] , 
        \RF3out[10][2] , n2, \RF3out[10][0] }), .Rf3_sum({\RF3out[10][19] , 
        \RF3out[10][18] , \RF3out[10][17] , \RF3out[10][16] , \RF3out[10][15] , 
        \RF3out[10][14] , \RF3out[10][13] , \RF3out[10][12] , \RF3out[10][11] , 
        \RF3out[10][10] , \RF3out[10][9] , \RF3out[10][8] , \RF3out[10][7] , 
        \RF3out[10][6] , \RF3out[10][5] , \RF3out[10][4] , \RF3out[10][3] , 
        \RF3out[10][2] , n2, \RF3out[10][0] }) );
  BUFX8 U2 ( .A(\RF3out[9][1] ), .Y(n1) );
  BUFX8 U3 ( .A(\RF3out[10][1] ), .Y(n2) );
  CLKBUFX3 U4 ( .A(rst), .Y(n3) );
  CLKBUFX3 U5 ( .A(rst), .Y(n4) );
  CLKBUFX3 U6 ( .A(rst), .Y(n5) );
  CLKBUFX3 U7 ( .A(rst), .Y(n6) );
endmodule

